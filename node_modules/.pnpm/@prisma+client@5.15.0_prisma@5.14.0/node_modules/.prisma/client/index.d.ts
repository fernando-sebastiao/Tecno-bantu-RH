
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Carreira
 * 
 */
export type Carreira = $Result.DefaultSelection<Prisma.$CarreiraPayload>
/**
 * Model SubCarreira
 * 
 */
export type SubCarreira = $Result.DefaultSelection<Prisma.$SubCarreiraPayload>
/**
 * Model CategoriaRH
 * 
 */
export type CategoriaRH = $Result.DefaultSelection<Prisma.$CategoriaRHPayload>
/**
 * Model Funcao
 * 
 */
export type Funcao = $Result.DefaultSelection<Prisma.$FuncaoPayload>
/**
 * Model Banco
 * 
 */
export type Banco = $Result.DefaultSelection<Prisma.$BancoPayload>
/**
 * Model Funcionario
 * 
 */
export type Funcionario = $Result.DefaultSelection<Prisma.$FuncionarioPayload>
/**
 * Model DadosProfissionais
 * 
 */
export type DadosProfissionais = $Result.DefaultSelection<Prisma.$DadosProfissionaisPayload>
/**
 * Model Formacoes
 * 
 */
export type Formacoes = $Result.DefaultSelection<Prisma.$FormacoesPayload>
/**
 * Model Publicacoes
 * 
 */
export type Publicacoes = $Result.DefaultSelection<Prisma.$PublicacoesPayload>
/**
 * Model ExperiencialLaboral
 * 
 */
export type ExperiencialLaboral = $Result.DefaultSelection<Prisma.$ExperiencialLaboralPayload>
/**
 * Model Departamento
 * 
 */
export type Departamento = $Result.DefaultSelection<Prisma.$DepartamentoPayload>
/**
 * Model FuncionarioDepartamento
 * 
 */
export type FuncionarioDepartamento = $Result.DefaultSelection<Prisma.$FuncionarioDepartamentoPayload>
/**
 * Model FichaAvaliacao
 * 
 */
export type FichaAvaliacao = $Result.DefaultSelection<Prisma.$FichaAvaliacaoPayload>
/**
 * Model Competencia
 * 
 */
export type Competencia = $Result.DefaultSelection<Prisma.$CompetenciaPayload>
/**
 * Model PerguntaFichaAvaliacao
 * 
 */
export type PerguntaFichaAvaliacao = $Result.DefaultSelection<Prisma.$PerguntaFichaAvaliacaoPayload>
/**
 * Model Avaliacao
 * 
 */
export type Avaliacao = $Result.DefaultSelection<Prisma.$AvaliacaoPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const Regime: {
  geral: 'geral',
  especial: 'especial'
};

export type Regime = (typeof Regime)[keyof typeof Regime]


export const Genero: {
  masculino: 'masculino',
  feminino: 'feminino'
};

export type Genero = (typeof Genero)[keyof typeof Genero]


export const Identificacao: {
  BI: 'BI',
  Passaporte: 'Passaporte',
  Residente: 'Residente',
  Outro: 'Outro'
};

export type Identificacao = (typeof Identificacao)[keyof typeof Identificacao]


export const NIVEL_ACADEMICO: {
  Base: 'Base',
  Medio: 'Medio',
  Universitario: 'Universitario',
  Licenciado: 'Licenciado',
  Mestrado: 'Mestrado',
  Doctoramento: 'Doctoramento'
};

export type NIVEL_ACADEMICO = (typeof NIVEL_ACADEMICO)[keyof typeof NIVEL_ACADEMICO]


export const Contrato: {
  CTD: 'CTD',
  CAP: 'CAP'
};

export type Contrato = (typeof Contrato)[keyof typeof Contrato]


export const Tipo: {
  livro: 'livro',
  cientifico: 'cientifico',
  outro: 'outro'
};

export type Tipo = (typeof Tipo)[keyof typeof Tipo]


export const Criterio: {
  Comportamental: 'Comportamental',
  Tecnico: 'Tecnico'
};

export type Criterio = (typeof Criterio)[keyof typeof Criterio]


export const TipoAvaliacao: {
  Auto_Avaliacao: 'Auto_Avaliacao',
  Departamento: 'Departamento'
};

export type TipoAvaliacao = (typeof TipoAvaliacao)[keyof typeof TipoAvaliacao]


export const Status: {
  Submetido: 'Submetido',
  Aprovado: 'Aprovado',
  Rejeitado: 'Rejeitado',
  Requerido: 'Requerido'
};

export type Status = (typeof Status)[keyof typeof Status]

}

export type Regime = $Enums.Regime

export const Regime: typeof $Enums.Regime

export type Genero = $Enums.Genero

export const Genero: typeof $Enums.Genero

export type Identificacao = $Enums.Identificacao

export const Identificacao: typeof $Enums.Identificacao

export type NIVEL_ACADEMICO = $Enums.NIVEL_ACADEMICO

export const NIVEL_ACADEMICO: typeof $Enums.NIVEL_ACADEMICO

export type Contrato = $Enums.Contrato

export const Contrato: typeof $Enums.Contrato

export type Tipo = $Enums.Tipo

export const Tipo: typeof $Enums.Tipo

export type Criterio = $Enums.Criterio

export const Criterio: typeof $Enums.Criterio

export type TipoAvaliacao = $Enums.TipoAvaliacao

export const TipoAvaliacao: typeof $Enums.TipoAvaliacao

export type Status = $Enums.Status

export const Status: typeof $Enums.Status

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Carreiras
 * const carreiras = await prisma.carreira.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Carreiras
   * const carreiras = await prisma.carreira.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.carreira`: Exposes CRUD operations for the **Carreira** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Carreiras
    * const carreiras = await prisma.carreira.findMany()
    * ```
    */
  get carreira(): Prisma.CarreiraDelegate<ExtArgs>;

  /**
   * `prisma.subCarreira`: Exposes CRUD operations for the **SubCarreira** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SubCarreiras
    * const subCarreiras = await prisma.subCarreira.findMany()
    * ```
    */
  get subCarreira(): Prisma.SubCarreiraDelegate<ExtArgs>;

  /**
   * `prisma.categoriaRH`: Exposes CRUD operations for the **CategoriaRH** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CategoriaRHS
    * const categoriaRHS = await prisma.categoriaRH.findMany()
    * ```
    */
  get categoriaRH(): Prisma.CategoriaRHDelegate<ExtArgs>;

  /**
   * `prisma.funcao`: Exposes CRUD operations for the **Funcao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Funcaos
    * const funcaos = await prisma.funcao.findMany()
    * ```
    */
  get funcao(): Prisma.FuncaoDelegate<ExtArgs>;

  /**
   * `prisma.banco`: Exposes CRUD operations for the **Banco** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Bancos
    * const bancos = await prisma.banco.findMany()
    * ```
    */
  get banco(): Prisma.BancoDelegate<ExtArgs>;

  /**
   * `prisma.funcionario`: Exposes CRUD operations for the **Funcionario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Funcionarios
    * const funcionarios = await prisma.funcionario.findMany()
    * ```
    */
  get funcionario(): Prisma.FuncionarioDelegate<ExtArgs>;

  /**
   * `prisma.dadosProfissionais`: Exposes CRUD operations for the **DadosProfissionais** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DadosProfissionais
    * const dadosProfissionais = await prisma.dadosProfissionais.findMany()
    * ```
    */
  get dadosProfissionais(): Prisma.DadosProfissionaisDelegate<ExtArgs>;

  /**
   * `prisma.formacoes`: Exposes CRUD operations for the **Formacoes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Formacoes
    * const formacoes = await prisma.formacoes.findMany()
    * ```
    */
  get formacoes(): Prisma.FormacoesDelegate<ExtArgs>;

  /**
   * `prisma.publicacoes`: Exposes CRUD operations for the **Publicacoes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Publicacoes
    * const publicacoes = await prisma.publicacoes.findMany()
    * ```
    */
  get publicacoes(): Prisma.PublicacoesDelegate<ExtArgs>;

  /**
   * `prisma.experiencialLaboral`: Exposes CRUD operations for the **ExperiencialLaboral** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ExperiencialLaborals
    * const experiencialLaborals = await prisma.experiencialLaboral.findMany()
    * ```
    */
  get experiencialLaboral(): Prisma.ExperiencialLaboralDelegate<ExtArgs>;

  /**
   * `prisma.departamento`: Exposes CRUD operations for the **Departamento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Departamentos
    * const departamentos = await prisma.departamento.findMany()
    * ```
    */
  get departamento(): Prisma.DepartamentoDelegate<ExtArgs>;

  /**
   * `prisma.funcionarioDepartamento`: Exposes CRUD operations for the **FuncionarioDepartamento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FuncionarioDepartamentos
    * const funcionarioDepartamentos = await prisma.funcionarioDepartamento.findMany()
    * ```
    */
  get funcionarioDepartamento(): Prisma.FuncionarioDepartamentoDelegate<ExtArgs>;

  /**
   * `prisma.fichaAvaliacao`: Exposes CRUD operations for the **FichaAvaliacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FichaAvaliacaos
    * const fichaAvaliacaos = await prisma.fichaAvaliacao.findMany()
    * ```
    */
  get fichaAvaliacao(): Prisma.FichaAvaliacaoDelegate<ExtArgs>;

  /**
   * `prisma.competencia`: Exposes CRUD operations for the **Competencia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Competencias
    * const competencias = await prisma.competencia.findMany()
    * ```
    */
  get competencia(): Prisma.CompetenciaDelegate<ExtArgs>;

  /**
   * `prisma.perguntaFichaAvaliacao`: Exposes CRUD operations for the **PerguntaFichaAvaliacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PerguntaFichaAvaliacaos
    * const perguntaFichaAvaliacaos = await prisma.perguntaFichaAvaliacao.findMany()
    * ```
    */
  get perguntaFichaAvaliacao(): Prisma.PerguntaFichaAvaliacaoDelegate<ExtArgs>;

  /**
   * `prisma.avaliacao`: Exposes CRUD operations for the **Avaliacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Avaliacaos
    * const avaliacaos = await prisma.avaliacao.findMany()
    * ```
    */
  get avaliacao(): Prisma.AvaliacaoDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.15.0
   * Query Engine version: e9771e62de70f79a5e1c604a2d7c8e2a0a874b48
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Carreira: 'Carreira',
    SubCarreira: 'SubCarreira',
    CategoriaRH: 'CategoriaRH',
    Funcao: 'Funcao',
    Banco: 'Banco',
    Funcionario: 'Funcionario',
    DadosProfissionais: 'DadosProfissionais',
    Formacoes: 'Formacoes',
    Publicacoes: 'Publicacoes',
    ExperiencialLaboral: 'ExperiencialLaboral',
    Departamento: 'Departamento',
    FuncionarioDepartamento: 'FuncionarioDepartamento',
    FichaAvaliacao: 'FichaAvaliacao',
    Competencia: 'Competencia',
    PerguntaFichaAvaliacao: 'PerguntaFichaAvaliacao',
    Avaliacao: 'Avaliacao'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'carreira' | 'subCarreira' | 'categoriaRH' | 'funcao' | 'banco' | 'funcionario' | 'dadosProfissionais' | 'formacoes' | 'publicacoes' | 'experiencialLaboral' | 'departamento' | 'funcionarioDepartamento' | 'fichaAvaliacao' | 'competencia' | 'perguntaFichaAvaliacao' | 'avaliacao'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      Carreira: {
        payload: Prisma.$CarreiraPayload<ExtArgs>
        fields: Prisma.CarreiraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CarreiraFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CarreiraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CarreiraFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CarreiraPayload>
          }
          findFirst: {
            args: Prisma.CarreiraFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CarreiraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CarreiraFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CarreiraPayload>
          }
          findMany: {
            args: Prisma.CarreiraFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CarreiraPayload>[]
          }
          create: {
            args: Prisma.CarreiraCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CarreiraPayload>
          }
          createMany: {
            args: Prisma.CarreiraCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CarreiraCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CarreiraPayload>[]
          }
          delete: {
            args: Prisma.CarreiraDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CarreiraPayload>
          }
          update: {
            args: Prisma.CarreiraUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CarreiraPayload>
          }
          deleteMany: {
            args: Prisma.CarreiraDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CarreiraUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CarreiraUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CarreiraPayload>
          }
          aggregate: {
            args: Prisma.CarreiraAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCarreira>
          }
          groupBy: {
            args: Prisma.CarreiraGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CarreiraGroupByOutputType>[]
          }
          count: {
            args: Prisma.CarreiraCountArgs<ExtArgs>,
            result: $Utils.Optional<CarreiraCountAggregateOutputType> | number
          }
        }
      }
      SubCarreira: {
        payload: Prisma.$SubCarreiraPayload<ExtArgs>
        fields: Prisma.SubCarreiraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SubCarreiraFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubCarreiraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SubCarreiraFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubCarreiraPayload>
          }
          findFirst: {
            args: Prisma.SubCarreiraFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubCarreiraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SubCarreiraFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubCarreiraPayload>
          }
          findMany: {
            args: Prisma.SubCarreiraFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubCarreiraPayload>[]
          }
          create: {
            args: Prisma.SubCarreiraCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubCarreiraPayload>
          }
          createMany: {
            args: Prisma.SubCarreiraCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SubCarreiraCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubCarreiraPayload>[]
          }
          delete: {
            args: Prisma.SubCarreiraDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubCarreiraPayload>
          }
          update: {
            args: Prisma.SubCarreiraUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubCarreiraPayload>
          }
          deleteMany: {
            args: Prisma.SubCarreiraDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.SubCarreiraUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.SubCarreiraUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SubCarreiraPayload>
          }
          aggregate: {
            args: Prisma.SubCarreiraAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSubCarreira>
          }
          groupBy: {
            args: Prisma.SubCarreiraGroupByArgs<ExtArgs>,
            result: $Utils.Optional<SubCarreiraGroupByOutputType>[]
          }
          count: {
            args: Prisma.SubCarreiraCountArgs<ExtArgs>,
            result: $Utils.Optional<SubCarreiraCountAggregateOutputType> | number
          }
        }
      }
      CategoriaRH: {
        payload: Prisma.$CategoriaRHPayload<ExtArgs>
        fields: Prisma.CategoriaRHFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoriaRHFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaRHPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoriaRHFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaRHPayload>
          }
          findFirst: {
            args: Prisma.CategoriaRHFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaRHPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoriaRHFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaRHPayload>
          }
          findMany: {
            args: Prisma.CategoriaRHFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaRHPayload>[]
          }
          create: {
            args: Prisma.CategoriaRHCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaRHPayload>
          }
          createMany: {
            args: Prisma.CategoriaRHCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoriaRHCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaRHPayload>[]
          }
          delete: {
            args: Prisma.CategoriaRHDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaRHPayload>
          }
          update: {
            args: Prisma.CategoriaRHUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaRHPayload>
          }
          deleteMany: {
            args: Prisma.CategoriaRHDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CategoriaRHUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CategoriaRHUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaRHPayload>
          }
          aggregate: {
            args: Prisma.CategoriaRHAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCategoriaRH>
          }
          groupBy: {
            args: Prisma.CategoriaRHGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CategoriaRHGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoriaRHCountArgs<ExtArgs>,
            result: $Utils.Optional<CategoriaRHCountAggregateOutputType> | number
          }
        }
      }
      Funcao: {
        payload: Prisma.$FuncaoPayload<ExtArgs>
        fields: Prisma.FuncaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FuncaoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FuncaoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncaoPayload>
          }
          findFirst: {
            args: Prisma.FuncaoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FuncaoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncaoPayload>
          }
          findMany: {
            args: Prisma.FuncaoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncaoPayload>[]
          }
          create: {
            args: Prisma.FuncaoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncaoPayload>
          }
          createMany: {
            args: Prisma.FuncaoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FuncaoCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncaoPayload>[]
          }
          delete: {
            args: Prisma.FuncaoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncaoPayload>
          }
          update: {
            args: Prisma.FuncaoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncaoPayload>
          }
          deleteMany: {
            args: Prisma.FuncaoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.FuncaoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.FuncaoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncaoPayload>
          }
          aggregate: {
            args: Prisma.FuncaoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateFuncao>
          }
          groupBy: {
            args: Prisma.FuncaoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<FuncaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.FuncaoCountArgs<ExtArgs>,
            result: $Utils.Optional<FuncaoCountAggregateOutputType> | number
          }
        }
      }
      Banco: {
        payload: Prisma.$BancoPayload<ExtArgs>
        fields: Prisma.BancoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BancoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BancoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BancoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BancoPayload>
          }
          findFirst: {
            args: Prisma.BancoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BancoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BancoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BancoPayload>
          }
          findMany: {
            args: Prisma.BancoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BancoPayload>[]
          }
          create: {
            args: Prisma.BancoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BancoPayload>
          }
          createMany: {
            args: Prisma.BancoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BancoCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BancoPayload>[]
          }
          delete: {
            args: Prisma.BancoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BancoPayload>
          }
          update: {
            args: Prisma.BancoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BancoPayload>
          }
          deleteMany: {
            args: Prisma.BancoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.BancoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.BancoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BancoPayload>
          }
          aggregate: {
            args: Prisma.BancoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateBanco>
          }
          groupBy: {
            args: Prisma.BancoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<BancoGroupByOutputType>[]
          }
          count: {
            args: Prisma.BancoCountArgs<ExtArgs>,
            result: $Utils.Optional<BancoCountAggregateOutputType> | number
          }
        }
      }
      Funcionario: {
        payload: Prisma.$FuncionarioPayload<ExtArgs>
        fields: Prisma.FuncionarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FuncionarioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FuncionarioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          findFirst: {
            args: Prisma.FuncionarioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FuncionarioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          findMany: {
            args: Prisma.FuncionarioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>[]
          }
          create: {
            args: Prisma.FuncionarioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          createMany: {
            args: Prisma.FuncionarioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FuncionarioCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>[]
          }
          delete: {
            args: Prisma.FuncionarioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          update: {
            args: Prisma.FuncionarioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          deleteMany: {
            args: Prisma.FuncionarioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.FuncionarioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.FuncionarioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          aggregate: {
            args: Prisma.FuncionarioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateFuncionario>
          }
          groupBy: {
            args: Prisma.FuncionarioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<FuncionarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.FuncionarioCountArgs<ExtArgs>,
            result: $Utils.Optional<FuncionarioCountAggregateOutputType> | number
          }
        }
      }
      DadosProfissionais: {
        payload: Prisma.$DadosProfissionaisPayload<ExtArgs>
        fields: Prisma.DadosProfissionaisFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DadosProfissionaisFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DadosProfissionaisPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DadosProfissionaisFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DadosProfissionaisPayload>
          }
          findFirst: {
            args: Prisma.DadosProfissionaisFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DadosProfissionaisPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DadosProfissionaisFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DadosProfissionaisPayload>
          }
          findMany: {
            args: Prisma.DadosProfissionaisFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DadosProfissionaisPayload>[]
          }
          create: {
            args: Prisma.DadosProfissionaisCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DadosProfissionaisPayload>
          }
          createMany: {
            args: Prisma.DadosProfissionaisCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DadosProfissionaisCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DadosProfissionaisPayload>[]
          }
          delete: {
            args: Prisma.DadosProfissionaisDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DadosProfissionaisPayload>
          }
          update: {
            args: Prisma.DadosProfissionaisUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DadosProfissionaisPayload>
          }
          deleteMany: {
            args: Prisma.DadosProfissionaisDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.DadosProfissionaisUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.DadosProfissionaisUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DadosProfissionaisPayload>
          }
          aggregate: {
            args: Prisma.DadosProfissionaisAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDadosProfissionais>
          }
          groupBy: {
            args: Prisma.DadosProfissionaisGroupByArgs<ExtArgs>,
            result: $Utils.Optional<DadosProfissionaisGroupByOutputType>[]
          }
          count: {
            args: Prisma.DadosProfissionaisCountArgs<ExtArgs>,
            result: $Utils.Optional<DadosProfissionaisCountAggregateOutputType> | number
          }
        }
      }
      Formacoes: {
        payload: Prisma.$FormacoesPayload<ExtArgs>
        fields: Prisma.FormacoesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FormacoesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FormacoesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FormacoesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FormacoesPayload>
          }
          findFirst: {
            args: Prisma.FormacoesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FormacoesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FormacoesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FormacoesPayload>
          }
          findMany: {
            args: Prisma.FormacoesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FormacoesPayload>[]
          }
          create: {
            args: Prisma.FormacoesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FormacoesPayload>
          }
          createMany: {
            args: Prisma.FormacoesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FormacoesCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FormacoesPayload>[]
          }
          delete: {
            args: Prisma.FormacoesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FormacoesPayload>
          }
          update: {
            args: Prisma.FormacoesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FormacoesPayload>
          }
          deleteMany: {
            args: Prisma.FormacoesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.FormacoesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.FormacoesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FormacoesPayload>
          }
          aggregate: {
            args: Prisma.FormacoesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateFormacoes>
          }
          groupBy: {
            args: Prisma.FormacoesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<FormacoesGroupByOutputType>[]
          }
          count: {
            args: Prisma.FormacoesCountArgs<ExtArgs>,
            result: $Utils.Optional<FormacoesCountAggregateOutputType> | number
          }
        }
      }
      Publicacoes: {
        payload: Prisma.$PublicacoesPayload<ExtArgs>
        fields: Prisma.PublicacoesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PublicacoesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PublicacoesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PublicacoesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PublicacoesPayload>
          }
          findFirst: {
            args: Prisma.PublicacoesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PublicacoesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PublicacoesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PublicacoesPayload>
          }
          findMany: {
            args: Prisma.PublicacoesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PublicacoesPayload>[]
          }
          create: {
            args: Prisma.PublicacoesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PublicacoesPayload>
          }
          createMany: {
            args: Prisma.PublicacoesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PublicacoesCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PublicacoesPayload>[]
          }
          delete: {
            args: Prisma.PublicacoesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PublicacoesPayload>
          }
          update: {
            args: Prisma.PublicacoesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PublicacoesPayload>
          }
          deleteMany: {
            args: Prisma.PublicacoesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.PublicacoesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.PublicacoesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PublicacoesPayload>
          }
          aggregate: {
            args: Prisma.PublicacoesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregatePublicacoes>
          }
          groupBy: {
            args: Prisma.PublicacoesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<PublicacoesGroupByOutputType>[]
          }
          count: {
            args: Prisma.PublicacoesCountArgs<ExtArgs>,
            result: $Utils.Optional<PublicacoesCountAggregateOutputType> | number
          }
        }
      }
      ExperiencialLaboral: {
        payload: Prisma.$ExperiencialLaboralPayload<ExtArgs>
        fields: Prisma.ExperiencialLaboralFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ExperiencialLaboralFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExperiencialLaboralPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ExperiencialLaboralFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExperiencialLaboralPayload>
          }
          findFirst: {
            args: Prisma.ExperiencialLaboralFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExperiencialLaboralPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ExperiencialLaboralFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExperiencialLaboralPayload>
          }
          findMany: {
            args: Prisma.ExperiencialLaboralFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExperiencialLaboralPayload>[]
          }
          create: {
            args: Prisma.ExperiencialLaboralCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExperiencialLaboralPayload>
          }
          createMany: {
            args: Prisma.ExperiencialLaboralCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ExperiencialLaboralCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExperiencialLaboralPayload>[]
          }
          delete: {
            args: Prisma.ExperiencialLaboralDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExperiencialLaboralPayload>
          }
          update: {
            args: Prisma.ExperiencialLaboralUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExperiencialLaboralPayload>
          }
          deleteMany: {
            args: Prisma.ExperiencialLaboralDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ExperiencialLaboralUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ExperiencialLaboralUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExperiencialLaboralPayload>
          }
          aggregate: {
            args: Prisma.ExperiencialLaboralAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateExperiencialLaboral>
          }
          groupBy: {
            args: Prisma.ExperiencialLaboralGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ExperiencialLaboralGroupByOutputType>[]
          }
          count: {
            args: Prisma.ExperiencialLaboralCountArgs<ExtArgs>,
            result: $Utils.Optional<ExperiencialLaboralCountAggregateOutputType> | number
          }
        }
      }
      Departamento: {
        payload: Prisma.$DepartamentoPayload<ExtArgs>
        fields: Prisma.DepartamentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DepartamentoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DepartamentoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          findFirst: {
            args: Prisma.DepartamentoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DepartamentoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          findMany: {
            args: Prisma.DepartamentoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>[]
          }
          create: {
            args: Prisma.DepartamentoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          createMany: {
            args: Prisma.DepartamentoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DepartamentoCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>[]
          }
          delete: {
            args: Prisma.DepartamentoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          update: {
            args: Prisma.DepartamentoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          deleteMany: {
            args: Prisma.DepartamentoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.DepartamentoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.DepartamentoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          aggregate: {
            args: Prisma.DepartamentoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDepartamento>
          }
          groupBy: {
            args: Prisma.DepartamentoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<DepartamentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.DepartamentoCountArgs<ExtArgs>,
            result: $Utils.Optional<DepartamentoCountAggregateOutputType> | number
          }
        }
      }
      FuncionarioDepartamento: {
        payload: Prisma.$FuncionarioDepartamentoPayload<ExtArgs>
        fields: Prisma.FuncionarioDepartamentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FuncionarioDepartamentoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioDepartamentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FuncionarioDepartamentoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioDepartamentoPayload>
          }
          findFirst: {
            args: Prisma.FuncionarioDepartamentoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioDepartamentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FuncionarioDepartamentoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioDepartamentoPayload>
          }
          findMany: {
            args: Prisma.FuncionarioDepartamentoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioDepartamentoPayload>[]
          }
          create: {
            args: Prisma.FuncionarioDepartamentoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioDepartamentoPayload>
          }
          createMany: {
            args: Prisma.FuncionarioDepartamentoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FuncionarioDepartamentoCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioDepartamentoPayload>[]
          }
          delete: {
            args: Prisma.FuncionarioDepartamentoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioDepartamentoPayload>
          }
          update: {
            args: Prisma.FuncionarioDepartamentoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioDepartamentoPayload>
          }
          deleteMany: {
            args: Prisma.FuncionarioDepartamentoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.FuncionarioDepartamentoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.FuncionarioDepartamentoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FuncionarioDepartamentoPayload>
          }
          aggregate: {
            args: Prisma.FuncionarioDepartamentoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateFuncionarioDepartamento>
          }
          groupBy: {
            args: Prisma.FuncionarioDepartamentoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<FuncionarioDepartamentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.FuncionarioDepartamentoCountArgs<ExtArgs>,
            result: $Utils.Optional<FuncionarioDepartamentoCountAggregateOutputType> | number
          }
        }
      }
      FichaAvaliacao: {
        payload: Prisma.$FichaAvaliacaoPayload<ExtArgs>
        fields: Prisma.FichaAvaliacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FichaAvaliacaoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FichaAvaliacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FichaAvaliacaoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FichaAvaliacaoPayload>
          }
          findFirst: {
            args: Prisma.FichaAvaliacaoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FichaAvaliacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FichaAvaliacaoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FichaAvaliacaoPayload>
          }
          findMany: {
            args: Prisma.FichaAvaliacaoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FichaAvaliacaoPayload>[]
          }
          create: {
            args: Prisma.FichaAvaliacaoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FichaAvaliacaoPayload>
          }
          createMany: {
            args: Prisma.FichaAvaliacaoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FichaAvaliacaoCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FichaAvaliacaoPayload>[]
          }
          delete: {
            args: Prisma.FichaAvaliacaoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FichaAvaliacaoPayload>
          }
          update: {
            args: Prisma.FichaAvaliacaoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FichaAvaliacaoPayload>
          }
          deleteMany: {
            args: Prisma.FichaAvaliacaoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.FichaAvaliacaoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.FichaAvaliacaoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FichaAvaliacaoPayload>
          }
          aggregate: {
            args: Prisma.FichaAvaliacaoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateFichaAvaliacao>
          }
          groupBy: {
            args: Prisma.FichaAvaliacaoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<FichaAvaliacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.FichaAvaliacaoCountArgs<ExtArgs>,
            result: $Utils.Optional<FichaAvaliacaoCountAggregateOutputType> | number
          }
        }
      }
      Competencia: {
        payload: Prisma.$CompetenciaPayload<ExtArgs>
        fields: Prisma.CompetenciaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompetenciaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CompetenciaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompetenciaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CompetenciaPayload>
          }
          findFirst: {
            args: Prisma.CompetenciaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CompetenciaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompetenciaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CompetenciaPayload>
          }
          findMany: {
            args: Prisma.CompetenciaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CompetenciaPayload>[]
          }
          create: {
            args: Prisma.CompetenciaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CompetenciaPayload>
          }
          createMany: {
            args: Prisma.CompetenciaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CompetenciaCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CompetenciaPayload>[]
          }
          delete: {
            args: Prisma.CompetenciaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CompetenciaPayload>
          }
          update: {
            args: Prisma.CompetenciaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CompetenciaPayload>
          }
          deleteMany: {
            args: Prisma.CompetenciaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CompetenciaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CompetenciaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CompetenciaPayload>
          }
          aggregate: {
            args: Prisma.CompetenciaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCompetencia>
          }
          groupBy: {
            args: Prisma.CompetenciaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CompetenciaGroupByOutputType>[]
          }
          count: {
            args: Prisma.CompetenciaCountArgs<ExtArgs>,
            result: $Utils.Optional<CompetenciaCountAggregateOutputType> | number
          }
        }
      }
      PerguntaFichaAvaliacao: {
        payload: Prisma.$PerguntaFichaAvaliacaoPayload<ExtArgs>
        fields: Prisma.PerguntaFichaAvaliacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PerguntaFichaAvaliacaoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PerguntaFichaAvaliacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PerguntaFichaAvaliacaoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PerguntaFichaAvaliacaoPayload>
          }
          findFirst: {
            args: Prisma.PerguntaFichaAvaliacaoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PerguntaFichaAvaliacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PerguntaFichaAvaliacaoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PerguntaFichaAvaliacaoPayload>
          }
          findMany: {
            args: Prisma.PerguntaFichaAvaliacaoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PerguntaFichaAvaliacaoPayload>[]
          }
          create: {
            args: Prisma.PerguntaFichaAvaliacaoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PerguntaFichaAvaliacaoPayload>
          }
          createMany: {
            args: Prisma.PerguntaFichaAvaliacaoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PerguntaFichaAvaliacaoCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PerguntaFichaAvaliacaoPayload>[]
          }
          delete: {
            args: Prisma.PerguntaFichaAvaliacaoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PerguntaFichaAvaliacaoPayload>
          }
          update: {
            args: Prisma.PerguntaFichaAvaliacaoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PerguntaFichaAvaliacaoPayload>
          }
          deleteMany: {
            args: Prisma.PerguntaFichaAvaliacaoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.PerguntaFichaAvaliacaoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.PerguntaFichaAvaliacaoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PerguntaFichaAvaliacaoPayload>
          }
          aggregate: {
            args: Prisma.PerguntaFichaAvaliacaoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregatePerguntaFichaAvaliacao>
          }
          groupBy: {
            args: Prisma.PerguntaFichaAvaliacaoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<PerguntaFichaAvaliacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PerguntaFichaAvaliacaoCountArgs<ExtArgs>,
            result: $Utils.Optional<PerguntaFichaAvaliacaoCountAggregateOutputType> | number
          }
        }
      }
      Avaliacao: {
        payload: Prisma.$AvaliacaoPayload<ExtArgs>
        fields: Prisma.AvaliacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AvaliacaoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AvaliacaoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          findFirst: {
            args: Prisma.AvaliacaoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AvaliacaoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          findMany: {
            args: Prisma.AvaliacaoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>[]
          }
          create: {
            args: Prisma.AvaliacaoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          createMany: {
            args: Prisma.AvaliacaoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AvaliacaoCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>[]
          }
          delete: {
            args: Prisma.AvaliacaoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          update: {
            args: Prisma.AvaliacaoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          deleteMany: {
            args: Prisma.AvaliacaoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.AvaliacaoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.AvaliacaoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          aggregate: {
            args: Prisma.AvaliacaoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAvaliacao>
          }
          groupBy: {
            args: Prisma.AvaliacaoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<AvaliacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.AvaliacaoCountArgs<ExtArgs>,
            result: $Utils.Optional<AvaliacaoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CarreiraCountOutputType
   */

  export type CarreiraCountOutputType = {
    subcarreira: number
    cateroria: number
  }

  export type CarreiraCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subcarreira?: boolean | CarreiraCountOutputTypeCountSubcarreiraArgs
    cateroria?: boolean | CarreiraCountOutputTypeCountCateroriaArgs
  }

  // Custom InputTypes
  /**
   * CarreiraCountOutputType without action
   */
  export type CarreiraCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarreiraCountOutputType
     */
    select?: CarreiraCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CarreiraCountOutputType without action
   */
  export type CarreiraCountOutputTypeCountSubcarreiraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubCarreiraWhereInput
  }

  /**
   * CarreiraCountOutputType without action
   */
  export type CarreiraCountOutputTypeCountCateroriaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaRHWhereInput
  }


  /**
   * Count Type SubCarreiraCountOutputType
   */

  export type SubCarreiraCountOutputType = {
    categoria: number
  }

  export type SubCarreiraCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | SubCarreiraCountOutputTypeCountCategoriaArgs
  }

  // Custom InputTypes
  /**
   * SubCarreiraCountOutputType without action
   */
  export type SubCarreiraCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubCarreiraCountOutputType
     */
    select?: SubCarreiraCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SubCarreiraCountOutputType without action
   */
  export type SubCarreiraCountOutputTypeCountCategoriaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaRHWhereInput
  }


  /**
   * Count Type CategoriaRHCountOutputType
   */

  export type CategoriaRHCountOutputType = {
    funcionario: number
  }

  export type CategoriaRHCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionario?: boolean | CategoriaRHCountOutputTypeCountFuncionarioArgs
  }

  // Custom InputTypes
  /**
   * CategoriaRHCountOutputType without action
   */
  export type CategoriaRHCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaRHCountOutputType
     */
    select?: CategoriaRHCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoriaRHCountOutputType without action
   */
  export type CategoriaRHCountOutputTypeCountFuncionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FuncionarioWhereInput
  }


  /**
   * Count Type FuncaoCountOutputType
   */

  export type FuncaoCountOutputType = {
    funcionario: number
  }

  export type FuncaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionario?: boolean | FuncaoCountOutputTypeCountFuncionarioArgs
  }

  // Custom InputTypes
  /**
   * FuncaoCountOutputType without action
   */
  export type FuncaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncaoCountOutputType
     */
    select?: FuncaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FuncaoCountOutputType without action
   */
  export type FuncaoCountOutputTypeCountFuncionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FuncionarioWhereInput
  }


  /**
   * Count Type BancoCountOutputType
   */

  export type BancoCountOutputType = {
    funcionario: number
  }

  export type BancoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionario?: boolean | BancoCountOutputTypeCountFuncionarioArgs
  }

  // Custom InputTypes
  /**
   * BancoCountOutputType without action
   */
  export type BancoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BancoCountOutputType
     */
    select?: BancoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BancoCountOutputType without action
   */
  export type BancoCountOutputTypeCountFuncionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FuncionarioWhereInput
  }


  /**
   * Count Type FuncionarioCountOutputType
   */

  export type FuncionarioCountOutputType = {
    dadosprofissionais: number
    formacoes: number
    esperiencialaboral: number
    departamentosComoChefe: number
    departamentosComoSupervisor: number
    funcionariodepartamento: number
    avaliacao: number
  }

  export type FuncionarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    dadosprofissionais?: boolean | FuncionarioCountOutputTypeCountDadosprofissionaisArgs
    formacoes?: boolean | FuncionarioCountOutputTypeCountFormacoesArgs
    esperiencialaboral?: boolean | FuncionarioCountOutputTypeCountEsperiencialaboralArgs
    departamentosComoChefe?: boolean | FuncionarioCountOutputTypeCountDepartamentosComoChefeArgs
    departamentosComoSupervisor?: boolean | FuncionarioCountOutputTypeCountDepartamentosComoSupervisorArgs
    funcionariodepartamento?: boolean | FuncionarioCountOutputTypeCountFuncionariodepartamentoArgs
    avaliacao?: boolean | FuncionarioCountOutputTypeCountAvaliacaoArgs
  }

  // Custom InputTypes
  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioCountOutputType
     */
    select?: FuncionarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountDadosprofissionaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DadosProfissionaisWhereInput
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountFormacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FormacoesWhereInput
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountEsperiencialaboralArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExperiencialLaboralWhereInput
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountDepartamentosComoChefeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepartamentoWhereInput
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountDepartamentosComoSupervisorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepartamentoWhereInput
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountFuncionariodepartamentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FuncionarioDepartamentoWhereInput
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountAvaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliacaoWhereInput
  }


  /**
   * Count Type DepartamentoCountOutputType
   */

  export type DepartamentoCountOutputType = {
    avaliacao: number
    funcionariodepartamento: number
  }

  export type DepartamentoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    avaliacao?: boolean | DepartamentoCountOutputTypeCountAvaliacaoArgs
    funcionariodepartamento?: boolean | DepartamentoCountOutputTypeCountFuncionariodepartamentoArgs
  }

  // Custom InputTypes
  /**
   * DepartamentoCountOutputType without action
   */
  export type DepartamentoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepartamentoCountOutputType
     */
    select?: DepartamentoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DepartamentoCountOutputType without action
   */
  export type DepartamentoCountOutputTypeCountAvaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliacaoWhereInput
  }

  /**
   * DepartamentoCountOutputType without action
   */
  export type DepartamentoCountOutputTypeCountFuncionariodepartamentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FuncionarioDepartamentoWhereInput
  }


  /**
   * Count Type FichaAvaliacaoCountOutputType
   */

  export type FichaAvaliacaoCountOutputType = {
    perguntafichaavaliacao: number
    avaliacao: number
  }

  export type FichaAvaliacaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    perguntafichaavaliacao?: boolean | FichaAvaliacaoCountOutputTypeCountPerguntafichaavaliacaoArgs
    avaliacao?: boolean | FichaAvaliacaoCountOutputTypeCountAvaliacaoArgs
  }

  // Custom InputTypes
  /**
   * FichaAvaliacaoCountOutputType without action
   */
  export type FichaAvaliacaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FichaAvaliacaoCountOutputType
     */
    select?: FichaAvaliacaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FichaAvaliacaoCountOutputType without action
   */
  export type FichaAvaliacaoCountOutputTypeCountPerguntafichaavaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PerguntaFichaAvaliacaoWhereInput
  }

  /**
   * FichaAvaliacaoCountOutputType without action
   */
  export type FichaAvaliacaoCountOutputTypeCountAvaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliacaoWhereInput
  }


  /**
   * Count Type CompetenciaCountOutputType
   */

  export type CompetenciaCountOutputType = {
    perguntafichaavaliacao: number
  }

  export type CompetenciaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    perguntafichaavaliacao?: boolean | CompetenciaCountOutputTypeCountPerguntafichaavaliacaoArgs
  }

  // Custom InputTypes
  /**
   * CompetenciaCountOutputType without action
   */
  export type CompetenciaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompetenciaCountOutputType
     */
    select?: CompetenciaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CompetenciaCountOutputType without action
   */
  export type CompetenciaCountOutputTypeCountPerguntafichaavaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PerguntaFichaAvaliacaoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Carreira
   */

  export type AggregateCarreira = {
    _count: CarreiraCountAggregateOutputType | null
    _avg: CarreiraAvgAggregateOutputType | null
    _sum: CarreiraSumAggregateOutputType | null
    _min: CarreiraMinAggregateOutputType | null
    _max: CarreiraMaxAggregateOutputType | null
  }

  export type CarreiraAvgAggregateOutputType = {
    id: number | null
  }

  export type CarreiraSumAggregateOutputType = {
    id: number | null
  }

  export type CarreiraMinAggregateOutputType = {
    id: number | null
    nome_carreira: string | null
    regime: $Enums.Regime | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CarreiraMaxAggregateOutputType = {
    id: number | null
    nome_carreira: string | null
    regime: $Enums.Regime | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CarreiraCountAggregateOutputType = {
    id: number
    nome_carreira: number
    regime: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CarreiraAvgAggregateInputType = {
    id?: true
  }

  export type CarreiraSumAggregateInputType = {
    id?: true
  }

  export type CarreiraMinAggregateInputType = {
    id?: true
    nome_carreira?: true
    regime?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CarreiraMaxAggregateInputType = {
    id?: true
    nome_carreira?: true
    regime?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CarreiraCountAggregateInputType = {
    id?: true
    nome_carreira?: true
    regime?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CarreiraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Carreira to aggregate.
     */
    where?: CarreiraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Carreiras to fetch.
     */
    orderBy?: CarreiraOrderByWithRelationInput | CarreiraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CarreiraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Carreiras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Carreiras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Carreiras
    **/
    _count?: true | CarreiraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CarreiraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CarreiraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CarreiraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CarreiraMaxAggregateInputType
  }

  export type GetCarreiraAggregateType<T extends CarreiraAggregateArgs> = {
        [P in keyof T & keyof AggregateCarreira]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCarreira[P]>
      : GetScalarType<T[P], AggregateCarreira[P]>
  }




  export type CarreiraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CarreiraWhereInput
    orderBy?: CarreiraOrderByWithAggregationInput | CarreiraOrderByWithAggregationInput[]
    by: CarreiraScalarFieldEnum[] | CarreiraScalarFieldEnum
    having?: CarreiraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CarreiraCountAggregateInputType | true
    _avg?: CarreiraAvgAggregateInputType
    _sum?: CarreiraSumAggregateInputType
    _min?: CarreiraMinAggregateInputType
    _max?: CarreiraMaxAggregateInputType
  }

  export type CarreiraGroupByOutputType = {
    id: number
    nome_carreira: string
    regime: $Enums.Regime
    createdAt: Date
    updatedAt: Date
    _count: CarreiraCountAggregateOutputType | null
    _avg: CarreiraAvgAggregateOutputType | null
    _sum: CarreiraSumAggregateOutputType | null
    _min: CarreiraMinAggregateOutputType | null
    _max: CarreiraMaxAggregateOutputType | null
  }

  type GetCarreiraGroupByPayload<T extends CarreiraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CarreiraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CarreiraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CarreiraGroupByOutputType[P]>
            : GetScalarType<T[P], CarreiraGroupByOutputType[P]>
        }
      >
    >


  export type CarreiraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_carreira?: boolean
    regime?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    subcarreira?: boolean | Carreira$subcarreiraArgs<ExtArgs>
    cateroria?: boolean | Carreira$cateroriaArgs<ExtArgs>
    _count?: boolean | CarreiraCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["carreira"]>

  export type CarreiraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_carreira?: boolean
    regime?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["carreira"]>

  export type CarreiraSelectScalar = {
    id?: boolean
    nome_carreira?: boolean
    regime?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CarreiraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subcarreira?: boolean | Carreira$subcarreiraArgs<ExtArgs>
    cateroria?: boolean | Carreira$cateroriaArgs<ExtArgs>
    _count?: boolean | CarreiraCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CarreiraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CarreiraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Carreira"
    objects: {
      subcarreira: Prisma.$SubCarreiraPayload<ExtArgs>[]
      cateroria: Prisma.$CategoriaRHPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome_carreira: string
      regime: $Enums.Regime
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["carreira"]>
    composites: {}
  }

  type CarreiraGetPayload<S extends boolean | null | undefined | CarreiraDefaultArgs> = $Result.GetResult<Prisma.$CarreiraPayload, S>

  type CarreiraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CarreiraFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CarreiraCountAggregateInputType | true
    }

  export interface CarreiraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Carreira'], meta: { name: 'Carreira' } }
    /**
     * Find zero or one Carreira that matches the filter.
     * @param {CarreiraFindUniqueArgs} args - Arguments to find a Carreira
     * @example
     * // Get one Carreira
     * const carreira = await prisma.carreira.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CarreiraFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CarreiraFindUniqueArgs<ExtArgs>>
    ): Prisma__CarreiraClient<$Result.GetResult<Prisma.$CarreiraPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Carreira that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CarreiraFindUniqueOrThrowArgs} args - Arguments to find a Carreira
     * @example
     * // Get one Carreira
     * const carreira = await prisma.carreira.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CarreiraFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CarreiraFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CarreiraClient<$Result.GetResult<Prisma.$CarreiraPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Carreira that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarreiraFindFirstArgs} args - Arguments to find a Carreira
     * @example
     * // Get one Carreira
     * const carreira = await prisma.carreira.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CarreiraFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CarreiraFindFirstArgs<ExtArgs>>
    ): Prisma__CarreiraClient<$Result.GetResult<Prisma.$CarreiraPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Carreira that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarreiraFindFirstOrThrowArgs} args - Arguments to find a Carreira
     * @example
     * // Get one Carreira
     * const carreira = await prisma.carreira.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CarreiraFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CarreiraFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CarreiraClient<$Result.GetResult<Prisma.$CarreiraPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Carreiras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarreiraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Carreiras
     * const carreiras = await prisma.carreira.findMany()
     * 
     * // Get first 10 Carreiras
     * const carreiras = await prisma.carreira.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const carreiraWithIdOnly = await prisma.carreira.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CarreiraFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CarreiraFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarreiraPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Carreira.
     * @param {CarreiraCreateArgs} args - Arguments to create a Carreira.
     * @example
     * // Create one Carreira
     * const Carreira = await prisma.carreira.create({
     *   data: {
     *     // ... data to create a Carreira
     *   }
     * })
     * 
    **/
    create<T extends CarreiraCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CarreiraCreateArgs<ExtArgs>>
    ): Prisma__CarreiraClient<$Result.GetResult<Prisma.$CarreiraPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Carreiras.
     * @param {CarreiraCreateManyArgs} args - Arguments to create many Carreiras.
     * @example
     * // Create many Carreiras
     * const carreira = await prisma.carreira.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends CarreiraCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CarreiraCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Carreiras and returns the data saved in the database.
     * @param {CarreiraCreateManyAndReturnArgs} args - Arguments to create many Carreiras.
     * @example
     * // Create many Carreiras
     * const carreira = await prisma.carreira.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Carreiras and only return the `id`
     * const carreiraWithIdOnly = await prisma.carreira.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends CarreiraCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, CarreiraCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarreiraPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Carreira.
     * @param {CarreiraDeleteArgs} args - Arguments to delete one Carreira.
     * @example
     * // Delete one Carreira
     * const Carreira = await prisma.carreira.delete({
     *   where: {
     *     // ... filter to delete one Carreira
     *   }
     * })
     * 
    **/
    delete<T extends CarreiraDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CarreiraDeleteArgs<ExtArgs>>
    ): Prisma__CarreiraClient<$Result.GetResult<Prisma.$CarreiraPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Carreira.
     * @param {CarreiraUpdateArgs} args - Arguments to update one Carreira.
     * @example
     * // Update one Carreira
     * const carreira = await prisma.carreira.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CarreiraUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CarreiraUpdateArgs<ExtArgs>>
    ): Prisma__CarreiraClient<$Result.GetResult<Prisma.$CarreiraPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Carreiras.
     * @param {CarreiraDeleteManyArgs} args - Arguments to filter Carreiras to delete.
     * @example
     * // Delete a few Carreiras
     * const { count } = await prisma.carreira.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CarreiraDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CarreiraDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Carreiras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarreiraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Carreiras
     * const carreira = await prisma.carreira.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CarreiraUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CarreiraUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Carreira.
     * @param {CarreiraUpsertArgs} args - Arguments to update or create a Carreira.
     * @example
     * // Update or create a Carreira
     * const carreira = await prisma.carreira.upsert({
     *   create: {
     *     // ... data to create a Carreira
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Carreira we want to update
     *   }
     * })
    **/
    upsert<T extends CarreiraUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CarreiraUpsertArgs<ExtArgs>>
    ): Prisma__CarreiraClient<$Result.GetResult<Prisma.$CarreiraPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Carreiras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarreiraCountArgs} args - Arguments to filter Carreiras to count.
     * @example
     * // Count the number of Carreiras
     * const count = await prisma.carreira.count({
     *   where: {
     *     // ... the filter for the Carreiras we want to count
     *   }
     * })
    **/
    count<T extends CarreiraCountArgs>(
      args?: Subset<T, CarreiraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CarreiraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Carreira.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarreiraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CarreiraAggregateArgs>(args: Subset<T, CarreiraAggregateArgs>): Prisma.PrismaPromise<GetCarreiraAggregateType<T>>

    /**
     * Group by Carreira.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarreiraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CarreiraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CarreiraGroupByArgs['orderBy'] }
        : { orderBy?: CarreiraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CarreiraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCarreiraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Carreira model
   */
  readonly fields: CarreiraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Carreira.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CarreiraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    subcarreira<T extends Carreira$subcarreiraArgs<ExtArgs> = {}>(args?: Subset<T, Carreira$subcarreiraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubCarreiraPayload<ExtArgs>, T, 'findMany'> | Null>;

    cateroria<T extends Carreira$cateroriaArgs<ExtArgs> = {}>(args?: Subset<T, Carreira$cateroriaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaRHPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Carreira model
   */ 
  interface CarreiraFieldRefs {
    readonly id: FieldRef<"Carreira", 'Int'>
    readonly nome_carreira: FieldRef<"Carreira", 'String'>
    readonly regime: FieldRef<"Carreira", 'Regime'>
    readonly createdAt: FieldRef<"Carreira", 'DateTime'>
    readonly updatedAt: FieldRef<"Carreira", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Carreira findUnique
   */
  export type CarreiraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carreira
     */
    select?: CarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarreiraInclude<ExtArgs> | null
    /**
     * Filter, which Carreira to fetch.
     */
    where: CarreiraWhereUniqueInput
  }

  /**
   * Carreira findUniqueOrThrow
   */
  export type CarreiraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carreira
     */
    select?: CarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarreiraInclude<ExtArgs> | null
    /**
     * Filter, which Carreira to fetch.
     */
    where: CarreiraWhereUniqueInput
  }

  /**
   * Carreira findFirst
   */
  export type CarreiraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carreira
     */
    select?: CarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarreiraInclude<ExtArgs> | null
    /**
     * Filter, which Carreira to fetch.
     */
    where?: CarreiraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Carreiras to fetch.
     */
    orderBy?: CarreiraOrderByWithRelationInput | CarreiraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Carreiras.
     */
    cursor?: CarreiraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Carreiras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Carreiras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Carreiras.
     */
    distinct?: CarreiraScalarFieldEnum | CarreiraScalarFieldEnum[]
  }

  /**
   * Carreira findFirstOrThrow
   */
  export type CarreiraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carreira
     */
    select?: CarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarreiraInclude<ExtArgs> | null
    /**
     * Filter, which Carreira to fetch.
     */
    where?: CarreiraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Carreiras to fetch.
     */
    orderBy?: CarreiraOrderByWithRelationInput | CarreiraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Carreiras.
     */
    cursor?: CarreiraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Carreiras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Carreiras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Carreiras.
     */
    distinct?: CarreiraScalarFieldEnum | CarreiraScalarFieldEnum[]
  }

  /**
   * Carreira findMany
   */
  export type CarreiraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carreira
     */
    select?: CarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarreiraInclude<ExtArgs> | null
    /**
     * Filter, which Carreiras to fetch.
     */
    where?: CarreiraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Carreiras to fetch.
     */
    orderBy?: CarreiraOrderByWithRelationInput | CarreiraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Carreiras.
     */
    cursor?: CarreiraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Carreiras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Carreiras.
     */
    skip?: number
    distinct?: CarreiraScalarFieldEnum | CarreiraScalarFieldEnum[]
  }

  /**
   * Carreira create
   */
  export type CarreiraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carreira
     */
    select?: CarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarreiraInclude<ExtArgs> | null
    /**
     * The data needed to create a Carreira.
     */
    data: XOR<CarreiraCreateInput, CarreiraUncheckedCreateInput>
  }

  /**
   * Carreira createMany
   */
  export type CarreiraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Carreiras.
     */
    data: CarreiraCreateManyInput | CarreiraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Carreira createManyAndReturn
   */
  export type CarreiraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carreira
     */
    select?: CarreiraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Carreiras.
     */
    data: CarreiraCreateManyInput | CarreiraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Carreira update
   */
  export type CarreiraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carreira
     */
    select?: CarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarreiraInclude<ExtArgs> | null
    /**
     * The data needed to update a Carreira.
     */
    data: XOR<CarreiraUpdateInput, CarreiraUncheckedUpdateInput>
    /**
     * Choose, which Carreira to update.
     */
    where: CarreiraWhereUniqueInput
  }

  /**
   * Carreira updateMany
   */
  export type CarreiraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Carreiras.
     */
    data: XOR<CarreiraUpdateManyMutationInput, CarreiraUncheckedUpdateManyInput>
    /**
     * Filter which Carreiras to update
     */
    where?: CarreiraWhereInput
  }

  /**
   * Carreira upsert
   */
  export type CarreiraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carreira
     */
    select?: CarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarreiraInclude<ExtArgs> | null
    /**
     * The filter to search for the Carreira to update in case it exists.
     */
    where: CarreiraWhereUniqueInput
    /**
     * In case the Carreira found by the `where` argument doesn't exist, create a new Carreira with this data.
     */
    create: XOR<CarreiraCreateInput, CarreiraUncheckedCreateInput>
    /**
     * In case the Carreira was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CarreiraUpdateInput, CarreiraUncheckedUpdateInput>
  }

  /**
   * Carreira delete
   */
  export type CarreiraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carreira
     */
    select?: CarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarreiraInclude<ExtArgs> | null
    /**
     * Filter which Carreira to delete.
     */
    where: CarreiraWhereUniqueInput
  }

  /**
   * Carreira deleteMany
   */
  export type CarreiraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Carreiras to delete
     */
    where?: CarreiraWhereInput
  }

  /**
   * Carreira.subcarreira
   */
  export type Carreira$subcarreiraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubCarreira
     */
    select?: SubCarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubCarreiraInclude<ExtArgs> | null
    where?: SubCarreiraWhereInput
    orderBy?: SubCarreiraOrderByWithRelationInput | SubCarreiraOrderByWithRelationInput[]
    cursor?: SubCarreiraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubCarreiraScalarFieldEnum | SubCarreiraScalarFieldEnum[]
  }

  /**
   * Carreira.cateroria
   */
  export type Carreira$cateroriaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaRH
     */
    select?: CategoriaRHSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaRHInclude<ExtArgs> | null
    where?: CategoriaRHWhereInput
    orderBy?: CategoriaRHOrderByWithRelationInput | CategoriaRHOrderByWithRelationInput[]
    cursor?: CategoriaRHWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoriaRHScalarFieldEnum | CategoriaRHScalarFieldEnum[]
  }

  /**
   * Carreira without action
   */
  export type CarreiraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carreira
     */
    select?: CarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarreiraInclude<ExtArgs> | null
  }


  /**
   * Model SubCarreira
   */

  export type AggregateSubCarreira = {
    _count: SubCarreiraCountAggregateOutputType | null
    _avg: SubCarreiraAvgAggregateOutputType | null
    _sum: SubCarreiraSumAggregateOutputType | null
    _min: SubCarreiraMinAggregateOutputType | null
    _max: SubCarreiraMaxAggregateOutputType | null
  }

  export type SubCarreiraAvgAggregateOutputType = {
    id: number | null
    Id_carreira: number | null
  }

  export type SubCarreiraSumAggregateOutputType = {
    id: number | null
    Id_carreira: number | null
  }

  export type SubCarreiraMinAggregateOutputType = {
    id: number | null
    nome_SubCarreira: string | null
    Id_carreira: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubCarreiraMaxAggregateOutputType = {
    id: number | null
    nome_SubCarreira: string | null
    Id_carreira: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubCarreiraCountAggregateOutputType = {
    id: number
    nome_SubCarreira: number
    Id_carreira: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SubCarreiraAvgAggregateInputType = {
    id?: true
    Id_carreira?: true
  }

  export type SubCarreiraSumAggregateInputType = {
    id?: true
    Id_carreira?: true
  }

  export type SubCarreiraMinAggregateInputType = {
    id?: true
    nome_SubCarreira?: true
    Id_carreira?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubCarreiraMaxAggregateInputType = {
    id?: true
    nome_SubCarreira?: true
    Id_carreira?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubCarreiraCountAggregateInputType = {
    id?: true
    nome_SubCarreira?: true
    Id_carreira?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SubCarreiraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubCarreira to aggregate.
     */
    where?: SubCarreiraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubCarreiras to fetch.
     */
    orderBy?: SubCarreiraOrderByWithRelationInput | SubCarreiraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SubCarreiraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubCarreiras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubCarreiras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SubCarreiras
    **/
    _count?: true | SubCarreiraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SubCarreiraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SubCarreiraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubCarreiraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubCarreiraMaxAggregateInputType
  }

  export type GetSubCarreiraAggregateType<T extends SubCarreiraAggregateArgs> = {
        [P in keyof T & keyof AggregateSubCarreira]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubCarreira[P]>
      : GetScalarType<T[P], AggregateSubCarreira[P]>
  }




  export type SubCarreiraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubCarreiraWhereInput
    orderBy?: SubCarreiraOrderByWithAggregationInput | SubCarreiraOrderByWithAggregationInput[]
    by: SubCarreiraScalarFieldEnum[] | SubCarreiraScalarFieldEnum
    having?: SubCarreiraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubCarreiraCountAggregateInputType | true
    _avg?: SubCarreiraAvgAggregateInputType
    _sum?: SubCarreiraSumAggregateInputType
    _min?: SubCarreiraMinAggregateInputType
    _max?: SubCarreiraMaxAggregateInputType
  }

  export type SubCarreiraGroupByOutputType = {
    id: number
    nome_SubCarreira: string
    Id_carreira: number | null
    createdAt: Date
    updatedAt: Date
    _count: SubCarreiraCountAggregateOutputType | null
    _avg: SubCarreiraAvgAggregateOutputType | null
    _sum: SubCarreiraSumAggregateOutputType | null
    _min: SubCarreiraMinAggregateOutputType | null
    _max: SubCarreiraMaxAggregateOutputType | null
  }

  type GetSubCarreiraGroupByPayload<T extends SubCarreiraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubCarreiraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubCarreiraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubCarreiraGroupByOutputType[P]>
            : GetScalarType<T[P], SubCarreiraGroupByOutputType[P]>
        }
      >
    >


  export type SubCarreiraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_SubCarreira?: boolean
    Id_carreira?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Carreira?: boolean | SubCarreira$CarreiraArgs<ExtArgs>
    categoria?: boolean | SubCarreira$categoriaArgs<ExtArgs>
    _count?: boolean | SubCarreiraCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subCarreira"]>

  export type SubCarreiraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_SubCarreira?: boolean
    Id_carreira?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Carreira?: boolean | SubCarreira$CarreiraArgs<ExtArgs>
  }, ExtArgs["result"]["subCarreira"]>

  export type SubCarreiraSelectScalar = {
    id?: boolean
    nome_SubCarreira?: boolean
    Id_carreira?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SubCarreiraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Carreira?: boolean | SubCarreira$CarreiraArgs<ExtArgs>
    categoria?: boolean | SubCarreira$categoriaArgs<ExtArgs>
    _count?: boolean | SubCarreiraCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SubCarreiraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Carreira?: boolean | SubCarreira$CarreiraArgs<ExtArgs>
  }

  export type $SubCarreiraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SubCarreira"
    objects: {
      Carreira: Prisma.$CarreiraPayload<ExtArgs> | null
      categoria: Prisma.$CategoriaRHPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome_SubCarreira: string
      Id_carreira: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["subCarreira"]>
    composites: {}
  }

  type SubCarreiraGetPayload<S extends boolean | null | undefined | SubCarreiraDefaultArgs> = $Result.GetResult<Prisma.$SubCarreiraPayload, S>

  type SubCarreiraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SubCarreiraFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SubCarreiraCountAggregateInputType | true
    }

  export interface SubCarreiraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SubCarreira'], meta: { name: 'SubCarreira' } }
    /**
     * Find zero or one SubCarreira that matches the filter.
     * @param {SubCarreiraFindUniqueArgs} args - Arguments to find a SubCarreira
     * @example
     * // Get one SubCarreira
     * const subCarreira = await prisma.subCarreira.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends SubCarreiraFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, SubCarreiraFindUniqueArgs<ExtArgs>>
    ): Prisma__SubCarreiraClient<$Result.GetResult<Prisma.$SubCarreiraPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one SubCarreira that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SubCarreiraFindUniqueOrThrowArgs} args - Arguments to find a SubCarreira
     * @example
     * // Get one SubCarreira
     * const subCarreira = await prisma.subCarreira.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends SubCarreiraFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, SubCarreiraFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__SubCarreiraClient<$Result.GetResult<Prisma.$SubCarreiraPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first SubCarreira that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubCarreiraFindFirstArgs} args - Arguments to find a SubCarreira
     * @example
     * // Get one SubCarreira
     * const subCarreira = await prisma.subCarreira.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends SubCarreiraFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, SubCarreiraFindFirstArgs<ExtArgs>>
    ): Prisma__SubCarreiraClient<$Result.GetResult<Prisma.$SubCarreiraPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first SubCarreira that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubCarreiraFindFirstOrThrowArgs} args - Arguments to find a SubCarreira
     * @example
     * // Get one SubCarreira
     * const subCarreira = await prisma.subCarreira.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends SubCarreiraFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, SubCarreiraFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__SubCarreiraClient<$Result.GetResult<Prisma.$SubCarreiraPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more SubCarreiras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubCarreiraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SubCarreiras
     * const subCarreiras = await prisma.subCarreira.findMany()
     * 
     * // Get first 10 SubCarreiras
     * const subCarreiras = await prisma.subCarreira.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subCarreiraWithIdOnly = await prisma.subCarreira.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends SubCarreiraFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, SubCarreiraFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubCarreiraPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a SubCarreira.
     * @param {SubCarreiraCreateArgs} args - Arguments to create a SubCarreira.
     * @example
     * // Create one SubCarreira
     * const SubCarreira = await prisma.subCarreira.create({
     *   data: {
     *     // ... data to create a SubCarreira
     *   }
     * })
     * 
    **/
    create<T extends SubCarreiraCreateArgs<ExtArgs>>(
      args: SelectSubset<T, SubCarreiraCreateArgs<ExtArgs>>
    ): Prisma__SubCarreiraClient<$Result.GetResult<Prisma.$SubCarreiraPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many SubCarreiras.
     * @param {SubCarreiraCreateManyArgs} args - Arguments to create many SubCarreiras.
     * @example
     * // Create many SubCarreiras
     * const subCarreira = await prisma.subCarreira.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends SubCarreiraCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, SubCarreiraCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SubCarreiras and returns the data saved in the database.
     * @param {SubCarreiraCreateManyAndReturnArgs} args - Arguments to create many SubCarreiras.
     * @example
     * // Create many SubCarreiras
     * const subCarreira = await prisma.subCarreira.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SubCarreiras and only return the `id`
     * const subCarreiraWithIdOnly = await prisma.subCarreira.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends SubCarreiraCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, SubCarreiraCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubCarreiraPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a SubCarreira.
     * @param {SubCarreiraDeleteArgs} args - Arguments to delete one SubCarreira.
     * @example
     * // Delete one SubCarreira
     * const SubCarreira = await prisma.subCarreira.delete({
     *   where: {
     *     // ... filter to delete one SubCarreira
     *   }
     * })
     * 
    **/
    delete<T extends SubCarreiraDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, SubCarreiraDeleteArgs<ExtArgs>>
    ): Prisma__SubCarreiraClient<$Result.GetResult<Prisma.$SubCarreiraPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one SubCarreira.
     * @param {SubCarreiraUpdateArgs} args - Arguments to update one SubCarreira.
     * @example
     * // Update one SubCarreira
     * const subCarreira = await prisma.subCarreira.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends SubCarreiraUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, SubCarreiraUpdateArgs<ExtArgs>>
    ): Prisma__SubCarreiraClient<$Result.GetResult<Prisma.$SubCarreiraPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more SubCarreiras.
     * @param {SubCarreiraDeleteManyArgs} args - Arguments to filter SubCarreiras to delete.
     * @example
     * // Delete a few SubCarreiras
     * const { count } = await prisma.subCarreira.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends SubCarreiraDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, SubCarreiraDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SubCarreiras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubCarreiraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SubCarreiras
     * const subCarreira = await prisma.subCarreira.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends SubCarreiraUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, SubCarreiraUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SubCarreira.
     * @param {SubCarreiraUpsertArgs} args - Arguments to update or create a SubCarreira.
     * @example
     * // Update or create a SubCarreira
     * const subCarreira = await prisma.subCarreira.upsert({
     *   create: {
     *     // ... data to create a SubCarreira
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SubCarreira we want to update
     *   }
     * })
    **/
    upsert<T extends SubCarreiraUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, SubCarreiraUpsertArgs<ExtArgs>>
    ): Prisma__SubCarreiraClient<$Result.GetResult<Prisma.$SubCarreiraPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of SubCarreiras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubCarreiraCountArgs} args - Arguments to filter SubCarreiras to count.
     * @example
     * // Count the number of SubCarreiras
     * const count = await prisma.subCarreira.count({
     *   where: {
     *     // ... the filter for the SubCarreiras we want to count
     *   }
     * })
    **/
    count<T extends SubCarreiraCountArgs>(
      args?: Subset<T, SubCarreiraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubCarreiraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SubCarreira.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubCarreiraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubCarreiraAggregateArgs>(args: Subset<T, SubCarreiraAggregateArgs>): Prisma.PrismaPromise<GetSubCarreiraAggregateType<T>>

    /**
     * Group by SubCarreira.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubCarreiraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubCarreiraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubCarreiraGroupByArgs['orderBy'] }
        : { orderBy?: SubCarreiraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubCarreiraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubCarreiraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SubCarreira model
   */
  readonly fields: SubCarreiraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SubCarreira.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SubCarreiraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Carreira<T extends SubCarreira$CarreiraArgs<ExtArgs> = {}>(args?: Subset<T, SubCarreira$CarreiraArgs<ExtArgs>>): Prisma__CarreiraClient<$Result.GetResult<Prisma.$CarreiraPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    categoria<T extends SubCarreira$categoriaArgs<ExtArgs> = {}>(args?: Subset<T, SubCarreira$categoriaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaRHPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the SubCarreira model
   */ 
  interface SubCarreiraFieldRefs {
    readonly id: FieldRef<"SubCarreira", 'Int'>
    readonly nome_SubCarreira: FieldRef<"SubCarreira", 'String'>
    readonly Id_carreira: FieldRef<"SubCarreira", 'Int'>
    readonly createdAt: FieldRef<"SubCarreira", 'DateTime'>
    readonly updatedAt: FieldRef<"SubCarreira", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SubCarreira findUnique
   */
  export type SubCarreiraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubCarreira
     */
    select?: SubCarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubCarreiraInclude<ExtArgs> | null
    /**
     * Filter, which SubCarreira to fetch.
     */
    where: SubCarreiraWhereUniqueInput
  }

  /**
   * SubCarreira findUniqueOrThrow
   */
  export type SubCarreiraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubCarreira
     */
    select?: SubCarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubCarreiraInclude<ExtArgs> | null
    /**
     * Filter, which SubCarreira to fetch.
     */
    where: SubCarreiraWhereUniqueInput
  }

  /**
   * SubCarreira findFirst
   */
  export type SubCarreiraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubCarreira
     */
    select?: SubCarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubCarreiraInclude<ExtArgs> | null
    /**
     * Filter, which SubCarreira to fetch.
     */
    where?: SubCarreiraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubCarreiras to fetch.
     */
    orderBy?: SubCarreiraOrderByWithRelationInput | SubCarreiraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubCarreiras.
     */
    cursor?: SubCarreiraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubCarreiras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubCarreiras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubCarreiras.
     */
    distinct?: SubCarreiraScalarFieldEnum | SubCarreiraScalarFieldEnum[]
  }

  /**
   * SubCarreira findFirstOrThrow
   */
  export type SubCarreiraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubCarreira
     */
    select?: SubCarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubCarreiraInclude<ExtArgs> | null
    /**
     * Filter, which SubCarreira to fetch.
     */
    where?: SubCarreiraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubCarreiras to fetch.
     */
    orderBy?: SubCarreiraOrderByWithRelationInput | SubCarreiraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubCarreiras.
     */
    cursor?: SubCarreiraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubCarreiras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubCarreiras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubCarreiras.
     */
    distinct?: SubCarreiraScalarFieldEnum | SubCarreiraScalarFieldEnum[]
  }

  /**
   * SubCarreira findMany
   */
  export type SubCarreiraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubCarreira
     */
    select?: SubCarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubCarreiraInclude<ExtArgs> | null
    /**
     * Filter, which SubCarreiras to fetch.
     */
    where?: SubCarreiraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubCarreiras to fetch.
     */
    orderBy?: SubCarreiraOrderByWithRelationInput | SubCarreiraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SubCarreiras.
     */
    cursor?: SubCarreiraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubCarreiras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubCarreiras.
     */
    skip?: number
    distinct?: SubCarreiraScalarFieldEnum | SubCarreiraScalarFieldEnum[]
  }

  /**
   * SubCarreira create
   */
  export type SubCarreiraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubCarreira
     */
    select?: SubCarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubCarreiraInclude<ExtArgs> | null
    /**
     * The data needed to create a SubCarreira.
     */
    data: XOR<SubCarreiraCreateInput, SubCarreiraUncheckedCreateInput>
  }

  /**
   * SubCarreira createMany
   */
  export type SubCarreiraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SubCarreiras.
     */
    data: SubCarreiraCreateManyInput | SubCarreiraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SubCarreira createManyAndReturn
   */
  export type SubCarreiraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubCarreira
     */
    select?: SubCarreiraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many SubCarreiras.
     */
    data: SubCarreiraCreateManyInput | SubCarreiraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubCarreiraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SubCarreira update
   */
  export type SubCarreiraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubCarreira
     */
    select?: SubCarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubCarreiraInclude<ExtArgs> | null
    /**
     * The data needed to update a SubCarreira.
     */
    data: XOR<SubCarreiraUpdateInput, SubCarreiraUncheckedUpdateInput>
    /**
     * Choose, which SubCarreira to update.
     */
    where: SubCarreiraWhereUniqueInput
  }

  /**
   * SubCarreira updateMany
   */
  export type SubCarreiraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SubCarreiras.
     */
    data: XOR<SubCarreiraUpdateManyMutationInput, SubCarreiraUncheckedUpdateManyInput>
    /**
     * Filter which SubCarreiras to update
     */
    where?: SubCarreiraWhereInput
  }

  /**
   * SubCarreira upsert
   */
  export type SubCarreiraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubCarreira
     */
    select?: SubCarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubCarreiraInclude<ExtArgs> | null
    /**
     * The filter to search for the SubCarreira to update in case it exists.
     */
    where: SubCarreiraWhereUniqueInput
    /**
     * In case the SubCarreira found by the `where` argument doesn't exist, create a new SubCarreira with this data.
     */
    create: XOR<SubCarreiraCreateInput, SubCarreiraUncheckedCreateInput>
    /**
     * In case the SubCarreira was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SubCarreiraUpdateInput, SubCarreiraUncheckedUpdateInput>
  }

  /**
   * SubCarreira delete
   */
  export type SubCarreiraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubCarreira
     */
    select?: SubCarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubCarreiraInclude<ExtArgs> | null
    /**
     * Filter which SubCarreira to delete.
     */
    where: SubCarreiraWhereUniqueInput
  }

  /**
   * SubCarreira deleteMany
   */
  export type SubCarreiraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubCarreiras to delete
     */
    where?: SubCarreiraWhereInput
  }

  /**
   * SubCarreira.Carreira
   */
  export type SubCarreira$CarreiraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carreira
     */
    select?: CarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarreiraInclude<ExtArgs> | null
    where?: CarreiraWhereInput
  }

  /**
   * SubCarreira.categoria
   */
  export type SubCarreira$categoriaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaRH
     */
    select?: CategoriaRHSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaRHInclude<ExtArgs> | null
    where?: CategoriaRHWhereInput
    orderBy?: CategoriaRHOrderByWithRelationInput | CategoriaRHOrderByWithRelationInput[]
    cursor?: CategoriaRHWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoriaRHScalarFieldEnum | CategoriaRHScalarFieldEnum[]
  }

  /**
   * SubCarreira without action
   */
  export type SubCarreiraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubCarreira
     */
    select?: SubCarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubCarreiraInclude<ExtArgs> | null
  }


  /**
   * Model CategoriaRH
   */

  export type AggregateCategoriaRH = {
    _count: CategoriaRHCountAggregateOutputType | null
    _avg: CategoriaRHAvgAggregateOutputType | null
    _sum: CategoriaRHSumAggregateOutputType | null
    _min: CategoriaRHMinAggregateOutputType | null
    _max: CategoriaRHMaxAggregateOutputType | null
  }

  export type CategoriaRHAvgAggregateOutputType = {
    id: number | null
    salario_base: number | null
    Id_carreira: number | null
    Id_subCarreira: number | null
  }

  export type CategoriaRHSumAggregateOutputType = {
    id: number | null
    salario_base: number | null
    Id_carreira: number | null
    Id_subCarreira: number | null
  }

  export type CategoriaRHMinAggregateOutputType = {
    id: number | null
    nome_categoria: string | null
    salario_base: number | null
    Id_carreira: number | null
    Id_subCarreira: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CategoriaRHMaxAggregateOutputType = {
    id: number | null
    nome_categoria: string | null
    salario_base: number | null
    Id_carreira: number | null
    Id_subCarreira: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CategoriaRHCountAggregateOutputType = {
    id: number
    nome_categoria: number
    salario_base: number
    Id_carreira: number
    Id_subCarreira: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CategoriaRHAvgAggregateInputType = {
    id?: true
    salario_base?: true
    Id_carreira?: true
    Id_subCarreira?: true
  }

  export type CategoriaRHSumAggregateInputType = {
    id?: true
    salario_base?: true
    Id_carreira?: true
    Id_subCarreira?: true
  }

  export type CategoriaRHMinAggregateInputType = {
    id?: true
    nome_categoria?: true
    salario_base?: true
    Id_carreira?: true
    Id_subCarreira?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CategoriaRHMaxAggregateInputType = {
    id?: true
    nome_categoria?: true
    salario_base?: true
    Id_carreira?: true
    Id_subCarreira?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CategoriaRHCountAggregateInputType = {
    id?: true
    nome_categoria?: true
    salario_base?: true
    Id_carreira?: true
    Id_subCarreira?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CategoriaRHAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoriaRH to aggregate.
     */
    where?: CategoriaRHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaRHS to fetch.
     */
    orderBy?: CategoriaRHOrderByWithRelationInput | CategoriaRHOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoriaRHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaRHS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaRHS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CategoriaRHS
    **/
    _count?: true | CategoriaRHCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriaRHAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriaRHSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriaRHMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriaRHMaxAggregateInputType
  }

  export type GetCategoriaRHAggregateType<T extends CategoriaRHAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoriaRH]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoriaRH[P]>
      : GetScalarType<T[P], AggregateCategoriaRH[P]>
  }




  export type CategoriaRHGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaRHWhereInput
    orderBy?: CategoriaRHOrderByWithAggregationInput | CategoriaRHOrderByWithAggregationInput[]
    by: CategoriaRHScalarFieldEnum[] | CategoriaRHScalarFieldEnum
    having?: CategoriaRHScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriaRHCountAggregateInputType | true
    _avg?: CategoriaRHAvgAggregateInputType
    _sum?: CategoriaRHSumAggregateInputType
    _min?: CategoriaRHMinAggregateInputType
    _max?: CategoriaRHMaxAggregateInputType
  }

  export type CategoriaRHGroupByOutputType = {
    id: number
    nome_categoria: string
    salario_base: number
    Id_carreira: number | null
    Id_subCarreira: number | null
    createdAt: Date
    updatedAt: Date
    _count: CategoriaRHCountAggregateOutputType | null
    _avg: CategoriaRHAvgAggregateOutputType | null
    _sum: CategoriaRHSumAggregateOutputType | null
    _min: CategoriaRHMinAggregateOutputType | null
    _max: CategoriaRHMaxAggregateOutputType | null
  }

  type GetCategoriaRHGroupByPayload<T extends CategoriaRHGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriaRHGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriaRHGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriaRHGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriaRHGroupByOutputType[P]>
        }
      >
    >


  export type CategoriaRHSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_categoria?: boolean
    salario_base?: boolean
    Id_carreira?: boolean
    Id_subCarreira?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Carreira?: boolean | CategoriaRH$CarreiraArgs<ExtArgs>
    SubCarreira?: boolean | CategoriaRH$SubCarreiraArgs<ExtArgs>
    funcionario?: boolean | CategoriaRH$funcionarioArgs<ExtArgs>
    _count?: boolean | CategoriaRHCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoriaRH"]>

  export type CategoriaRHSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_categoria?: boolean
    salario_base?: boolean
    Id_carreira?: boolean
    Id_subCarreira?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Carreira?: boolean | CategoriaRH$CarreiraArgs<ExtArgs>
    SubCarreira?: boolean | CategoriaRH$SubCarreiraArgs<ExtArgs>
  }, ExtArgs["result"]["categoriaRH"]>

  export type CategoriaRHSelectScalar = {
    id?: boolean
    nome_categoria?: boolean
    salario_base?: boolean
    Id_carreira?: boolean
    Id_subCarreira?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CategoriaRHInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Carreira?: boolean | CategoriaRH$CarreiraArgs<ExtArgs>
    SubCarreira?: boolean | CategoriaRH$SubCarreiraArgs<ExtArgs>
    funcionario?: boolean | CategoriaRH$funcionarioArgs<ExtArgs>
    _count?: boolean | CategoriaRHCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoriaRHIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Carreira?: boolean | CategoriaRH$CarreiraArgs<ExtArgs>
    SubCarreira?: boolean | CategoriaRH$SubCarreiraArgs<ExtArgs>
  }

  export type $CategoriaRHPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CategoriaRH"
    objects: {
      Carreira: Prisma.$CarreiraPayload<ExtArgs> | null
      SubCarreira: Prisma.$SubCarreiraPayload<ExtArgs> | null
      funcionario: Prisma.$FuncionarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome_categoria: string
      salario_base: number
      Id_carreira: number | null
      Id_subCarreira: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["categoriaRH"]>
    composites: {}
  }

  type CategoriaRHGetPayload<S extends boolean | null | undefined | CategoriaRHDefaultArgs> = $Result.GetResult<Prisma.$CategoriaRHPayload, S>

  type CategoriaRHCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CategoriaRHFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CategoriaRHCountAggregateInputType | true
    }

  export interface CategoriaRHDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CategoriaRH'], meta: { name: 'CategoriaRH' } }
    /**
     * Find zero or one CategoriaRH that matches the filter.
     * @param {CategoriaRHFindUniqueArgs} args - Arguments to find a CategoriaRH
     * @example
     * // Get one CategoriaRH
     * const categoriaRH = await prisma.categoriaRH.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CategoriaRHFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaRHFindUniqueArgs<ExtArgs>>
    ): Prisma__CategoriaRHClient<$Result.GetResult<Prisma.$CategoriaRHPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one CategoriaRH that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CategoriaRHFindUniqueOrThrowArgs} args - Arguments to find a CategoriaRH
     * @example
     * // Get one CategoriaRH
     * const categoriaRH = await prisma.categoriaRH.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CategoriaRHFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaRHFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CategoriaRHClient<$Result.GetResult<Prisma.$CategoriaRHPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first CategoriaRH that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaRHFindFirstArgs} args - Arguments to find a CategoriaRH
     * @example
     * // Get one CategoriaRH
     * const categoriaRH = await prisma.categoriaRH.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CategoriaRHFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaRHFindFirstArgs<ExtArgs>>
    ): Prisma__CategoriaRHClient<$Result.GetResult<Prisma.$CategoriaRHPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first CategoriaRH that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaRHFindFirstOrThrowArgs} args - Arguments to find a CategoriaRH
     * @example
     * // Get one CategoriaRH
     * const categoriaRH = await prisma.categoriaRH.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CategoriaRHFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaRHFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CategoriaRHClient<$Result.GetResult<Prisma.$CategoriaRHPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more CategoriaRHS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaRHFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CategoriaRHS
     * const categoriaRHS = await prisma.categoriaRH.findMany()
     * 
     * // Get first 10 CategoriaRHS
     * const categoriaRHS = await prisma.categoriaRH.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriaRHWithIdOnly = await prisma.categoriaRH.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CategoriaRHFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaRHFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaRHPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a CategoriaRH.
     * @param {CategoriaRHCreateArgs} args - Arguments to create a CategoriaRH.
     * @example
     * // Create one CategoriaRH
     * const CategoriaRH = await prisma.categoriaRH.create({
     *   data: {
     *     // ... data to create a CategoriaRH
     *   }
     * })
     * 
    **/
    create<T extends CategoriaRHCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaRHCreateArgs<ExtArgs>>
    ): Prisma__CategoriaRHClient<$Result.GetResult<Prisma.$CategoriaRHPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many CategoriaRHS.
     * @param {CategoriaRHCreateManyArgs} args - Arguments to create many CategoriaRHS.
     * @example
     * // Create many CategoriaRHS
     * const categoriaRH = await prisma.categoriaRH.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends CategoriaRHCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaRHCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CategoriaRHS and returns the data saved in the database.
     * @param {CategoriaRHCreateManyAndReturnArgs} args - Arguments to create many CategoriaRHS.
     * @example
     * // Create many CategoriaRHS
     * const categoriaRH = await prisma.categoriaRH.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CategoriaRHS and only return the `id`
     * const categoriaRHWithIdOnly = await prisma.categoriaRH.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends CategoriaRHCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaRHCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaRHPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a CategoriaRH.
     * @param {CategoriaRHDeleteArgs} args - Arguments to delete one CategoriaRH.
     * @example
     * // Delete one CategoriaRH
     * const CategoriaRH = await prisma.categoriaRH.delete({
     *   where: {
     *     // ... filter to delete one CategoriaRH
     *   }
     * })
     * 
    **/
    delete<T extends CategoriaRHDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaRHDeleteArgs<ExtArgs>>
    ): Prisma__CategoriaRHClient<$Result.GetResult<Prisma.$CategoriaRHPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one CategoriaRH.
     * @param {CategoriaRHUpdateArgs} args - Arguments to update one CategoriaRH.
     * @example
     * // Update one CategoriaRH
     * const categoriaRH = await prisma.categoriaRH.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CategoriaRHUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaRHUpdateArgs<ExtArgs>>
    ): Prisma__CategoriaRHClient<$Result.GetResult<Prisma.$CategoriaRHPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more CategoriaRHS.
     * @param {CategoriaRHDeleteManyArgs} args - Arguments to filter CategoriaRHS to delete.
     * @example
     * // Delete a few CategoriaRHS
     * const { count } = await prisma.categoriaRH.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CategoriaRHDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaRHDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CategoriaRHS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaRHUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CategoriaRHS
     * const categoriaRH = await prisma.categoriaRH.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CategoriaRHUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaRHUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CategoriaRH.
     * @param {CategoriaRHUpsertArgs} args - Arguments to update or create a CategoriaRH.
     * @example
     * // Update or create a CategoriaRH
     * const categoriaRH = await prisma.categoriaRH.upsert({
     *   create: {
     *     // ... data to create a CategoriaRH
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CategoriaRH we want to update
     *   }
     * })
    **/
    upsert<T extends CategoriaRHUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaRHUpsertArgs<ExtArgs>>
    ): Prisma__CategoriaRHClient<$Result.GetResult<Prisma.$CategoriaRHPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of CategoriaRHS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaRHCountArgs} args - Arguments to filter CategoriaRHS to count.
     * @example
     * // Count the number of CategoriaRHS
     * const count = await prisma.categoriaRH.count({
     *   where: {
     *     // ... the filter for the CategoriaRHS we want to count
     *   }
     * })
    **/
    count<T extends CategoriaRHCountArgs>(
      args?: Subset<T, CategoriaRHCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriaRHCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CategoriaRH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaRHAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriaRHAggregateArgs>(args: Subset<T, CategoriaRHAggregateArgs>): Prisma.PrismaPromise<GetCategoriaRHAggregateType<T>>

    /**
     * Group by CategoriaRH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaRHGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoriaRHGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoriaRHGroupByArgs['orderBy'] }
        : { orderBy?: CategoriaRHGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoriaRHGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriaRHGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CategoriaRH model
   */
  readonly fields: CategoriaRHFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CategoriaRH.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoriaRHClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Carreira<T extends CategoriaRH$CarreiraArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaRH$CarreiraArgs<ExtArgs>>): Prisma__CarreiraClient<$Result.GetResult<Prisma.$CarreiraPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    SubCarreira<T extends CategoriaRH$SubCarreiraArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaRH$SubCarreiraArgs<ExtArgs>>): Prisma__SubCarreiraClient<$Result.GetResult<Prisma.$SubCarreiraPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    funcionario<T extends CategoriaRH$funcionarioArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaRH$funcionarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the CategoriaRH model
   */ 
  interface CategoriaRHFieldRefs {
    readonly id: FieldRef<"CategoriaRH", 'Int'>
    readonly nome_categoria: FieldRef<"CategoriaRH", 'String'>
    readonly salario_base: FieldRef<"CategoriaRH", 'Float'>
    readonly Id_carreira: FieldRef<"CategoriaRH", 'Int'>
    readonly Id_subCarreira: FieldRef<"CategoriaRH", 'Int'>
    readonly createdAt: FieldRef<"CategoriaRH", 'DateTime'>
    readonly updatedAt: FieldRef<"CategoriaRH", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CategoriaRH findUnique
   */
  export type CategoriaRHFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaRH
     */
    select?: CategoriaRHSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaRHInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaRH to fetch.
     */
    where: CategoriaRHWhereUniqueInput
  }

  /**
   * CategoriaRH findUniqueOrThrow
   */
  export type CategoriaRHFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaRH
     */
    select?: CategoriaRHSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaRHInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaRH to fetch.
     */
    where: CategoriaRHWhereUniqueInput
  }

  /**
   * CategoriaRH findFirst
   */
  export type CategoriaRHFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaRH
     */
    select?: CategoriaRHSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaRHInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaRH to fetch.
     */
    where?: CategoriaRHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaRHS to fetch.
     */
    orderBy?: CategoriaRHOrderByWithRelationInput | CategoriaRHOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoriaRHS.
     */
    cursor?: CategoriaRHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaRHS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaRHS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoriaRHS.
     */
    distinct?: CategoriaRHScalarFieldEnum | CategoriaRHScalarFieldEnum[]
  }

  /**
   * CategoriaRH findFirstOrThrow
   */
  export type CategoriaRHFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaRH
     */
    select?: CategoriaRHSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaRHInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaRH to fetch.
     */
    where?: CategoriaRHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaRHS to fetch.
     */
    orderBy?: CategoriaRHOrderByWithRelationInput | CategoriaRHOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoriaRHS.
     */
    cursor?: CategoriaRHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaRHS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaRHS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoriaRHS.
     */
    distinct?: CategoriaRHScalarFieldEnum | CategoriaRHScalarFieldEnum[]
  }

  /**
   * CategoriaRH findMany
   */
  export type CategoriaRHFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaRH
     */
    select?: CategoriaRHSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaRHInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaRHS to fetch.
     */
    where?: CategoriaRHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaRHS to fetch.
     */
    orderBy?: CategoriaRHOrderByWithRelationInput | CategoriaRHOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CategoriaRHS.
     */
    cursor?: CategoriaRHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaRHS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaRHS.
     */
    skip?: number
    distinct?: CategoriaRHScalarFieldEnum | CategoriaRHScalarFieldEnum[]
  }

  /**
   * CategoriaRH create
   */
  export type CategoriaRHCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaRH
     */
    select?: CategoriaRHSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaRHInclude<ExtArgs> | null
    /**
     * The data needed to create a CategoriaRH.
     */
    data: XOR<CategoriaRHCreateInput, CategoriaRHUncheckedCreateInput>
  }

  /**
   * CategoriaRH createMany
   */
  export type CategoriaRHCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CategoriaRHS.
     */
    data: CategoriaRHCreateManyInput | CategoriaRHCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CategoriaRH createManyAndReturn
   */
  export type CategoriaRHCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaRH
     */
    select?: CategoriaRHSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many CategoriaRHS.
     */
    data: CategoriaRHCreateManyInput | CategoriaRHCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaRHIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CategoriaRH update
   */
  export type CategoriaRHUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaRH
     */
    select?: CategoriaRHSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaRHInclude<ExtArgs> | null
    /**
     * The data needed to update a CategoriaRH.
     */
    data: XOR<CategoriaRHUpdateInput, CategoriaRHUncheckedUpdateInput>
    /**
     * Choose, which CategoriaRH to update.
     */
    where: CategoriaRHWhereUniqueInput
  }

  /**
   * CategoriaRH updateMany
   */
  export type CategoriaRHUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CategoriaRHS.
     */
    data: XOR<CategoriaRHUpdateManyMutationInput, CategoriaRHUncheckedUpdateManyInput>
    /**
     * Filter which CategoriaRHS to update
     */
    where?: CategoriaRHWhereInput
  }

  /**
   * CategoriaRH upsert
   */
  export type CategoriaRHUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaRH
     */
    select?: CategoriaRHSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaRHInclude<ExtArgs> | null
    /**
     * The filter to search for the CategoriaRH to update in case it exists.
     */
    where: CategoriaRHWhereUniqueInput
    /**
     * In case the CategoriaRH found by the `where` argument doesn't exist, create a new CategoriaRH with this data.
     */
    create: XOR<CategoriaRHCreateInput, CategoriaRHUncheckedCreateInput>
    /**
     * In case the CategoriaRH was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoriaRHUpdateInput, CategoriaRHUncheckedUpdateInput>
  }

  /**
   * CategoriaRH delete
   */
  export type CategoriaRHDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaRH
     */
    select?: CategoriaRHSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaRHInclude<ExtArgs> | null
    /**
     * Filter which CategoriaRH to delete.
     */
    where: CategoriaRHWhereUniqueInput
  }

  /**
   * CategoriaRH deleteMany
   */
  export type CategoriaRHDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoriaRHS to delete
     */
    where?: CategoriaRHWhereInput
  }

  /**
   * CategoriaRH.Carreira
   */
  export type CategoriaRH$CarreiraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carreira
     */
    select?: CarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarreiraInclude<ExtArgs> | null
    where?: CarreiraWhereInput
  }

  /**
   * CategoriaRH.SubCarreira
   */
  export type CategoriaRH$SubCarreiraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubCarreira
     */
    select?: SubCarreiraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubCarreiraInclude<ExtArgs> | null
    where?: SubCarreiraWhereInput
  }

  /**
   * CategoriaRH.funcionario
   */
  export type CategoriaRH$funcionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    where?: FuncionarioWhereInput
    orderBy?: FuncionarioOrderByWithRelationInput | FuncionarioOrderByWithRelationInput[]
    cursor?: FuncionarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FuncionarioScalarFieldEnum | FuncionarioScalarFieldEnum[]
  }

  /**
   * CategoriaRH without action
   */
  export type CategoriaRHDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaRH
     */
    select?: CategoriaRHSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaRHInclude<ExtArgs> | null
  }


  /**
   * Model Funcao
   */

  export type AggregateFuncao = {
    _count: FuncaoCountAggregateOutputType | null
    _avg: FuncaoAvgAggregateOutputType | null
    _sum: FuncaoSumAggregateOutputType | null
    _min: FuncaoMinAggregateOutputType | null
    _max: FuncaoMaxAggregateOutputType | null
  }

  export type FuncaoAvgAggregateOutputType = {
    id: number | null
  }

  export type FuncaoSumAggregateOutputType = {
    id: number | null
  }

  export type FuncaoMinAggregateOutputType = {
    id: number | null
    nome_funcao: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FuncaoMaxAggregateOutputType = {
    id: number | null
    nome_funcao: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FuncaoCountAggregateOutputType = {
    id: number
    nome_funcao: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FuncaoAvgAggregateInputType = {
    id?: true
  }

  export type FuncaoSumAggregateInputType = {
    id?: true
  }

  export type FuncaoMinAggregateInputType = {
    id?: true
    nome_funcao?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FuncaoMaxAggregateInputType = {
    id?: true
    nome_funcao?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FuncaoCountAggregateInputType = {
    id?: true
    nome_funcao?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FuncaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Funcao to aggregate.
     */
    where?: FuncaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funcaos to fetch.
     */
    orderBy?: FuncaoOrderByWithRelationInput | FuncaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FuncaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funcaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funcaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Funcaos
    **/
    _count?: true | FuncaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FuncaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FuncaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FuncaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FuncaoMaxAggregateInputType
  }

  export type GetFuncaoAggregateType<T extends FuncaoAggregateArgs> = {
        [P in keyof T & keyof AggregateFuncao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFuncao[P]>
      : GetScalarType<T[P], AggregateFuncao[P]>
  }




  export type FuncaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FuncaoWhereInput
    orderBy?: FuncaoOrderByWithAggregationInput | FuncaoOrderByWithAggregationInput[]
    by: FuncaoScalarFieldEnum[] | FuncaoScalarFieldEnum
    having?: FuncaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FuncaoCountAggregateInputType | true
    _avg?: FuncaoAvgAggregateInputType
    _sum?: FuncaoSumAggregateInputType
    _min?: FuncaoMinAggregateInputType
    _max?: FuncaoMaxAggregateInputType
  }

  export type FuncaoGroupByOutputType = {
    id: number
    nome_funcao: string
    createdAt: Date
    updatedAt: Date
    _count: FuncaoCountAggregateOutputType | null
    _avg: FuncaoAvgAggregateOutputType | null
    _sum: FuncaoSumAggregateOutputType | null
    _min: FuncaoMinAggregateOutputType | null
    _max: FuncaoMaxAggregateOutputType | null
  }

  type GetFuncaoGroupByPayload<T extends FuncaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FuncaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FuncaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FuncaoGroupByOutputType[P]>
            : GetScalarType<T[P], FuncaoGroupByOutputType[P]>
        }
      >
    >


  export type FuncaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_funcao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    funcionario?: boolean | Funcao$funcionarioArgs<ExtArgs>
    _count?: boolean | FuncaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["funcao"]>

  export type FuncaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_funcao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["funcao"]>

  export type FuncaoSelectScalar = {
    id?: boolean
    nome_funcao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FuncaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionario?: boolean | Funcao$funcionarioArgs<ExtArgs>
    _count?: boolean | FuncaoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FuncaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $FuncaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Funcao"
    objects: {
      funcionario: Prisma.$FuncionarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome_funcao: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["funcao"]>
    composites: {}
  }

  type FuncaoGetPayload<S extends boolean | null | undefined | FuncaoDefaultArgs> = $Result.GetResult<Prisma.$FuncaoPayload, S>

  type FuncaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FuncaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FuncaoCountAggregateInputType | true
    }

  export interface FuncaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Funcao'], meta: { name: 'Funcao' } }
    /**
     * Find zero or one Funcao that matches the filter.
     * @param {FuncaoFindUniqueArgs} args - Arguments to find a Funcao
     * @example
     * // Get one Funcao
     * const funcao = await prisma.funcao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FuncaoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, FuncaoFindUniqueArgs<ExtArgs>>
    ): Prisma__FuncaoClient<$Result.GetResult<Prisma.$FuncaoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Funcao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FuncaoFindUniqueOrThrowArgs} args - Arguments to find a Funcao
     * @example
     * // Get one Funcao
     * const funcao = await prisma.funcao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FuncaoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncaoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__FuncaoClient<$Result.GetResult<Prisma.$FuncaoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Funcao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncaoFindFirstArgs} args - Arguments to find a Funcao
     * @example
     * // Get one Funcao
     * const funcao = await prisma.funcao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FuncaoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncaoFindFirstArgs<ExtArgs>>
    ): Prisma__FuncaoClient<$Result.GetResult<Prisma.$FuncaoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Funcao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncaoFindFirstOrThrowArgs} args - Arguments to find a Funcao
     * @example
     * // Get one Funcao
     * const funcao = await prisma.funcao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FuncaoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncaoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__FuncaoClient<$Result.GetResult<Prisma.$FuncaoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Funcaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Funcaos
     * const funcaos = await prisma.funcao.findMany()
     * 
     * // Get first 10 Funcaos
     * const funcaos = await prisma.funcao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const funcaoWithIdOnly = await prisma.funcao.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FuncaoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncaoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncaoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Funcao.
     * @param {FuncaoCreateArgs} args - Arguments to create a Funcao.
     * @example
     * // Create one Funcao
     * const Funcao = await prisma.funcao.create({
     *   data: {
     *     // ... data to create a Funcao
     *   }
     * })
     * 
    **/
    create<T extends FuncaoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, FuncaoCreateArgs<ExtArgs>>
    ): Prisma__FuncaoClient<$Result.GetResult<Prisma.$FuncaoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Funcaos.
     * @param {FuncaoCreateManyArgs} args - Arguments to create many Funcaos.
     * @example
     * // Create many Funcaos
     * const funcao = await prisma.funcao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends FuncaoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncaoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Funcaos and returns the data saved in the database.
     * @param {FuncaoCreateManyAndReturnArgs} args - Arguments to create many Funcaos.
     * @example
     * // Create many Funcaos
     * const funcao = await prisma.funcao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Funcaos and only return the `id`
     * const funcaoWithIdOnly = await prisma.funcao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends FuncaoCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncaoCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncaoPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Funcao.
     * @param {FuncaoDeleteArgs} args - Arguments to delete one Funcao.
     * @example
     * // Delete one Funcao
     * const Funcao = await prisma.funcao.delete({
     *   where: {
     *     // ... filter to delete one Funcao
     *   }
     * })
     * 
    **/
    delete<T extends FuncaoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, FuncaoDeleteArgs<ExtArgs>>
    ): Prisma__FuncaoClient<$Result.GetResult<Prisma.$FuncaoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Funcao.
     * @param {FuncaoUpdateArgs} args - Arguments to update one Funcao.
     * @example
     * // Update one Funcao
     * const funcao = await prisma.funcao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FuncaoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, FuncaoUpdateArgs<ExtArgs>>
    ): Prisma__FuncaoClient<$Result.GetResult<Prisma.$FuncaoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Funcaos.
     * @param {FuncaoDeleteManyArgs} args - Arguments to filter Funcaos to delete.
     * @example
     * // Delete a few Funcaos
     * const { count } = await prisma.funcao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FuncaoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncaoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Funcaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Funcaos
     * const funcao = await prisma.funcao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FuncaoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, FuncaoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Funcao.
     * @param {FuncaoUpsertArgs} args - Arguments to update or create a Funcao.
     * @example
     * // Update or create a Funcao
     * const funcao = await prisma.funcao.upsert({
     *   create: {
     *     // ... data to create a Funcao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Funcao we want to update
     *   }
     * })
    **/
    upsert<T extends FuncaoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, FuncaoUpsertArgs<ExtArgs>>
    ): Prisma__FuncaoClient<$Result.GetResult<Prisma.$FuncaoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Funcaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncaoCountArgs} args - Arguments to filter Funcaos to count.
     * @example
     * // Count the number of Funcaos
     * const count = await prisma.funcao.count({
     *   where: {
     *     // ... the filter for the Funcaos we want to count
     *   }
     * })
    **/
    count<T extends FuncaoCountArgs>(
      args?: Subset<T, FuncaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FuncaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Funcao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FuncaoAggregateArgs>(args: Subset<T, FuncaoAggregateArgs>): Prisma.PrismaPromise<GetFuncaoAggregateType<T>>

    /**
     * Group by Funcao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FuncaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FuncaoGroupByArgs['orderBy'] }
        : { orderBy?: FuncaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FuncaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFuncaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Funcao model
   */
  readonly fields: FuncaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Funcao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FuncaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    funcionario<T extends Funcao$funcionarioArgs<ExtArgs> = {}>(args?: Subset<T, Funcao$funcionarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Funcao model
   */ 
  interface FuncaoFieldRefs {
    readonly id: FieldRef<"Funcao", 'Int'>
    readonly nome_funcao: FieldRef<"Funcao", 'String'>
    readonly createdAt: FieldRef<"Funcao", 'DateTime'>
    readonly updatedAt: FieldRef<"Funcao", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Funcao findUnique
   */
  export type FuncaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcao
     */
    select?: FuncaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncaoInclude<ExtArgs> | null
    /**
     * Filter, which Funcao to fetch.
     */
    where: FuncaoWhereUniqueInput
  }

  /**
   * Funcao findUniqueOrThrow
   */
  export type FuncaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcao
     */
    select?: FuncaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncaoInclude<ExtArgs> | null
    /**
     * Filter, which Funcao to fetch.
     */
    where: FuncaoWhereUniqueInput
  }

  /**
   * Funcao findFirst
   */
  export type FuncaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcao
     */
    select?: FuncaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncaoInclude<ExtArgs> | null
    /**
     * Filter, which Funcao to fetch.
     */
    where?: FuncaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funcaos to fetch.
     */
    orderBy?: FuncaoOrderByWithRelationInput | FuncaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Funcaos.
     */
    cursor?: FuncaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funcaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funcaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Funcaos.
     */
    distinct?: FuncaoScalarFieldEnum | FuncaoScalarFieldEnum[]
  }

  /**
   * Funcao findFirstOrThrow
   */
  export type FuncaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcao
     */
    select?: FuncaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncaoInclude<ExtArgs> | null
    /**
     * Filter, which Funcao to fetch.
     */
    where?: FuncaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funcaos to fetch.
     */
    orderBy?: FuncaoOrderByWithRelationInput | FuncaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Funcaos.
     */
    cursor?: FuncaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funcaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funcaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Funcaos.
     */
    distinct?: FuncaoScalarFieldEnum | FuncaoScalarFieldEnum[]
  }

  /**
   * Funcao findMany
   */
  export type FuncaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcao
     */
    select?: FuncaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncaoInclude<ExtArgs> | null
    /**
     * Filter, which Funcaos to fetch.
     */
    where?: FuncaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funcaos to fetch.
     */
    orderBy?: FuncaoOrderByWithRelationInput | FuncaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Funcaos.
     */
    cursor?: FuncaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funcaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funcaos.
     */
    skip?: number
    distinct?: FuncaoScalarFieldEnum | FuncaoScalarFieldEnum[]
  }

  /**
   * Funcao create
   */
  export type FuncaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcao
     */
    select?: FuncaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncaoInclude<ExtArgs> | null
    /**
     * The data needed to create a Funcao.
     */
    data: XOR<FuncaoCreateInput, FuncaoUncheckedCreateInput>
  }

  /**
   * Funcao createMany
   */
  export type FuncaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Funcaos.
     */
    data: FuncaoCreateManyInput | FuncaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Funcao createManyAndReturn
   */
  export type FuncaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcao
     */
    select?: FuncaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Funcaos.
     */
    data: FuncaoCreateManyInput | FuncaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Funcao update
   */
  export type FuncaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcao
     */
    select?: FuncaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncaoInclude<ExtArgs> | null
    /**
     * The data needed to update a Funcao.
     */
    data: XOR<FuncaoUpdateInput, FuncaoUncheckedUpdateInput>
    /**
     * Choose, which Funcao to update.
     */
    where: FuncaoWhereUniqueInput
  }

  /**
   * Funcao updateMany
   */
  export type FuncaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Funcaos.
     */
    data: XOR<FuncaoUpdateManyMutationInput, FuncaoUncheckedUpdateManyInput>
    /**
     * Filter which Funcaos to update
     */
    where?: FuncaoWhereInput
  }

  /**
   * Funcao upsert
   */
  export type FuncaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcao
     */
    select?: FuncaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncaoInclude<ExtArgs> | null
    /**
     * The filter to search for the Funcao to update in case it exists.
     */
    where: FuncaoWhereUniqueInput
    /**
     * In case the Funcao found by the `where` argument doesn't exist, create a new Funcao with this data.
     */
    create: XOR<FuncaoCreateInput, FuncaoUncheckedCreateInput>
    /**
     * In case the Funcao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FuncaoUpdateInput, FuncaoUncheckedUpdateInput>
  }

  /**
   * Funcao delete
   */
  export type FuncaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcao
     */
    select?: FuncaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncaoInclude<ExtArgs> | null
    /**
     * Filter which Funcao to delete.
     */
    where: FuncaoWhereUniqueInput
  }

  /**
   * Funcao deleteMany
   */
  export type FuncaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Funcaos to delete
     */
    where?: FuncaoWhereInput
  }

  /**
   * Funcao.funcionario
   */
  export type Funcao$funcionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    where?: FuncionarioWhereInput
    orderBy?: FuncionarioOrderByWithRelationInput | FuncionarioOrderByWithRelationInput[]
    cursor?: FuncionarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FuncionarioScalarFieldEnum | FuncionarioScalarFieldEnum[]
  }

  /**
   * Funcao without action
   */
  export type FuncaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcao
     */
    select?: FuncaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncaoInclude<ExtArgs> | null
  }


  /**
   * Model Banco
   */

  export type AggregateBanco = {
    _count: BancoCountAggregateOutputType | null
    _avg: BancoAvgAggregateOutputType | null
    _sum: BancoSumAggregateOutputType | null
    _min: BancoMinAggregateOutputType | null
    _max: BancoMaxAggregateOutputType | null
  }

  export type BancoAvgAggregateOutputType = {
    id: number | null
  }

  export type BancoSumAggregateOutputType = {
    id: number | null
  }

  export type BancoMinAggregateOutputType = {
    id: number | null
    nome_banco: string | null
    codigo: string | null
    sigla: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BancoMaxAggregateOutputType = {
    id: number | null
    nome_banco: string | null
    codigo: string | null
    sigla: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BancoCountAggregateOutputType = {
    id: number
    nome_banco: number
    codigo: number
    sigla: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BancoAvgAggregateInputType = {
    id?: true
  }

  export type BancoSumAggregateInputType = {
    id?: true
  }

  export type BancoMinAggregateInputType = {
    id?: true
    nome_banco?: true
    codigo?: true
    sigla?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BancoMaxAggregateInputType = {
    id?: true
    nome_banco?: true
    codigo?: true
    sigla?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BancoCountAggregateInputType = {
    id?: true
    nome_banco?: true
    codigo?: true
    sigla?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BancoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Banco to aggregate.
     */
    where?: BancoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bancos to fetch.
     */
    orderBy?: BancoOrderByWithRelationInput | BancoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BancoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bancos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bancos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Bancos
    **/
    _count?: true | BancoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BancoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BancoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BancoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BancoMaxAggregateInputType
  }

  export type GetBancoAggregateType<T extends BancoAggregateArgs> = {
        [P in keyof T & keyof AggregateBanco]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBanco[P]>
      : GetScalarType<T[P], AggregateBanco[P]>
  }




  export type BancoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BancoWhereInput
    orderBy?: BancoOrderByWithAggregationInput | BancoOrderByWithAggregationInput[]
    by: BancoScalarFieldEnum[] | BancoScalarFieldEnum
    having?: BancoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BancoCountAggregateInputType | true
    _avg?: BancoAvgAggregateInputType
    _sum?: BancoSumAggregateInputType
    _min?: BancoMinAggregateInputType
    _max?: BancoMaxAggregateInputType
  }

  export type BancoGroupByOutputType = {
    id: number
    nome_banco: string
    codigo: string
    sigla: string
    createdAt: Date
    updatedAt: Date
    _count: BancoCountAggregateOutputType | null
    _avg: BancoAvgAggregateOutputType | null
    _sum: BancoSumAggregateOutputType | null
    _min: BancoMinAggregateOutputType | null
    _max: BancoMaxAggregateOutputType | null
  }

  type GetBancoGroupByPayload<T extends BancoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BancoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BancoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BancoGroupByOutputType[P]>
            : GetScalarType<T[P], BancoGroupByOutputType[P]>
        }
      >
    >


  export type BancoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_banco?: boolean
    codigo?: boolean
    sigla?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    funcionario?: boolean | Banco$funcionarioArgs<ExtArgs>
    _count?: boolean | BancoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["banco"]>

  export type BancoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_banco?: boolean
    codigo?: boolean
    sigla?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["banco"]>

  export type BancoSelectScalar = {
    id?: boolean
    nome_banco?: boolean
    codigo?: boolean
    sigla?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BancoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionario?: boolean | Banco$funcionarioArgs<ExtArgs>
    _count?: boolean | BancoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BancoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $BancoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Banco"
    objects: {
      funcionario: Prisma.$FuncionarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome_banco: string
      codigo: string
      sigla: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["banco"]>
    composites: {}
  }

  type BancoGetPayload<S extends boolean | null | undefined | BancoDefaultArgs> = $Result.GetResult<Prisma.$BancoPayload, S>

  type BancoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BancoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BancoCountAggregateInputType | true
    }

  export interface BancoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Banco'], meta: { name: 'Banco' } }
    /**
     * Find zero or one Banco that matches the filter.
     * @param {BancoFindUniqueArgs} args - Arguments to find a Banco
     * @example
     * // Get one Banco
     * const banco = await prisma.banco.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends BancoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, BancoFindUniqueArgs<ExtArgs>>
    ): Prisma__BancoClient<$Result.GetResult<Prisma.$BancoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Banco that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BancoFindUniqueOrThrowArgs} args - Arguments to find a Banco
     * @example
     * // Get one Banco
     * const banco = await prisma.banco.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends BancoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, BancoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__BancoClient<$Result.GetResult<Prisma.$BancoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Banco that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancoFindFirstArgs} args - Arguments to find a Banco
     * @example
     * // Get one Banco
     * const banco = await prisma.banco.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends BancoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, BancoFindFirstArgs<ExtArgs>>
    ): Prisma__BancoClient<$Result.GetResult<Prisma.$BancoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Banco that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancoFindFirstOrThrowArgs} args - Arguments to find a Banco
     * @example
     * // Get one Banco
     * const banco = await prisma.banco.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends BancoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, BancoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__BancoClient<$Result.GetResult<Prisma.$BancoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Bancos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Bancos
     * const bancos = await prisma.banco.findMany()
     * 
     * // Get first 10 Bancos
     * const bancos = await prisma.banco.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bancoWithIdOnly = await prisma.banco.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends BancoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, BancoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BancoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Banco.
     * @param {BancoCreateArgs} args - Arguments to create a Banco.
     * @example
     * // Create one Banco
     * const Banco = await prisma.banco.create({
     *   data: {
     *     // ... data to create a Banco
     *   }
     * })
     * 
    **/
    create<T extends BancoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, BancoCreateArgs<ExtArgs>>
    ): Prisma__BancoClient<$Result.GetResult<Prisma.$BancoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Bancos.
     * @param {BancoCreateManyArgs} args - Arguments to create many Bancos.
     * @example
     * // Create many Bancos
     * const banco = await prisma.banco.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends BancoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, BancoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Bancos and returns the data saved in the database.
     * @param {BancoCreateManyAndReturnArgs} args - Arguments to create many Bancos.
     * @example
     * // Create many Bancos
     * const banco = await prisma.banco.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Bancos and only return the `id`
     * const bancoWithIdOnly = await prisma.banco.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends BancoCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, BancoCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BancoPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Banco.
     * @param {BancoDeleteArgs} args - Arguments to delete one Banco.
     * @example
     * // Delete one Banco
     * const Banco = await prisma.banco.delete({
     *   where: {
     *     // ... filter to delete one Banco
     *   }
     * })
     * 
    **/
    delete<T extends BancoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, BancoDeleteArgs<ExtArgs>>
    ): Prisma__BancoClient<$Result.GetResult<Prisma.$BancoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Banco.
     * @param {BancoUpdateArgs} args - Arguments to update one Banco.
     * @example
     * // Update one Banco
     * const banco = await prisma.banco.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends BancoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, BancoUpdateArgs<ExtArgs>>
    ): Prisma__BancoClient<$Result.GetResult<Prisma.$BancoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Bancos.
     * @param {BancoDeleteManyArgs} args - Arguments to filter Bancos to delete.
     * @example
     * // Delete a few Bancos
     * const { count } = await prisma.banco.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends BancoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, BancoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bancos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Bancos
     * const banco = await prisma.banco.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends BancoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, BancoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Banco.
     * @param {BancoUpsertArgs} args - Arguments to update or create a Banco.
     * @example
     * // Update or create a Banco
     * const banco = await prisma.banco.upsert({
     *   create: {
     *     // ... data to create a Banco
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Banco we want to update
     *   }
     * })
    **/
    upsert<T extends BancoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, BancoUpsertArgs<ExtArgs>>
    ): Prisma__BancoClient<$Result.GetResult<Prisma.$BancoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Bancos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancoCountArgs} args - Arguments to filter Bancos to count.
     * @example
     * // Count the number of Bancos
     * const count = await prisma.banco.count({
     *   where: {
     *     // ... the filter for the Bancos we want to count
     *   }
     * })
    **/
    count<T extends BancoCountArgs>(
      args?: Subset<T, BancoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BancoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Banco.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BancoAggregateArgs>(args: Subset<T, BancoAggregateArgs>): Prisma.PrismaPromise<GetBancoAggregateType<T>>

    /**
     * Group by Banco.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BancoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BancoGroupByArgs['orderBy'] }
        : { orderBy?: BancoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BancoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBancoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Banco model
   */
  readonly fields: BancoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Banco.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BancoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    funcionario<T extends Banco$funcionarioArgs<ExtArgs> = {}>(args?: Subset<T, Banco$funcionarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Banco model
   */ 
  interface BancoFieldRefs {
    readonly id: FieldRef<"Banco", 'Int'>
    readonly nome_banco: FieldRef<"Banco", 'String'>
    readonly codigo: FieldRef<"Banco", 'String'>
    readonly sigla: FieldRef<"Banco", 'String'>
    readonly createdAt: FieldRef<"Banco", 'DateTime'>
    readonly updatedAt: FieldRef<"Banco", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Banco findUnique
   */
  export type BancoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banco
     */
    select?: BancoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoInclude<ExtArgs> | null
    /**
     * Filter, which Banco to fetch.
     */
    where: BancoWhereUniqueInput
  }

  /**
   * Banco findUniqueOrThrow
   */
  export type BancoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banco
     */
    select?: BancoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoInclude<ExtArgs> | null
    /**
     * Filter, which Banco to fetch.
     */
    where: BancoWhereUniqueInput
  }

  /**
   * Banco findFirst
   */
  export type BancoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banco
     */
    select?: BancoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoInclude<ExtArgs> | null
    /**
     * Filter, which Banco to fetch.
     */
    where?: BancoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bancos to fetch.
     */
    orderBy?: BancoOrderByWithRelationInput | BancoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bancos.
     */
    cursor?: BancoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bancos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bancos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bancos.
     */
    distinct?: BancoScalarFieldEnum | BancoScalarFieldEnum[]
  }

  /**
   * Banco findFirstOrThrow
   */
  export type BancoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banco
     */
    select?: BancoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoInclude<ExtArgs> | null
    /**
     * Filter, which Banco to fetch.
     */
    where?: BancoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bancos to fetch.
     */
    orderBy?: BancoOrderByWithRelationInput | BancoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bancos.
     */
    cursor?: BancoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bancos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bancos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bancos.
     */
    distinct?: BancoScalarFieldEnum | BancoScalarFieldEnum[]
  }

  /**
   * Banco findMany
   */
  export type BancoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banco
     */
    select?: BancoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoInclude<ExtArgs> | null
    /**
     * Filter, which Bancos to fetch.
     */
    where?: BancoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bancos to fetch.
     */
    orderBy?: BancoOrderByWithRelationInput | BancoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Bancos.
     */
    cursor?: BancoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bancos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bancos.
     */
    skip?: number
    distinct?: BancoScalarFieldEnum | BancoScalarFieldEnum[]
  }

  /**
   * Banco create
   */
  export type BancoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banco
     */
    select?: BancoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoInclude<ExtArgs> | null
    /**
     * The data needed to create a Banco.
     */
    data: XOR<BancoCreateInput, BancoUncheckedCreateInput>
  }

  /**
   * Banco createMany
   */
  export type BancoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Bancos.
     */
    data: BancoCreateManyInput | BancoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Banco createManyAndReturn
   */
  export type BancoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banco
     */
    select?: BancoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Bancos.
     */
    data: BancoCreateManyInput | BancoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Banco update
   */
  export type BancoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banco
     */
    select?: BancoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoInclude<ExtArgs> | null
    /**
     * The data needed to update a Banco.
     */
    data: XOR<BancoUpdateInput, BancoUncheckedUpdateInput>
    /**
     * Choose, which Banco to update.
     */
    where: BancoWhereUniqueInput
  }

  /**
   * Banco updateMany
   */
  export type BancoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Bancos.
     */
    data: XOR<BancoUpdateManyMutationInput, BancoUncheckedUpdateManyInput>
    /**
     * Filter which Bancos to update
     */
    where?: BancoWhereInput
  }

  /**
   * Banco upsert
   */
  export type BancoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banco
     */
    select?: BancoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoInclude<ExtArgs> | null
    /**
     * The filter to search for the Banco to update in case it exists.
     */
    where: BancoWhereUniqueInput
    /**
     * In case the Banco found by the `where` argument doesn't exist, create a new Banco with this data.
     */
    create: XOR<BancoCreateInput, BancoUncheckedCreateInput>
    /**
     * In case the Banco was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BancoUpdateInput, BancoUncheckedUpdateInput>
  }

  /**
   * Banco delete
   */
  export type BancoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banco
     */
    select?: BancoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoInclude<ExtArgs> | null
    /**
     * Filter which Banco to delete.
     */
    where: BancoWhereUniqueInput
  }

  /**
   * Banco deleteMany
   */
  export type BancoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Bancos to delete
     */
    where?: BancoWhereInput
  }

  /**
   * Banco.funcionario
   */
  export type Banco$funcionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    where?: FuncionarioWhereInput
    orderBy?: FuncionarioOrderByWithRelationInput | FuncionarioOrderByWithRelationInput[]
    cursor?: FuncionarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FuncionarioScalarFieldEnum | FuncionarioScalarFieldEnum[]
  }

  /**
   * Banco without action
   */
  export type BancoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banco
     */
    select?: BancoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoInclude<ExtArgs> | null
  }


  /**
   * Model Funcionario
   */

  export type AggregateFuncionario = {
    _count: FuncionarioCountAggregateOutputType | null
    _avg: FuncionarioAvgAggregateOutputType | null
    _sum: FuncionarioSumAggregateOutputType | null
    _min: FuncionarioMinAggregateOutputType | null
    _max: FuncionarioMaxAggregateOutputType | null
  }

  export type FuncionarioAvgAggregateOutputType = {
    id: number | null
    id_funcao: number | null
    id_categoria: number | null
    Id_banco: number | null
  }

  export type FuncionarioSumAggregateOutputType = {
    id: number | null
    id_funcao: number | null
    id_categoria: number | null
    Id_banco: number | null
  }

  export type FuncionarioMinAggregateOutputType = {
    id: number | null
    nome_completo: string | null
    nome_pai: string | null
    nome_mae: string | null
    nascimento: Date | null
    email: string | null
    genero: $Enums.Genero | null
    tipo_identificacao: $Enums.Identificacao | null
    num_identificacao: string | null
    nivel_academico: $Enums.NIVEL_ACADEMICO | null
    avatar: string | null
    telefone1: string | null
    telefone2: string | null
    linkedin: string | null
    whatsApp: string | null
    instagram: string | null
    bairro: string | null
    rua: string | null
    id_funcao: number | null
    id_categoria: number | null
    num_conta: string | null
    iban: string | null
    Id_banco: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FuncionarioMaxAggregateOutputType = {
    id: number | null
    nome_completo: string | null
    nome_pai: string | null
    nome_mae: string | null
    nascimento: Date | null
    email: string | null
    genero: $Enums.Genero | null
    tipo_identificacao: $Enums.Identificacao | null
    num_identificacao: string | null
    nivel_academico: $Enums.NIVEL_ACADEMICO | null
    avatar: string | null
    telefone1: string | null
    telefone2: string | null
    linkedin: string | null
    whatsApp: string | null
    instagram: string | null
    bairro: string | null
    rua: string | null
    id_funcao: number | null
    id_categoria: number | null
    num_conta: string | null
    iban: string | null
    Id_banco: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FuncionarioCountAggregateOutputType = {
    id: number
    nome_completo: number
    nome_pai: number
    nome_mae: number
    nascimento: number
    email: number
    genero: number
    tipo_identificacao: number
    num_identificacao: number
    nivel_academico: number
    avatar: number
    telefone1: number
    telefone2: number
    linkedin: number
    whatsApp: number
    instagram: number
    bairro: number
    rua: number
    id_funcao: number
    id_categoria: number
    num_conta: number
    iban: number
    Id_banco: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FuncionarioAvgAggregateInputType = {
    id?: true
    id_funcao?: true
    id_categoria?: true
    Id_banco?: true
  }

  export type FuncionarioSumAggregateInputType = {
    id?: true
    id_funcao?: true
    id_categoria?: true
    Id_banco?: true
  }

  export type FuncionarioMinAggregateInputType = {
    id?: true
    nome_completo?: true
    nome_pai?: true
    nome_mae?: true
    nascimento?: true
    email?: true
    genero?: true
    tipo_identificacao?: true
    num_identificacao?: true
    nivel_academico?: true
    avatar?: true
    telefone1?: true
    telefone2?: true
    linkedin?: true
    whatsApp?: true
    instagram?: true
    bairro?: true
    rua?: true
    id_funcao?: true
    id_categoria?: true
    num_conta?: true
    iban?: true
    Id_banco?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FuncionarioMaxAggregateInputType = {
    id?: true
    nome_completo?: true
    nome_pai?: true
    nome_mae?: true
    nascimento?: true
    email?: true
    genero?: true
    tipo_identificacao?: true
    num_identificacao?: true
    nivel_academico?: true
    avatar?: true
    telefone1?: true
    telefone2?: true
    linkedin?: true
    whatsApp?: true
    instagram?: true
    bairro?: true
    rua?: true
    id_funcao?: true
    id_categoria?: true
    num_conta?: true
    iban?: true
    Id_banco?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FuncionarioCountAggregateInputType = {
    id?: true
    nome_completo?: true
    nome_pai?: true
    nome_mae?: true
    nascimento?: true
    email?: true
    genero?: true
    tipo_identificacao?: true
    num_identificacao?: true
    nivel_academico?: true
    avatar?: true
    telefone1?: true
    telefone2?: true
    linkedin?: true
    whatsApp?: true
    instagram?: true
    bairro?: true
    rua?: true
    id_funcao?: true
    id_categoria?: true
    num_conta?: true
    iban?: true
    Id_banco?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FuncionarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Funcionario to aggregate.
     */
    where?: FuncionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funcionarios to fetch.
     */
    orderBy?: FuncionarioOrderByWithRelationInput | FuncionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FuncionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funcionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funcionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Funcionarios
    **/
    _count?: true | FuncionarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FuncionarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FuncionarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FuncionarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FuncionarioMaxAggregateInputType
  }

  export type GetFuncionarioAggregateType<T extends FuncionarioAggregateArgs> = {
        [P in keyof T & keyof AggregateFuncionario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFuncionario[P]>
      : GetScalarType<T[P], AggregateFuncionario[P]>
  }




  export type FuncionarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FuncionarioWhereInput
    orderBy?: FuncionarioOrderByWithAggregationInput | FuncionarioOrderByWithAggregationInput[]
    by: FuncionarioScalarFieldEnum[] | FuncionarioScalarFieldEnum
    having?: FuncionarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FuncionarioCountAggregateInputType | true
    _avg?: FuncionarioAvgAggregateInputType
    _sum?: FuncionarioSumAggregateInputType
    _min?: FuncionarioMinAggregateInputType
    _max?: FuncionarioMaxAggregateInputType
  }

  export type FuncionarioGroupByOutputType = {
    id: number
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar: string | null
    telefone1: string
    telefone2: string | null
    linkedin: string | null
    whatsApp: string | null
    instagram: string | null
    bairro: string
    rua: string
    id_funcao: number | null
    id_categoria: number | null
    num_conta: string | null
    iban: string | null
    Id_banco: number | null
    createdAt: Date
    updatedAt: Date
    _count: FuncionarioCountAggregateOutputType | null
    _avg: FuncionarioAvgAggregateOutputType | null
    _sum: FuncionarioSumAggregateOutputType | null
    _min: FuncionarioMinAggregateOutputType | null
    _max: FuncionarioMaxAggregateOutputType | null
  }

  type GetFuncionarioGroupByPayload<T extends FuncionarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FuncionarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FuncionarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FuncionarioGroupByOutputType[P]>
            : GetScalarType<T[P], FuncionarioGroupByOutputType[P]>
        }
      >
    >


  export type FuncionarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_completo?: boolean
    nome_pai?: boolean
    nome_mae?: boolean
    nascimento?: boolean
    email?: boolean
    genero?: boolean
    tipo_identificacao?: boolean
    num_identificacao?: boolean
    nivel_academico?: boolean
    avatar?: boolean
    telefone1?: boolean
    telefone2?: boolean
    linkedin?: boolean
    whatsApp?: boolean
    instagram?: boolean
    bairro?: boolean
    rua?: boolean
    id_funcao?: boolean
    id_categoria?: boolean
    num_conta?: boolean
    iban?: boolean
    Id_banco?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Funcao?: boolean | Funcionario$FuncaoArgs<ExtArgs>
    Categoria?: boolean | Funcionario$CategoriaArgs<ExtArgs>
    dadosprofissionais?: boolean | Funcionario$dadosprofissionaisArgs<ExtArgs>
    formacoes?: boolean | Funcionario$formacoesArgs<ExtArgs>
    esperiencialaboral?: boolean | Funcionario$esperiencialaboralArgs<ExtArgs>
    departamentosComoChefe?: boolean | Funcionario$departamentosComoChefeArgs<ExtArgs>
    departamentosComoSupervisor?: boolean | Funcionario$departamentosComoSupervisorArgs<ExtArgs>
    funcionariodepartamento?: boolean | Funcionario$funcionariodepartamentoArgs<ExtArgs>
    Banco?: boolean | Funcionario$BancoArgs<ExtArgs>
    avaliacao?: boolean | Funcionario$avaliacaoArgs<ExtArgs>
    _count?: boolean | FuncionarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["funcionario"]>

  export type FuncionarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_completo?: boolean
    nome_pai?: boolean
    nome_mae?: boolean
    nascimento?: boolean
    email?: boolean
    genero?: boolean
    tipo_identificacao?: boolean
    num_identificacao?: boolean
    nivel_academico?: boolean
    avatar?: boolean
    telefone1?: boolean
    telefone2?: boolean
    linkedin?: boolean
    whatsApp?: boolean
    instagram?: boolean
    bairro?: boolean
    rua?: boolean
    id_funcao?: boolean
    id_categoria?: boolean
    num_conta?: boolean
    iban?: boolean
    Id_banco?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Funcao?: boolean | Funcionario$FuncaoArgs<ExtArgs>
    Categoria?: boolean | Funcionario$CategoriaArgs<ExtArgs>
    Banco?: boolean | Funcionario$BancoArgs<ExtArgs>
  }, ExtArgs["result"]["funcionario"]>

  export type FuncionarioSelectScalar = {
    id?: boolean
    nome_completo?: boolean
    nome_pai?: boolean
    nome_mae?: boolean
    nascimento?: boolean
    email?: boolean
    genero?: boolean
    tipo_identificacao?: boolean
    num_identificacao?: boolean
    nivel_academico?: boolean
    avatar?: boolean
    telefone1?: boolean
    telefone2?: boolean
    linkedin?: boolean
    whatsApp?: boolean
    instagram?: boolean
    bairro?: boolean
    rua?: boolean
    id_funcao?: boolean
    id_categoria?: boolean
    num_conta?: boolean
    iban?: boolean
    Id_banco?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FuncionarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Funcao?: boolean | Funcionario$FuncaoArgs<ExtArgs>
    Categoria?: boolean | Funcionario$CategoriaArgs<ExtArgs>
    dadosprofissionais?: boolean | Funcionario$dadosprofissionaisArgs<ExtArgs>
    formacoes?: boolean | Funcionario$formacoesArgs<ExtArgs>
    esperiencialaboral?: boolean | Funcionario$esperiencialaboralArgs<ExtArgs>
    departamentosComoChefe?: boolean | Funcionario$departamentosComoChefeArgs<ExtArgs>
    departamentosComoSupervisor?: boolean | Funcionario$departamentosComoSupervisorArgs<ExtArgs>
    funcionariodepartamento?: boolean | Funcionario$funcionariodepartamentoArgs<ExtArgs>
    Banco?: boolean | Funcionario$BancoArgs<ExtArgs>
    avaliacao?: boolean | Funcionario$avaliacaoArgs<ExtArgs>
    _count?: boolean | FuncionarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FuncionarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Funcao?: boolean | Funcionario$FuncaoArgs<ExtArgs>
    Categoria?: boolean | Funcionario$CategoriaArgs<ExtArgs>
    Banco?: boolean | Funcionario$BancoArgs<ExtArgs>
  }

  export type $FuncionarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Funcionario"
    objects: {
      Funcao: Prisma.$FuncaoPayload<ExtArgs> | null
      Categoria: Prisma.$CategoriaRHPayload<ExtArgs> | null
      dadosprofissionais: Prisma.$DadosProfissionaisPayload<ExtArgs>[]
      formacoes: Prisma.$FormacoesPayload<ExtArgs>[]
      esperiencialaboral: Prisma.$ExperiencialLaboralPayload<ExtArgs>[]
      departamentosComoChefe: Prisma.$DepartamentoPayload<ExtArgs>[]
      departamentosComoSupervisor: Prisma.$DepartamentoPayload<ExtArgs>[]
      funcionariodepartamento: Prisma.$FuncionarioDepartamentoPayload<ExtArgs>[]
      Banco: Prisma.$BancoPayload<ExtArgs> | null
      avaliacao: Prisma.$AvaliacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome_completo: string
      nome_pai: string
      nome_mae: string
      nascimento: Date
      email: string
      genero: $Enums.Genero
      tipo_identificacao: $Enums.Identificacao
      num_identificacao: string
      nivel_academico: $Enums.NIVEL_ACADEMICO
      avatar: string | null
      telefone1: string
      telefone2: string | null
      linkedin: string | null
      whatsApp: string | null
      instagram: string | null
      bairro: string
      rua: string
      id_funcao: number | null
      id_categoria: number | null
      num_conta: string | null
      iban: string | null
      Id_banco: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["funcionario"]>
    composites: {}
  }

  type FuncionarioGetPayload<S extends boolean | null | undefined | FuncionarioDefaultArgs> = $Result.GetResult<Prisma.$FuncionarioPayload, S>

  type FuncionarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FuncionarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FuncionarioCountAggregateInputType | true
    }

  export interface FuncionarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Funcionario'], meta: { name: 'Funcionario' } }
    /**
     * Find zero or one Funcionario that matches the filter.
     * @param {FuncionarioFindUniqueArgs} args - Arguments to find a Funcionario
     * @example
     * // Get one Funcionario
     * const funcionario = await prisma.funcionario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FuncionarioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, FuncionarioFindUniqueArgs<ExtArgs>>
    ): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Funcionario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FuncionarioFindUniqueOrThrowArgs} args - Arguments to find a Funcionario
     * @example
     * // Get one Funcionario
     * const funcionario = await prisma.funcionario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FuncionarioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncionarioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Funcionario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioFindFirstArgs} args - Arguments to find a Funcionario
     * @example
     * // Get one Funcionario
     * const funcionario = await prisma.funcionario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FuncionarioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncionarioFindFirstArgs<ExtArgs>>
    ): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Funcionario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioFindFirstOrThrowArgs} args - Arguments to find a Funcionario
     * @example
     * // Get one Funcionario
     * const funcionario = await prisma.funcionario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FuncionarioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncionarioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Funcionarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Funcionarios
     * const funcionarios = await prisma.funcionario.findMany()
     * 
     * // Get first 10 Funcionarios
     * const funcionarios = await prisma.funcionario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const funcionarioWithIdOnly = await prisma.funcionario.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FuncionarioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncionarioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Funcionario.
     * @param {FuncionarioCreateArgs} args - Arguments to create a Funcionario.
     * @example
     * // Create one Funcionario
     * const Funcionario = await prisma.funcionario.create({
     *   data: {
     *     // ... data to create a Funcionario
     *   }
     * })
     * 
    **/
    create<T extends FuncionarioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, FuncionarioCreateArgs<ExtArgs>>
    ): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Funcionarios.
     * @param {FuncionarioCreateManyArgs} args - Arguments to create many Funcionarios.
     * @example
     * // Create many Funcionarios
     * const funcionario = await prisma.funcionario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends FuncionarioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncionarioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Funcionarios and returns the data saved in the database.
     * @param {FuncionarioCreateManyAndReturnArgs} args - Arguments to create many Funcionarios.
     * @example
     * // Create many Funcionarios
     * const funcionario = await prisma.funcionario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Funcionarios and only return the `id`
     * const funcionarioWithIdOnly = await prisma.funcionario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends FuncionarioCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncionarioCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Funcionario.
     * @param {FuncionarioDeleteArgs} args - Arguments to delete one Funcionario.
     * @example
     * // Delete one Funcionario
     * const Funcionario = await prisma.funcionario.delete({
     *   where: {
     *     // ... filter to delete one Funcionario
     *   }
     * })
     * 
    **/
    delete<T extends FuncionarioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, FuncionarioDeleteArgs<ExtArgs>>
    ): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Funcionario.
     * @param {FuncionarioUpdateArgs} args - Arguments to update one Funcionario.
     * @example
     * // Update one Funcionario
     * const funcionario = await prisma.funcionario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FuncionarioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, FuncionarioUpdateArgs<ExtArgs>>
    ): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Funcionarios.
     * @param {FuncionarioDeleteManyArgs} args - Arguments to filter Funcionarios to delete.
     * @example
     * // Delete a few Funcionarios
     * const { count } = await prisma.funcionario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FuncionarioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncionarioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Funcionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Funcionarios
     * const funcionario = await prisma.funcionario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FuncionarioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, FuncionarioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Funcionario.
     * @param {FuncionarioUpsertArgs} args - Arguments to update or create a Funcionario.
     * @example
     * // Update or create a Funcionario
     * const funcionario = await prisma.funcionario.upsert({
     *   create: {
     *     // ... data to create a Funcionario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Funcionario we want to update
     *   }
     * })
    **/
    upsert<T extends FuncionarioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, FuncionarioUpsertArgs<ExtArgs>>
    ): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Funcionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioCountArgs} args - Arguments to filter Funcionarios to count.
     * @example
     * // Count the number of Funcionarios
     * const count = await prisma.funcionario.count({
     *   where: {
     *     // ... the filter for the Funcionarios we want to count
     *   }
     * })
    **/
    count<T extends FuncionarioCountArgs>(
      args?: Subset<T, FuncionarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FuncionarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Funcionario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FuncionarioAggregateArgs>(args: Subset<T, FuncionarioAggregateArgs>): Prisma.PrismaPromise<GetFuncionarioAggregateType<T>>

    /**
     * Group by Funcionario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FuncionarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FuncionarioGroupByArgs['orderBy'] }
        : { orderBy?: FuncionarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FuncionarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFuncionarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Funcionario model
   */
  readonly fields: FuncionarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Funcionario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FuncionarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Funcao<T extends Funcionario$FuncaoArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$FuncaoArgs<ExtArgs>>): Prisma__FuncaoClient<$Result.GetResult<Prisma.$FuncaoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    Categoria<T extends Funcionario$CategoriaArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$CategoriaArgs<ExtArgs>>): Prisma__CategoriaRHClient<$Result.GetResult<Prisma.$CategoriaRHPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    dadosprofissionais<T extends Funcionario$dadosprofissionaisArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$dadosprofissionaisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DadosProfissionaisPayload<ExtArgs>, T, 'findMany'> | Null>;

    formacoes<T extends Funcionario$formacoesArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$formacoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormacoesPayload<ExtArgs>, T, 'findMany'> | Null>;

    esperiencialaboral<T extends Funcionario$esperiencialaboralArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$esperiencialaboralArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExperiencialLaboralPayload<ExtArgs>, T, 'findMany'> | Null>;

    departamentosComoChefe<T extends Funcionario$departamentosComoChefeArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$departamentosComoChefeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, 'findMany'> | Null>;

    departamentosComoSupervisor<T extends Funcionario$departamentosComoSupervisorArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$departamentosComoSupervisorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, 'findMany'> | Null>;

    funcionariodepartamento<T extends Funcionario$funcionariodepartamentoArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$funcionariodepartamentoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioDepartamentoPayload<ExtArgs>, T, 'findMany'> | Null>;

    Banco<T extends Funcionario$BancoArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$BancoArgs<ExtArgs>>): Prisma__BancoClient<$Result.GetResult<Prisma.$BancoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    avaliacao<T extends Funcionario$avaliacaoArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$avaliacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Funcionario model
   */ 
  interface FuncionarioFieldRefs {
    readonly id: FieldRef<"Funcionario", 'Int'>
    readonly nome_completo: FieldRef<"Funcionario", 'String'>
    readonly nome_pai: FieldRef<"Funcionario", 'String'>
    readonly nome_mae: FieldRef<"Funcionario", 'String'>
    readonly nascimento: FieldRef<"Funcionario", 'DateTime'>
    readonly email: FieldRef<"Funcionario", 'String'>
    readonly genero: FieldRef<"Funcionario", 'Genero'>
    readonly tipo_identificacao: FieldRef<"Funcionario", 'Identificacao'>
    readonly num_identificacao: FieldRef<"Funcionario", 'String'>
    readonly nivel_academico: FieldRef<"Funcionario", 'NIVEL_ACADEMICO'>
    readonly avatar: FieldRef<"Funcionario", 'String'>
    readonly telefone1: FieldRef<"Funcionario", 'String'>
    readonly telefone2: FieldRef<"Funcionario", 'String'>
    readonly linkedin: FieldRef<"Funcionario", 'String'>
    readonly whatsApp: FieldRef<"Funcionario", 'String'>
    readonly instagram: FieldRef<"Funcionario", 'String'>
    readonly bairro: FieldRef<"Funcionario", 'String'>
    readonly rua: FieldRef<"Funcionario", 'String'>
    readonly id_funcao: FieldRef<"Funcionario", 'Int'>
    readonly id_categoria: FieldRef<"Funcionario", 'Int'>
    readonly num_conta: FieldRef<"Funcionario", 'String'>
    readonly iban: FieldRef<"Funcionario", 'String'>
    readonly Id_banco: FieldRef<"Funcionario", 'Int'>
    readonly createdAt: FieldRef<"Funcionario", 'DateTime'>
    readonly updatedAt: FieldRef<"Funcionario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Funcionario findUnique
   */
  export type FuncionarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter, which Funcionario to fetch.
     */
    where: FuncionarioWhereUniqueInput
  }

  /**
   * Funcionario findUniqueOrThrow
   */
  export type FuncionarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter, which Funcionario to fetch.
     */
    where: FuncionarioWhereUniqueInput
  }

  /**
   * Funcionario findFirst
   */
  export type FuncionarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter, which Funcionario to fetch.
     */
    where?: FuncionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funcionarios to fetch.
     */
    orderBy?: FuncionarioOrderByWithRelationInput | FuncionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Funcionarios.
     */
    cursor?: FuncionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funcionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funcionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Funcionarios.
     */
    distinct?: FuncionarioScalarFieldEnum | FuncionarioScalarFieldEnum[]
  }

  /**
   * Funcionario findFirstOrThrow
   */
  export type FuncionarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter, which Funcionario to fetch.
     */
    where?: FuncionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funcionarios to fetch.
     */
    orderBy?: FuncionarioOrderByWithRelationInput | FuncionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Funcionarios.
     */
    cursor?: FuncionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funcionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funcionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Funcionarios.
     */
    distinct?: FuncionarioScalarFieldEnum | FuncionarioScalarFieldEnum[]
  }

  /**
   * Funcionario findMany
   */
  export type FuncionarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter, which Funcionarios to fetch.
     */
    where?: FuncionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funcionarios to fetch.
     */
    orderBy?: FuncionarioOrderByWithRelationInput | FuncionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Funcionarios.
     */
    cursor?: FuncionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funcionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funcionarios.
     */
    skip?: number
    distinct?: FuncionarioScalarFieldEnum | FuncionarioScalarFieldEnum[]
  }

  /**
   * Funcionario create
   */
  export type FuncionarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Funcionario.
     */
    data: XOR<FuncionarioCreateInput, FuncionarioUncheckedCreateInput>
  }

  /**
   * Funcionario createMany
   */
  export type FuncionarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Funcionarios.
     */
    data: FuncionarioCreateManyInput | FuncionarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Funcionario createManyAndReturn
   */
  export type FuncionarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Funcionarios.
     */
    data: FuncionarioCreateManyInput | FuncionarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Funcionario update
   */
  export type FuncionarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Funcionario.
     */
    data: XOR<FuncionarioUpdateInput, FuncionarioUncheckedUpdateInput>
    /**
     * Choose, which Funcionario to update.
     */
    where: FuncionarioWhereUniqueInput
  }

  /**
   * Funcionario updateMany
   */
  export type FuncionarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Funcionarios.
     */
    data: XOR<FuncionarioUpdateManyMutationInput, FuncionarioUncheckedUpdateManyInput>
    /**
     * Filter which Funcionarios to update
     */
    where?: FuncionarioWhereInput
  }

  /**
   * Funcionario upsert
   */
  export type FuncionarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Funcionario to update in case it exists.
     */
    where: FuncionarioWhereUniqueInput
    /**
     * In case the Funcionario found by the `where` argument doesn't exist, create a new Funcionario with this data.
     */
    create: XOR<FuncionarioCreateInput, FuncionarioUncheckedCreateInput>
    /**
     * In case the Funcionario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FuncionarioUpdateInput, FuncionarioUncheckedUpdateInput>
  }

  /**
   * Funcionario delete
   */
  export type FuncionarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter which Funcionario to delete.
     */
    where: FuncionarioWhereUniqueInput
  }

  /**
   * Funcionario deleteMany
   */
  export type FuncionarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Funcionarios to delete
     */
    where?: FuncionarioWhereInput
  }

  /**
   * Funcionario.Funcao
   */
  export type Funcionario$FuncaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcao
     */
    select?: FuncaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncaoInclude<ExtArgs> | null
    where?: FuncaoWhereInput
  }

  /**
   * Funcionario.Categoria
   */
  export type Funcionario$CategoriaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaRH
     */
    select?: CategoriaRHSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaRHInclude<ExtArgs> | null
    where?: CategoriaRHWhereInput
  }

  /**
   * Funcionario.dadosprofissionais
   */
  export type Funcionario$dadosprofissionaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosProfissionais
     */
    select?: DadosProfissionaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosProfissionaisInclude<ExtArgs> | null
    where?: DadosProfissionaisWhereInput
    orderBy?: DadosProfissionaisOrderByWithRelationInput | DadosProfissionaisOrderByWithRelationInput[]
    cursor?: DadosProfissionaisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DadosProfissionaisScalarFieldEnum | DadosProfissionaisScalarFieldEnum[]
  }

  /**
   * Funcionario.formacoes
   */
  export type Funcionario$formacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formacoes
     */
    select?: FormacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormacoesInclude<ExtArgs> | null
    where?: FormacoesWhereInput
    orderBy?: FormacoesOrderByWithRelationInput | FormacoesOrderByWithRelationInput[]
    cursor?: FormacoesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FormacoesScalarFieldEnum | FormacoesScalarFieldEnum[]
  }

  /**
   * Funcionario.esperiencialaboral
   */
  export type Funcionario$esperiencialaboralArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExperiencialLaboral
     */
    select?: ExperiencialLaboralSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExperiencialLaboralInclude<ExtArgs> | null
    where?: ExperiencialLaboralWhereInput
    orderBy?: ExperiencialLaboralOrderByWithRelationInput | ExperiencialLaboralOrderByWithRelationInput[]
    cursor?: ExperiencialLaboralWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExperiencialLaboralScalarFieldEnum | ExperiencialLaboralScalarFieldEnum[]
  }

  /**
   * Funcionario.departamentosComoChefe
   */
  export type Funcionario$departamentosComoChefeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    where?: DepartamentoWhereInput
    orderBy?: DepartamentoOrderByWithRelationInput | DepartamentoOrderByWithRelationInput[]
    cursor?: DepartamentoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DepartamentoScalarFieldEnum | DepartamentoScalarFieldEnum[]
  }

  /**
   * Funcionario.departamentosComoSupervisor
   */
  export type Funcionario$departamentosComoSupervisorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    where?: DepartamentoWhereInput
    orderBy?: DepartamentoOrderByWithRelationInput | DepartamentoOrderByWithRelationInput[]
    cursor?: DepartamentoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DepartamentoScalarFieldEnum | DepartamentoScalarFieldEnum[]
  }

  /**
   * Funcionario.funcionariodepartamento
   */
  export type Funcionario$funcionariodepartamentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioDepartamento
     */
    select?: FuncionarioDepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioDepartamentoInclude<ExtArgs> | null
    where?: FuncionarioDepartamentoWhereInput
    orderBy?: FuncionarioDepartamentoOrderByWithRelationInput | FuncionarioDepartamentoOrderByWithRelationInput[]
    cursor?: FuncionarioDepartamentoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FuncionarioDepartamentoScalarFieldEnum | FuncionarioDepartamentoScalarFieldEnum[]
  }

  /**
   * Funcionario.Banco
   */
  export type Funcionario$BancoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banco
     */
    select?: BancoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoInclude<ExtArgs> | null
    where?: BancoWhereInput
  }

  /**
   * Funcionario.avaliacao
   */
  export type Funcionario$avaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    where?: AvaliacaoWhereInput
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    cursor?: AvaliacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * Funcionario without action
   */
  export type FuncionarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
  }


  /**
   * Model DadosProfissionais
   */

  export type AggregateDadosProfissionais = {
    _count: DadosProfissionaisCountAggregateOutputType | null
    _avg: DadosProfissionaisAvgAggregateOutputType | null
    _sum: DadosProfissionaisSumAggregateOutputType | null
    _min: DadosProfissionaisMinAggregateOutputType | null
    _max: DadosProfissionaisMaxAggregateOutputType | null
  }

  export type DadosProfissionaisAvgAggregateOutputType = {
    id: number | null
    Id_funcionario: number | null
  }

  export type DadosProfissionaisSumAggregateOutputType = {
    id: number | null
    Id_funcionario: number | null
  }

  export type DadosProfissionaisMinAggregateOutputType = {
    id: number | null
    data_admissao: Date | null
    numero_despacho: string | null
    data_despacho: Date | null
    contrato: $Enums.Contrato | null
    Id_funcionario: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DadosProfissionaisMaxAggregateOutputType = {
    id: number | null
    data_admissao: Date | null
    numero_despacho: string | null
    data_despacho: Date | null
    contrato: $Enums.Contrato | null
    Id_funcionario: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DadosProfissionaisCountAggregateOutputType = {
    id: number
    data_admissao: number
    numero_despacho: number
    data_despacho: number
    contrato: number
    Id_funcionario: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type DadosProfissionaisAvgAggregateInputType = {
    id?: true
    Id_funcionario?: true
  }

  export type DadosProfissionaisSumAggregateInputType = {
    id?: true
    Id_funcionario?: true
  }

  export type DadosProfissionaisMinAggregateInputType = {
    id?: true
    data_admissao?: true
    numero_despacho?: true
    data_despacho?: true
    contrato?: true
    Id_funcionario?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DadosProfissionaisMaxAggregateInputType = {
    id?: true
    data_admissao?: true
    numero_despacho?: true
    data_despacho?: true
    contrato?: true
    Id_funcionario?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DadosProfissionaisCountAggregateInputType = {
    id?: true
    data_admissao?: true
    numero_despacho?: true
    data_despacho?: true
    contrato?: true
    Id_funcionario?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type DadosProfissionaisAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DadosProfissionais to aggregate.
     */
    where?: DadosProfissionaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DadosProfissionais to fetch.
     */
    orderBy?: DadosProfissionaisOrderByWithRelationInput | DadosProfissionaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DadosProfissionaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DadosProfissionais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DadosProfissionais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DadosProfissionais
    **/
    _count?: true | DadosProfissionaisCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DadosProfissionaisAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DadosProfissionaisSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DadosProfissionaisMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DadosProfissionaisMaxAggregateInputType
  }

  export type GetDadosProfissionaisAggregateType<T extends DadosProfissionaisAggregateArgs> = {
        [P in keyof T & keyof AggregateDadosProfissionais]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDadosProfissionais[P]>
      : GetScalarType<T[P], AggregateDadosProfissionais[P]>
  }




  export type DadosProfissionaisGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DadosProfissionaisWhereInput
    orderBy?: DadosProfissionaisOrderByWithAggregationInput | DadosProfissionaisOrderByWithAggregationInput[]
    by: DadosProfissionaisScalarFieldEnum[] | DadosProfissionaisScalarFieldEnum
    having?: DadosProfissionaisScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DadosProfissionaisCountAggregateInputType | true
    _avg?: DadosProfissionaisAvgAggregateInputType
    _sum?: DadosProfissionaisSumAggregateInputType
    _min?: DadosProfissionaisMinAggregateInputType
    _max?: DadosProfissionaisMaxAggregateInputType
  }

  export type DadosProfissionaisGroupByOutputType = {
    id: number
    data_admissao: Date
    numero_despacho: string | null
    data_despacho: Date
    contrato: $Enums.Contrato
    Id_funcionario: number | null
    createdAt: Date
    updatedAt: Date
    _count: DadosProfissionaisCountAggregateOutputType | null
    _avg: DadosProfissionaisAvgAggregateOutputType | null
    _sum: DadosProfissionaisSumAggregateOutputType | null
    _min: DadosProfissionaisMinAggregateOutputType | null
    _max: DadosProfissionaisMaxAggregateOutputType | null
  }

  type GetDadosProfissionaisGroupByPayload<T extends DadosProfissionaisGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DadosProfissionaisGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DadosProfissionaisGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DadosProfissionaisGroupByOutputType[P]>
            : GetScalarType<T[P], DadosProfissionaisGroupByOutputType[P]>
        }
      >
    >


  export type DadosProfissionaisSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    data_admissao?: boolean
    numero_despacho?: boolean
    data_despacho?: boolean
    contrato?: boolean
    Id_funcionario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Funcionario?: boolean | DadosProfissionais$FuncionarioArgs<ExtArgs>
  }, ExtArgs["result"]["dadosProfissionais"]>

  export type DadosProfissionaisSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    data_admissao?: boolean
    numero_despacho?: boolean
    data_despacho?: boolean
    contrato?: boolean
    Id_funcionario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Funcionario?: boolean | DadosProfissionais$FuncionarioArgs<ExtArgs>
  }, ExtArgs["result"]["dadosProfissionais"]>

  export type DadosProfissionaisSelectScalar = {
    id?: boolean
    data_admissao?: boolean
    numero_despacho?: boolean
    data_despacho?: boolean
    contrato?: boolean
    Id_funcionario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type DadosProfissionaisInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Funcionario?: boolean | DadosProfissionais$FuncionarioArgs<ExtArgs>
  }
  export type DadosProfissionaisIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Funcionario?: boolean | DadosProfissionais$FuncionarioArgs<ExtArgs>
  }

  export type $DadosProfissionaisPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DadosProfissionais"
    objects: {
      Funcionario: Prisma.$FuncionarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      data_admissao: Date
      numero_despacho: string | null
      data_despacho: Date
      contrato: $Enums.Contrato
      Id_funcionario: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["dadosProfissionais"]>
    composites: {}
  }

  type DadosProfissionaisGetPayload<S extends boolean | null | undefined | DadosProfissionaisDefaultArgs> = $Result.GetResult<Prisma.$DadosProfissionaisPayload, S>

  type DadosProfissionaisCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DadosProfissionaisFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DadosProfissionaisCountAggregateInputType | true
    }

  export interface DadosProfissionaisDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DadosProfissionais'], meta: { name: 'DadosProfissionais' } }
    /**
     * Find zero or one DadosProfissionais that matches the filter.
     * @param {DadosProfissionaisFindUniqueArgs} args - Arguments to find a DadosProfissionais
     * @example
     * // Get one DadosProfissionais
     * const dadosProfissionais = await prisma.dadosProfissionais.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends DadosProfissionaisFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, DadosProfissionaisFindUniqueArgs<ExtArgs>>
    ): Prisma__DadosProfissionaisClient<$Result.GetResult<Prisma.$DadosProfissionaisPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one DadosProfissionais that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DadosProfissionaisFindUniqueOrThrowArgs} args - Arguments to find a DadosProfissionais
     * @example
     * // Get one DadosProfissionais
     * const dadosProfissionais = await prisma.dadosProfissionais.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends DadosProfissionaisFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DadosProfissionaisFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__DadosProfissionaisClient<$Result.GetResult<Prisma.$DadosProfissionaisPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first DadosProfissionais that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosProfissionaisFindFirstArgs} args - Arguments to find a DadosProfissionais
     * @example
     * // Get one DadosProfissionais
     * const dadosProfissionais = await prisma.dadosProfissionais.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends DadosProfissionaisFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, DadosProfissionaisFindFirstArgs<ExtArgs>>
    ): Prisma__DadosProfissionaisClient<$Result.GetResult<Prisma.$DadosProfissionaisPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first DadosProfissionais that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosProfissionaisFindFirstOrThrowArgs} args - Arguments to find a DadosProfissionais
     * @example
     * // Get one DadosProfissionais
     * const dadosProfissionais = await prisma.dadosProfissionais.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends DadosProfissionaisFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DadosProfissionaisFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__DadosProfissionaisClient<$Result.GetResult<Prisma.$DadosProfissionaisPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more DadosProfissionais that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosProfissionaisFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DadosProfissionais
     * const dadosProfissionais = await prisma.dadosProfissionais.findMany()
     * 
     * // Get first 10 DadosProfissionais
     * const dadosProfissionais = await prisma.dadosProfissionais.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const dadosProfissionaisWithIdOnly = await prisma.dadosProfissionais.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends DadosProfissionaisFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DadosProfissionaisFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DadosProfissionaisPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a DadosProfissionais.
     * @param {DadosProfissionaisCreateArgs} args - Arguments to create a DadosProfissionais.
     * @example
     * // Create one DadosProfissionais
     * const DadosProfissionais = await prisma.dadosProfissionais.create({
     *   data: {
     *     // ... data to create a DadosProfissionais
     *   }
     * })
     * 
    **/
    create<T extends DadosProfissionaisCreateArgs<ExtArgs>>(
      args: SelectSubset<T, DadosProfissionaisCreateArgs<ExtArgs>>
    ): Prisma__DadosProfissionaisClient<$Result.GetResult<Prisma.$DadosProfissionaisPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many DadosProfissionais.
     * @param {DadosProfissionaisCreateManyArgs} args - Arguments to create many DadosProfissionais.
     * @example
     * // Create many DadosProfissionais
     * const dadosProfissionais = await prisma.dadosProfissionais.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends DadosProfissionaisCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DadosProfissionaisCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DadosProfissionais and returns the data saved in the database.
     * @param {DadosProfissionaisCreateManyAndReturnArgs} args - Arguments to create many DadosProfissionais.
     * @example
     * // Create many DadosProfissionais
     * const dadosProfissionais = await prisma.dadosProfissionais.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DadosProfissionais and only return the `id`
     * const dadosProfissionaisWithIdOnly = await prisma.dadosProfissionais.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends DadosProfissionaisCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, DadosProfissionaisCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DadosProfissionaisPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a DadosProfissionais.
     * @param {DadosProfissionaisDeleteArgs} args - Arguments to delete one DadosProfissionais.
     * @example
     * // Delete one DadosProfissionais
     * const DadosProfissionais = await prisma.dadosProfissionais.delete({
     *   where: {
     *     // ... filter to delete one DadosProfissionais
     *   }
     * })
     * 
    **/
    delete<T extends DadosProfissionaisDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, DadosProfissionaisDeleteArgs<ExtArgs>>
    ): Prisma__DadosProfissionaisClient<$Result.GetResult<Prisma.$DadosProfissionaisPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one DadosProfissionais.
     * @param {DadosProfissionaisUpdateArgs} args - Arguments to update one DadosProfissionais.
     * @example
     * // Update one DadosProfissionais
     * const dadosProfissionais = await prisma.dadosProfissionais.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DadosProfissionaisUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, DadosProfissionaisUpdateArgs<ExtArgs>>
    ): Prisma__DadosProfissionaisClient<$Result.GetResult<Prisma.$DadosProfissionaisPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more DadosProfissionais.
     * @param {DadosProfissionaisDeleteManyArgs} args - Arguments to filter DadosProfissionais to delete.
     * @example
     * // Delete a few DadosProfissionais
     * const { count } = await prisma.dadosProfissionais.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DadosProfissionaisDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DadosProfissionaisDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DadosProfissionais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosProfissionaisUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DadosProfissionais
     * const dadosProfissionais = await prisma.dadosProfissionais.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DadosProfissionaisUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, DadosProfissionaisUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DadosProfissionais.
     * @param {DadosProfissionaisUpsertArgs} args - Arguments to update or create a DadosProfissionais.
     * @example
     * // Update or create a DadosProfissionais
     * const dadosProfissionais = await prisma.dadosProfissionais.upsert({
     *   create: {
     *     // ... data to create a DadosProfissionais
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DadosProfissionais we want to update
     *   }
     * })
    **/
    upsert<T extends DadosProfissionaisUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, DadosProfissionaisUpsertArgs<ExtArgs>>
    ): Prisma__DadosProfissionaisClient<$Result.GetResult<Prisma.$DadosProfissionaisPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of DadosProfissionais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosProfissionaisCountArgs} args - Arguments to filter DadosProfissionais to count.
     * @example
     * // Count the number of DadosProfissionais
     * const count = await prisma.dadosProfissionais.count({
     *   where: {
     *     // ... the filter for the DadosProfissionais we want to count
     *   }
     * })
    **/
    count<T extends DadosProfissionaisCountArgs>(
      args?: Subset<T, DadosProfissionaisCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DadosProfissionaisCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DadosProfissionais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosProfissionaisAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DadosProfissionaisAggregateArgs>(args: Subset<T, DadosProfissionaisAggregateArgs>): Prisma.PrismaPromise<GetDadosProfissionaisAggregateType<T>>

    /**
     * Group by DadosProfissionais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosProfissionaisGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DadosProfissionaisGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DadosProfissionaisGroupByArgs['orderBy'] }
        : { orderBy?: DadosProfissionaisGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DadosProfissionaisGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDadosProfissionaisGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DadosProfissionais model
   */
  readonly fields: DadosProfissionaisFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DadosProfissionais.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DadosProfissionaisClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Funcionario<T extends DadosProfissionais$FuncionarioArgs<ExtArgs> = {}>(args?: Subset<T, DadosProfissionais$FuncionarioArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the DadosProfissionais model
   */ 
  interface DadosProfissionaisFieldRefs {
    readonly id: FieldRef<"DadosProfissionais", 'Int'>
    readonly data_admissao: FieldRef<"DadosProfissionais", 'DateTime'>
    readonly numero_despacho: FieldRef<"DadosProfissionais", 'String'>
    readonly data_despacho: FieldRef<"DadosProfissionais", 'DateTime'>
    readonly contrato: FieldRef<"DadosProfissionais", 'Contrato'>
    readonly Id_funcionario: FieldRef<"DadosProfissionais", 'Int'>
    readonly createdAt: FieldRef<"DadosProfissionais", 'DateTime'>
    readonly updatedAt: FieldRef<"DadosProfissionais", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DadosProfissionais findUnique
   */
  export type DadosProfissionaisFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosProfissionais
     */
    select?: DadosProfissionaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosProfissionaisInclude<ExtArgs> | null
    /**
     * Filter, which DadosProfissionais to fetch.
     */
    where: DadosProfissionaisWhereUniqueInput
  }

  /**
   * DadosProfissionais findUniqueOrThrow
   */
  export type DadosProfissionaisFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosProfissionais
     */
    select?: DadosProfissionaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosProfissionaisInclude<ExtArgs> | null
    /**
     * Filter, which DadosProfissionais to fetch.
     */
    where: DadosProfissionaisWhereUniqueInput
  }

  /**
   * DadosProfissionais findFirst
   */
  export type DadosProfissionaisFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosProfissionais
     */
    select?: DadosProfissionaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosProfissionaisInclude<ExtArgs> | null
    /**
     * Filter, which DadosProfissionais to fetch.
     */
    where?: DadosProfissionaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DadosProfissionais to fetch.
     */
    orderBy?: DadosProfissionaisOrderByWithRelationInput | DadosProfissionaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DadosProfissionais.
     */
    cursor?: DadosProfissionaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DadosProfissionais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DadosProfissionais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DadosProfissionais.
     */
    distinct?: DadosProfissionaisScalarFieldEnum | DadosProfissionaisScalarFieldEnum[]
  }

  /**
   * DadosProfissionais findFirstOrThrow
   */
  export type DadosProfissionaisFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosProfissionais
     */
    select?: DadosProfissionaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosProfissionaisInclude<ExtArgs> | null
    /**
     * Filter, which DadosProfissionais to fetch.
     */
    where?: DadosProfissionaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DadosProfissionais to fetch.
     */
    orderBy?: DadosProfissionaisOrderByWithRelationInput | DadosProfissionaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DadosProfissionais.
     */
    cursor?: DadosProfissionaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DadosProfissionais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DadosProfissionais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DadosProfissionais.
     */
    distinct?: DadosProfissionaisScalarFieldEnum | DadosProfissionaisScalarFieldEnum[]
  }

  /**
   * DadosProfissionais findMany
   */
  export type DadosProfissionaisFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosProfissionais
     */
    select?: DadosProfissionaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosProfissionaisInclude<ExtArgs> | null
    /**
     * Filter, which DadosProfissionais to fetch.
     */
    where?: DadosProfissionaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DadosProfissionais to fetch.
     */
    orderBy?: DadosProfissionaisOrderByWithRelationInput | DadosProfissionaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DadosProfissionais.
     */
    cursor?: DadosProfissionaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DadosProfissionais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DadosProfissionais.
     */
    skip?: number
    distinct?: DadosProfissionaisScalarFieldEnum | DadosProfissionaisScalarFieldEnum[]
  }

  /**
   * DadosProfissionais create
   */
  export type DadosProfissionaisCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosProfissionais
     */
    select?: DadosProfissionaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosProfissionaisInclude<ExtArgs> | null
    /**
     * The data needed to create a DadosProfissionais.
     */
    data: XOR<DadosProfissionaisCreateInput, DadosProfissionaisUncheckedCreateInput>
  }

  /**
   * DadosProfissionais createMany
   */
  export type DadosProfissionaisCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DadosProfissionais.
     */
    data: DadosProfissionaisCreateManyInput | DadosProfissionaisCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DadosProfissionais createManyAndReturn
   */
  export type DadosProfissionaisCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosProfissionais
     */
    select?: DadosProfissionaisSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DadosProfissionais.
     */
    data: DadosProfissionaisCreateManyInput | DadosProfissionaisCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosProfissionaisIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DadosProfissionais update
   */
  export type DadosProfissionaisUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosProfissionais
     */
    select?: DadosProfissionaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosProfissionaisInclude<ExtArgs> | null
    /**
     * The data needed to update a DadosProfissionais.
     */
    data: XOR<DadosProfissionaisUpdateInput, DadosProfissionaisUncheckedUpdateInput>
    /**
     * Choose, which DadosProfissionais to update.
     */
    where: DadosProfissionaisWhereUniqueInput
  }

  /**
   * DadosProfissionais updateMany
   */
  export type DadosProfissionaisUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DadosProfissionais.
     */
    data: XOR<DadosProfissionaisUpdateManyMutationInput, DadosProfissionaisUncheckedUpdateManyInput>
    /**
     * Filter which DadosProfissionais to update
     */
    where?: DadosProfissionaisWhereInput
  }

  /**
   * DadosProfissionais upsert
   */
  export type DadosProfissionaisUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosProfissionais
     */
    select?: DadosProfissionaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosProfissionaisInclude<ExtArgs> | null
    /**
     * The filter to search for the DadosProfissionais to update in case it exists.
     */
    where: DadosProfissionaisWhereUniqueInput
    /**
     * In case the DadosProfissionais found by the `where` argument doesn't exist, create a new DadosProfissionais with this data.
     */
    create: XOR<DadosProfissionaisCreateInput, DadosProfissionaisUncheckedCreateInput>
    /**
     * In case the DadosProfissionais was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DadosProfissionaisUpdateInput, DadosProfissionaisUncheckedUpdateInput>
  }

  /**
   * DadosProfissionais delete
   */
  export type DadosProfissionaisDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosProfissionais
     */
    select?: DadosProfissionaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosProfissionaisInclude<ExtArgs> | null
    /**
     * Filter which DadosProfissionais to delete.
     */
    where: DadosProfissionaisWhereUniqueInput
  }

  /**
   * DadosProfissionais deleteMany
   */
  export type DadosProfissionaisDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DadosProfissionais to delete
     */
    where?: DadosProfissionaisWhereInput
  }

  /**
   * DadosProfissionais.Funcionario
   */
  export type DadosProfissionais$FuncionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    where?: FuncionarioWhereInput
  }

  /**
   * DadosProfissionais without action
   */
  export type DadosProfissionaisDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosProfissionais
     */
    select?: DadosProfissionaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosProfissionaisInclude<ExtArgs> | null
  }


  /**
   * Model Formacoes
   */

  export type AggregateFormacoes = {
    _count: FormacoesCountAggregateOutputType | null
    _avg: FormacoesAvgAggregateOutputType | null
    _sum: FormacoesSumAggregateOutputType | null
    _min: FormacoesMinAggregateOutputType | null
    _max: FormacoesMaxAggregateOutputType | null
  }

  export type FormacoesAvgAggregateOutputType = {
    id: number | null
    Id_funcionario: number | null
  }

  export type FormacoesSumAggregateOutputType = {
    id: number | null
    Id_funcionario: number | null
  }

  export type FormacoesMinAggregateOutputType = {
    id: number | null
    ano_inicio: Date | null
    ano_termino: Date | null
    formacao: string | null
    pais: string | null
    instituicao: string | null
    Id_funcionario: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FormacoesMaxAggregateOutputType = {
    id: number | null
    ano_inicio: Date | null
    ano_termino: Date | null
    formacao: string | null
    pais: string | null
    instituicao: string | null
    Id_funcionario: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FormacoesCountAggregateOutputType = {
    id: number
    ano_inicio: number
    ano_termino: number
    formacao: number
    pais: number
    instituicao: number
    Id_funcionario: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FormacoesAvgAggregateInputType = {
    id?: true
    Id_funcionario?: true
  }

  export type FormacoesSumAggregateInputType = {
    id?: true
    Id_funcionario?: true
  }

  export type FormacoesMinAggregateInputType = {
    id?: true
    ano_inicio?: true
    ano_termino?: true
    formacao?: true
    pais?: true
    instituicao?: true
    Id_funcionario?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FormacoesMaxAggregateInputType = {
    id?: true
    ano_inicio?: true
    ano_termino?: true
    formacao?: true
    pais?: true
    instituicao?: true
    Id_funcionario?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FormacoesCountAggregateInputType = {
    id?: true
    ano_inicio?: true
    ano_termino?: true
    formacao?: true
    pais?: true
    instituicao?: true
    Id_funcionario?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FormacoesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Formacoes to aggregate.
     */
    where?: FormacoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Formacoes to fetch.
     */
    orderBy?: FormacoesOrderByWithRelationInput | FormacoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FormacoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Formacoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Formacoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Formacoes
    **/
    _count?: true | FormacoesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FormacoesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FormacoesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FormacoesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FormacoesMaxAggregateInputType
  }

  export type GetFormacoesAggregateType<T extends FormacoesAggregateArgs> = {
        [P in keyof T & keyof AggregateFormacoes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFormacoes[P]>
      : GetScalarType<T[P], AggregateFormacoes[P]>
  }




  export type FormacoesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FormacoesWhereInput
    orderBy?: FormacoesOrderByWithAggregationInput | FormacoesOrderByWithAggregationInput[]
    by: FormacoesScalarFieldEnum[] | FormacoesScalarFieldEnum
    having?: FormacoesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FormacoesCountAggregateInputType | true
    _avg?: FormacoesAvgAggregateInputType
    _sum?: FormacoesSumAggregateInputType
    _min?: FormacoesMinAggregateInputType
    _max?: FormacoesMaxAggregateInputType
  }

  export type FormacoesGroupByOutputType = {
    id: number
    ano_inicio: Date
    ano_termino: Date
    formacao: string
    pais: string
    instituicao: string
    Id_funcionario: number | null
    createdAt: Date
    updatedAt: Date
    _count: FormacoesCountAggregateOutputType | null
    _avg: FormacoesAvgAggregateOutputType | null
    _sum: FormacoesSumAggregateOutputType | null
    _min: FormacoesMinAggregateOutputType | null
    _max: FormacoesMaxAggregateOutputType | null
  }

  type GetFormacoesGroupByPayload<T extends FormacoesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FormacoesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FormacoesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FormacoesGroupByOutputType[P]>
            : GetScalarType<T[P], FormacoesGroupByOutputType[P]>
        }
      >
    >


  export type FormacoesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ano_inicio?: boolean
    ano_termino?: boolean
    formacao?: boolean
    pais?: boolean
    instituicao?: boolean
    Id_funcionario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Funcionario?: boolean | Formacoes$FuncionarioArgs<ExtArgs>
  }, ExtArgs["result"]["formacoes"]>

  export type FormacoesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ano_inicio?: boolean
    ano_termino?: boolean
    formacao?: boolean
    pais?: boolean
    instituicao?: boolean
    Id_funcionario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Funcionario?: boolean | Formacoes$FuncionarioArgs<ExtArgs>
  }, ExtArgs["result"]["formacoes"]>

  export type FormacoesSelectScalar = {
    id?: boolean
    ano_inicio?: boolean
    ano_termino?: boolean
    formacao?: boolean
    pais?: boolean
    instituicao?: boolean
    Id_funcionario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FormacoesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Funcionario?: boolean | Formacoes$FuncionarioArgs<ExtArgs>
  }
  export type FormacoesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Funcionario?: boolean | Formacoes$FuncionarioArgs<ExtArgs>
  }

  export type $FormacoesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Formacoes"
    objects: {
      Funcionario: Prisma.$FuncionarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ano_inicio: Date
      ano_termino: Date
      formacao: string
      pais: string
      instituicao: string
      Id_funcionario: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["formacoes"]>
    composites: {}
  }

  type FormacoesGetPayload<S extends boolean | null | undefined | FormacoesDefaultArgs> = $Result.GetResult<Prisma.$FormacoesPayload, S>

  type FormacoesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FormacoesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FormacoesCountAggregateInputType | true
    }

  export interface FormacoesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Formacoes'], meta: { name: 'Formacoes' } }
    /**
     * Find zero or one Formacoes that matches the filter.
     * @param {FormacoesFindUniqueArgs} args - Arguments to find a Formacoes
     * @example
     * // Get one Formacoes
     * const formacoes = await prisma.formacoes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FormacoesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, FormacoesFindUniqueArgs<ExtArgs>>
    ): Prisma__FormacoesClient<$Result.GetResult<Prisma.$FormacoesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Formacoes that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FormacoesFindUniqueOrThrowArgs} args - Arguments to find a Formacoes
     * @example
     * // Get one Formacoes
     * const formacoes = await prisma.formacoes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FormacoesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FormacoesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__FormacoesClient<$Result.GetResult<Prisma.$FormacoesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Formacoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormacoesFindFirstArgs} args - Arguments to find a Formacoes
     * @example
     * // Get one Formacoes
     * const formacoes = await prisma.formacoes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FormacoesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, FormacoesFindFirstArgs<ExtArgs>>
    ): Prisma__FormacoesClient<$Result.GetResult<Prisma.$FormacoesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Formacoes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormacoesFindFirstOrThrowArgs} args - Arguments to find a Formacoes
     * @example
     * // Get one Formacoes
     * const formacoes = await prisma.formacoes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FormacoesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FormacoesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__FormacoesClient<$Result.GetResult<Prisma.$FormacoesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Formacoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormacoesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Formacoes
     * const formacoes = await prisma.formacoes.findMany()
     * 
     * // Get first 10 Formacoes
     * const formacoes = await prisma.formacoes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const formacoesWithIdOnly = await prisma.formacoes.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FormacoesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FormacoesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormacoesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Formacoes.
     * @param {FormacoesCreateArgs} args - Arguments to create a Formacoes.
     * @example
     * // Create one Formacoes
     * const Formacoes = await prisma.formacoes.create({
     *   data: {
     *     // ... data to create a Formacoes
     *   }
     * })
     * 
    **/
    create<T extends FormacoesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, FormacoesCreateArgs<ExtArgs>>
    ): Prisma__FormacoesClient<$Result.GetResult<Prisma.$FormacoesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Formacoes.
     * @param {FormacoesCreateManyArgs} args - Arguments to create many Formacoes.
     * @example
     * // Create many Formacoes
     * const formacoes = await prisma.formacoes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends FormacoesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FormacoesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Formacoes and returns the data saved in the database.
     * @param {FormacoesCreateManyAndReturnArgs} args - Arguments to create many Formacoes.
     * @example
     * // Create many Formacoes
     * const formacoes = await prisma.formacoes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Formacoes and only return the `id`
     * const formacoesWithIdOnly = await prisma.formacoes.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends FormacoesCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, FormacoesCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormacoesPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Formacoes.
     * @param {FormacoesDeleteArgs} args - Arguments to delete one Formacoes.
     * @example
     * // Delete one Formacoes
     * const Formacoes = await prisma.formacoes.delete({
     *   where: {
     *     // ... filter to delete one Formacoes
     *   }
     * })
     * 
    **/
    delete<T extends FormacoesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, FormacoesDeleteArgs<ExtArgs>>
    ): Prisma__FormacoesClient<$Result.GetResult<Prisma.$FormacoesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Formacoes.
     * @param {FormacoesUpdateArgs} args - Arguments to update one Formacoes.
     * @example
     * // Update one Formacoes
     * const formacoes = await prisma.formacoes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FormacoesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, FormacoesUpdateArgs<ExtArgs>>
    ): Prisma__FormacoesClient<$Result.GetResult<Prisma.$FormacoesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Formacoes.
     * @param {FormacoesDeleteManyArgs} args - Arguments to filter Formacoes to delete.
     * @example
     * // Delete a few Formacoes
     * const { count } = await prisma.formacoes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FormacoesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FormacoesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Formacoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormacoesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Formacoes
     * const formacoes = await prisma.formacoes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FormacoesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, FormacoesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Formacoes.
     * @param {FormacoesUpsertArgs} args - Arguments to update or create a Formacoes.
     * @example
     * // Update or create a Formacoes
     * const formacoes = await prisma.formacoes.upsert({
     *   create: {
     *     // ... data to create a Formacoes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Formacoes we want to update
     *   }
     * })
    **/
    upsert<T extends FormacoesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, FormacoesUpsertArgs<ExtArgs>>
    ): Prisma__FormacoesClient<$Result.GetResult<Prisma.$FormacoesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Formacoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormacoesCountArgs} args - Arguments to filter Formacoes to count.
     * @example
     * // Count the number of Formacoes
     * const count = await prisma.formacoes.count({
     *   where: {
     *     // ... the filter for the Formacoes we want to count
     *   }
     * })
    **/
    count<T extends FormacoesCountArgs>(
      args?: Subset<T, FormacoesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FormacoesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Formacoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormacoesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FormacoesAggregateArgs>(args: Subset<T, FormacoesAggregateArgs>): Prisma.PrismaPromise<GetFormacoesAggregateType<T>>

    /**
     * Group by Formacoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormacoesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FormacoesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FormacoesGroupByArgs['orderBy'] }
        : { orderBy?: FormacoesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FormacoesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFormacoesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Formacoes model
   */
  readonly fields: FormacoesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Formacoes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FormacoesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Funcionario<T extends Formacoes$FuncionarioArgs<ExtArgs> = {}>(args?: Subset<T, Formacoes$FuncionarioArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Formacoes model
   */ 
  interface FormacoesFieldRefs {
    readonly id: FieldRef<"Formacoes", 'Int'>
    readonly ano_inicio: FieldRef<"Formacoes", 'DateTime'>
    readonly ano_termino: FieldRef<"Formacoes", 'DateTime'>
    readonly formacao: FieldRef<"Formacoes", 'String'>
    readonly pais: FieldRef<"Formacoes", 'String'>
    readonly instituicao: FieldRef<"Formacoes", 'String'>
    readonly Id_funcionario: FieldRef<"Formacoes", 'Int'>
    readonly createdAt: FieldRef<"Formacoes", 'DateTime'>
    readonly updatedAt: FieldRef<"Formacoes", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Formacoes findUnique
   */
  export type FormacoesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formacoes
     */
    select?: FormacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormacoesInclude<ExtArgs> | null
    /**
     * Filter, which Formacoes to fetch.
     */
    where: FormacoesWhereUniqueInput
  }

  /**
   * Formacoes findUniqueOrThrow
   */
  export type FormacoesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formacoes
     */
    select?: FormacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormacoesInclude<ExtArgs> | null
    /**
     * Filter, which Formacoes to fetch.
     */
    where: FormacoesWhereUniqueInput
  }

  /**
   * Formacoes findFirst
   */
  export type FormacoesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formacoes
     */
    select?: FormacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormacoesInclude<ExtArgs> | null
    /**
     * Filter, which Formacoes to fetch.
     */
    where?: FormacoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Formacoes to fetch.
     */
    orderBy?: FormacoesOrderByWithRelationInput | FormacoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Formacoes.
     */
    cursor?: FormacoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Formacoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Formacoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Formacoes.
     */
    distinct?: FormacoesScalarFieldEnum | FormacoesScalarFieldEnum[]
  }

  /**
   * Formacoes findFirstOrThrow
   */
  export type FormacoesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formacoes
     */
    select?: FormacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormacoesInclude<ExtArgs> | null
    /**
     * Filter, which Formacoes to fetch.
     */
    where?: FormacoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Formacoes to fetch.
     */
    orderBy?: FormacoesOrderByWithRelationInput | FormacoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Formacoes.
     */
    cursor?: FormacoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Formacoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Formacoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Formacoes.
     */
    distinct?: FormacoesScalarFieldEnum | FormacoesScalarFieldEnum[]
  }

  /**
   * Formacoes findMany
   */
  export type FormacoesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formacoes
     */
    select?: FormacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormacoesInclude<ExtArgs> | null
    /**
     * Filter, which Formacoes to fetch.
     */
    where?: FormacoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Formacoes to fetch.
     */
    orderBy?: FormacoesOrderByWithRelationInput | FormacoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Formacoes.
     */
    cursor?: FormacoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Formacoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Formacoes.
     */
    skip?: number
    distinct?: FormacoesScalarFieldEnum | FormacoesScalarFieldEnum[]
  }

  /**
   * Formacoes create
   */
  export type FormacoesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formacoes
     */
    select?: FormacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormacoesInclude<ExtArgs> | null
    /**
     * The data needed to create a Formacoes.
     */
    data: XOR<FormacoesCreateInput, FormacoesUncheckedCreateInput>
  }

  /**
   * Formacoes createMany
   */
  export type FormacoesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Formacoes.
     */
    data: FormacoesCreateManyInput | FormacoesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Formacoes createManyAndReturn
   */
  export type FormacoesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formacoes
     */
    select?: FormacoesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Formacoes.
     */
    data: FormacoesCreateManyInput | FormacoesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormacoesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Formacoes update
   */
  export type FormacoesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formacoes
     */
    select?: FormacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormacoesInclude<ExtArgs> | null
    /**
     * The data needed to update a Formacoes.
     */
    data: XOR<FormacoesUpdateInput, FormacoesUncheckedUpdateInput>
    /**
     * Choose, which Formacoes to update.
     */
    where: FormacoesWhereUniqueInput
  }

  /**
   * Formacoes updateMany
   */
  export type FormacoesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Formacoes.
     */
    data: XOR<FormacoesUpdateManyMutationInput, FormacoesUncheckedUpdateManyInput>
    /**
     * Filter which Formacoes to update
     */
    where?: FormacoesWhereInput
  }

  /**
   * Formacoes upsert
   */
  export type FormacoesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formacoes
     */
    select?: FormacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormacoesInclude<ExtArgs> | null
    /**
     * The filter to search for the Formacoes to update in case it exists.
     */
    where: FormacoesWhereUniqueInput
    /**
     * In case the Formacoes found by the `where` argument doesn't exist, create a new Formacoes with this data.
     */
    create: XOR<FormacoesCreateInput, FormacoesUncheckedCreateInput>
    /**
     * In case the Formacoes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FormacoesUpdateInput, FormacoesUncheckedUpdateInput>
  }

  /**
   * Formacoes delete
   */
  export type FormacoesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formacoes
     */
    select?: FormacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormacoesInclude<ExtArgs> | null
    /**
     * Filter which Formacoes to delete.
     */
    where: FormacoesWhereUniqueInput
  }

  /**
   * Formacoes deleteMany
   */
  export type FormacoesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Formacoes to delete
     */
    where?: FormacoesWhereInput
  }

  /**
   * Formacoes.Funcionario
   */
  export type Formacoes$FuncionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    where?: FuncionarioWhereInput
  }

  /**
   * Formacoes without action
   */
  export type FormacoesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formacoes
     */
    select?: FormacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormacoesInclude<ExtArgs> | null
  }


  /**
   * Model Publicacoes
   */

  export type AggregatePublicacoes = {
    _count: PublicacoesCountAggregateOutputType | null
    _avg: PublicacoesAvgAggregateOutputType | null
    _sum: PublicacoesSumAggregateOutputType | null
    _min: PublicacoesMinAggregateOutputType | null
    _max: PublicacoesMaxAggregateOutputType | null
  }

  export type PublicacoesAvgAggregateOutputType = {
    id: number | null
  }

  export type PublicacoesSumAggregateOutputType = {
    id: number | null
  }

  export type PublicacoesMinAggregateOutputType = {
    id: number | null
    titulo: string | null
    entidade: string | null
    ano: Date | null
    tipo: $Enums.Tipo | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PublicacoesMaxAggregateOutputType = {
    id: number | null
    titulo: string | null
    entidade: string | null
    ano: Date | null
    tipo: $Enums.Tipo | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PublicacoesCountAggregateOutputType = {
    id: number
    titulo: number
    entidade: number
    ano: number
    tipo: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PublicacoesAvgAggregateInputType = {
    id?: true
  }

  export type PublicacoesSumAggregateInputType = {
    id?: true
  }

  export type PublicacoesMinAggregateInputType = {
    id?: true
    titulo?: true
    entidade?: true
    ano?: true
    tipo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PublicacoesMaxAggregateInputType = {
    id?: true
    titulo?: true
    entidade?: true
    ano?: true
    tipo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PublicacoesCountAggregateInputType = {
    id?: true
    titulo?: true
    entidade?: true
    ano?: true
    tipo?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PublicacoesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Publicacoes to aggregate.
     */
    where?: PublicacoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicacoes to fetch.
     */
    orderBy?: PublicacoesOrderByWithRelationInput | PublicacoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PublicacoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicacoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicacoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Publicacoes
    **/
    _count?: true | PublicacoesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PublicacoesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PublicacoesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PublicacoesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PublicacoesMaxAggregateInputType
  }

  export type GetPublicacoesAggregateType<T extends PublicacoesAggregateArgs> = {
        [P in keyof T & keyof AggregatePublicacoes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePublicacoes[P]>
      : GetScalarType<T[P], AggregatePublicacoes[P]>
  }




  export type PublicacoesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PublicacoesWhereInput
    orderBy?: PublicacoesOrderByWithAggregationInput | PublicacoesOrderByWithAggregationInput[]
    by: PublicacoesScalarFieldEnum[] | PublicacoesScalarFieldEnum
    having?: PublicacoesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PublicacoesCountAggregateInputType | true
    _avg?: PublicacoesAvgAggregateInputType
    _sum?: PublicacoesSumAggregateInputType
    _min?: PublicacoesMinAggregateInputType
    _max?: PublicacoesMaxAggregateInputType
  }

  export type PublicacoesGroupByOutputType = {
    id: number
    titulo: string
    entidade: string
    ano: Date
    tipo: $Enums.Tipo
    createdAt: Date
    updatedAt: Date
    _count: PublicacoesCountAggregateOutputType | null
    _avg: PublicacoesAvgAggregateOutputType | null
    _sum: PublicacoesSumAggregateOutputType | null
    _min: PublicacoesMinAggregateOutputType | null
    _max: PublicacoesMaxAggregateOutputType | null
  }

  type GetPublicacoesGroupByPayload<T extends PublicacoesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PublicacoesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PublicacoesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PublicacoesGroupByOutputType[P]>
            : GetScalarType<T[P], PublicacoesGroupByOutputType[P]>
        }
      >
    >


  export type PublicacoesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    entidade?: boolean
    ano?: boolean
    tipo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["publicacoes"]>

  export type PublicacoesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    entidade?: boolean
    ano?: boolean
    tipo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["publicacoes"]>

  export type PublicacoesSelectScalar = {
    id?: boolean
    titulo?: boolean
    entidade?: boolean
    ano?: boolean
    tipo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $PublicacoesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Publicacoes"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      titulo: string
      entidade: string
      ano: Date
      tipo: $Enums.Tipo
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["publicacoes"]>
    composites: {}
  }

  type PublicacoesGetPayload<S extends boolean | null | undefined | PublicacoesDefaultArgs> = $Result.GetResult<Prisma.$PublicacoesPayload, S>

  type PublicacoesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PublicacoesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PublicacoesCountAggregateInputType | true
    }

  export interface PublicacoesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Publicacoes'], meta: { name: 'Publicacoes' } }
    /**
     * Find zero or one Publicacoes that matches the filter.
     * @param {PublicacoesFindUniqueArgs} args - Arguments to find a Publicacoes
     * @example
     * // Get one Publicacoes
     * const publicacoes = await prisma.publicacoes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends PublicacoesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, PublicacoesFindUniqueArgs<ExtArgs>>
    ): Prisma__PublicacoesClient<$Result.GetResult<Prisma.$PublicacoesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Publicacoes that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PublicacoesFindUniqueOrThrowArgs} args - Arguments to find a Publicacoes
     * @example
     * // Get one Publicacoes
     * const publicacoes = await prisma.publicacoes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends PublicacoesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, PublicacoesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__PublicacoesClient<$Result.GetResult<Prisma.$PublicacoesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Publicacoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacoesFindFirstArgs} args - Arguments to find a Publicacoes
     * @example
     * // Get one Publicacoes
     * const publicacoes = await prisma.publicacoes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends PublicacoesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, PublicacoesFindFirstArgs<ExtArgs>>
    ): Prisma__PublicacoesClient<$Result.GetResult<Prisma.$PublicacoesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Publicacoes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacoesFindFirstOrThrowArgs} args - Arguments to find a Publicacoes
     * @example
     * // Get one Publicacoes
     * const publicacoes = await prisma.publicacoes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends PublicacoesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, PublicacoesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__PublicacoesClient<$Result.GetResult<Prisma.$PublicacoesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Publicacoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacoesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Publicacoes
     * const publicacoes = await prisma.publicacoes.findMany()
     * 
     * // Get first 10 Publicacoes
     * const publicacoes = await prisma.publicacoes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const publicacoesWithIdOnly = await prisma.publicacoes.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends PublicacoesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, PublicacoesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacoesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Publicacoes.
     * @param {PublicacoesCreateArgs} args - Arguments to create a Publicacoes.
     * @example
     * // Create one Publicacoes
     * const Publicacoes = await prisma.publicacoes.create({
     *   data: {
     *     // ... data to create a Publicacoes
     *   }
     * })
     * 
    **/
    create<T extends PublicacoesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, PublicacoesCreateArgs<ExtArgs>>
    ): Prisma__PublicacoesClient<$Result.GetResult<Prisma.$PublicacoesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Publicacoes.
     * @param {PublicacoesCreateManyArgs} args - Arguments to create many Publicacoes.
     * @example
     * // Create many Publicacoes
     * const publicacoes = await prisma.publicacoes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends PublicacoesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, PublicacoesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Publicacoes and returns the data saved in the database.
     * @param {PublicacoesCreateManyAndReturnArgs} args - Arguments to create many Publicacoes.
     * @example
     * // Create many Publicacoes
     * const publicacoes = await prisma.publicacoes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Publicacoes and only return the `id`
     * const publicacoesWithIdOnly = await prisma.publicacoes.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends PublicacoesCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, PublicacoesCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacoesPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Publicacoes.
     * @param {PublicacoesDeleteArgs} args - Arguments to delete one Publicacoes.
     * @example
     * // Delete one Publicacoes
     * const Publicacoes = await prisma.publicacoes.delete({
     *   where: {
     *     // ... filter to delete one Publicacoes
     *   }
     * })
     * 
    **/
    delete<T extends PublicacoesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, PublicacoesDeleteArgs<ExtArgs>>
    ): Prisma__PublicacoesClient<$Result.GetResult<Prisma.$PublicacoesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Publicacoes.
     * @param {PublicacoesUpdateArgs} args - Arguments to update one Publicacoes.
     * @example
     * // Update one Publicacoes
     * const publicacoes = await prisma.publicacoes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends PublicacoesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, PublicacoesUpdateArgs<ExtArgs>>
    ): Prisma__PublicacoesClient<$Result.GetResult<Prisma.$PublicacoesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Publicacoes.
     * @param {PublicacoesDeleteManyArgs} args - Arguments to filter Publicacoes to delete.
     * @example
     * // Delete a few Publicacoes
     * const { count } = await prisma.publicacoes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends PublicacoesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, PublicacoesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Publicacoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacoesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Publicacoes
     * const publicacoes = await prisma.publicacoes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends PublicacoesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, PublicacoesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Publicacoes.
     * @param {PublicacoesUpsertArgs} args - Arguments to update or create a Publicacoes.
     * @example
     * // Update or create a Publicacoes
     * const publicacoes = await prisma.publicacoes.upsert({
     *   create: {
     *     // ... data to create a Publicacoes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Publicacoes we want to update
     *   }
     * })
    **/
    upsert<T extends PublicacoesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, PublicacoesUpsertArgs<ExtArgs>>
    ): Prisma__PublicacoesClient<$Result.GetResult<Prisma.$PublicacoesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Publicacoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacoesCountArgs} args - Arguments to filter Publicacoes to count.
     * @example
     * // Count the number of Publicacoes
     * const count = await prisma.publicacoes.count({
     *   where: {
     *     // ... the filter for the Publicacoes we want to count
     *   }
     * })
    **/
    count<T extends PublicacoesCountArgs>(
      args?: Subset<T, PublicacoesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PublicacoesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Publicacoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacoesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PublicacoesAggregateArgs>(args: Subset<T, PublicacoesAggregateArgs>): Prisma.PrismaPromise<GetPublicacoesAggregateType<T>>

    /**
     * Group by Publicacoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacoesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PublicacoesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PublicacoesGroupByArgs['orderBy'] }
        : { orderBy?: PublicacoesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PublicacoesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPublicacoesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Publicacoes model
   */
  readonly fields: PublicacoesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Publicacoes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PublicacoesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Publicacoes model
   */ 
  interface PublicacoesFieldRefs {
    readonly id: FieldRef<"Publicacoes", 'Int'>
    readonly titulo: FieldRef<"Publicacoes", 'String'>
    readonly entidade: FieldRef<"Publicacoes", 'String'>
    readonly ano: FieldRef<"Publicacoes", 'DateTime'>
    readonly tipo: FieldRef<"Publicacoes", 'Tipo'>
    readonly createdAt: FieldRef<"Publicacoes", 'DateTime'>
    readonly updatedAt: FieldRef<"Publicacoes", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Publicacoes findUnique
   */
  export type PublicacoesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacoes
     */
    select?: PublicacoesSelect<ExtArgs> | null
    /**
     * Filter, which Publicacoes to fetch.
     */
    where: PublicacoesWhereUniqueInput
  }

  /**
   * Publicacoes findUniqueOrThrow
   */
  export type PublicacoesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacoes
     */
    select?: PublicacoesSelect<ExtArgs> | null
    /**
     * Filter, which Publicacoes to fetch.
     */
    where: PublicacoesWhereUniqueInput
  }

  /**
   * Publicacoes findFirst
   */
  export type PublicacoesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacoes
     */
    select?: PublicacoesSelect<ExtArgs> | null
    /**
     * Filter, which Publicacoes to fetch.
     */
    where?: PublicacoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicacoes to fetch.
     */
    orderBy?: PublicacoesOrderByWithRelationInput | PublicacoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Publicacoes.
     */
    cursor?: PublicacoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicacoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicacoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Publicacoes.
     */
    distinct?: PublicacoesScalarFieldEnum | PublicacoesScalarFieldEnum[]
  }

  /**
   * Publicacoes findFirstOrThrow
   */
  export type PublicacoesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacoes
     */
    select?: PublicacoesSelect<ExtArgs> | null
    /**
     * Filter, which Publicacoes to fetch.
     */
    where?: PublicacoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicacoes to fetch.
     */
    orderBy?: PublicacoesOrderByWithRelationInput | PublicacoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Publicacoes.
     */
    cursor?: PublicacoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicacoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicacoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Publicacoes.
     */
    distinct?: PublicacoesScalarFieldEnum | PublicacoesScalarFieldEnum[]
  }

  /**
   * Publicacoes findMany
   */
  export type PublicacoesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacoes
     */
    select?: PublicacoesSelect<ExtArgs> | null
    /**
     * Filter, which Publicacoes to fetch.
     */
    where?: PublicacoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicacoes to fetch.
     */
    orderBy?: PublicacoesOrderByWithRelationInput | PublicacoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Publicacoes.
     */
    cursor?: PublicacoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicacoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicacoes.
     */
    skip?: number
    distinct?: PublicacoesScalarFieldEnum | PublicacoesScalarFieldEnum[]
  }

  /**
   * Publicacoes create
   */
  export type PublicacoesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacoes
     */
    select?: PublicacoesSelect<ExtArgs> | null
    /**
     * The data needed to create a Publicacoes.
     */
    data: XOR<PublicacoesCreateInput, PublicacoesUncheckedCreateInput>
  }

  /**
   * Publicacoes createMany
   */
  export type PublicacoesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Publicacoes.
     */
    data: PublicacoesCreateManyInput | PublicacoesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Publicacoes createManyAndReturn
   */
  export type PublicacoesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacoes
     */
    select?: PublicacoesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Publicacoes.
     */
    data: PublicacoesCreateManyInput | PublicacoesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Publicacoes update
   */
  export type PublicacoesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacoes
     */
    select?: PublicacoesSelect<ExtArgs> | null
    /**
     * The data needed to update a Publicacoes.
     */
    data: XOR<PublicacoesUpdateInput, PublicacoesUncheckedUpdateInput>
    /**
     * Choose, which Publicacoes to update.
     */
    where: PublicacoesWhereUniqueInput
  }

  /**
   * Publicacoes updateMany
   */
  export type PublicacoesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Publicacoes.
     */
    data: XOR<PublicacoesUpdateManyMutationInput, PublicacoesUncheckedUpdateManyInput>
    /**
     * Filter which Publicacoes to update
     */
    where?: PublicacoesWhereInput
  }

  /**
   * Publicacoes upsert
   */
  export type PublicacoesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacoes
     */
    select?: PublicacoesSelect<ExtArgs> | null
    /**
     * The filter to search for the Publicacoes to update in case it exists.
     */
    where: PublicacoesWhereUniqueInput
    /**
     * In case the Publicacoes found by the `where` argument doesn't exist, create a new Publicacoes with this data.
     */
    create: XOR<PublicacoesCreateInput, PublicacoesUncheckedCreateInput>
    /**
     * In case the Publicacoes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PublicacoesUpdateInput, PublicacoesUncheckedUpdateInput>
  }

  /**
   * Publicacoes delete
   */
  export type PublicacoesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacoes
     */
    select?: PublicacoesSelect<ExtArgs> | null
    /**
     * Filter which Publicacoes to delete.
     */
    where: PublicacoesWhereUniqueInput
  }

  /**
   * Publicacoes deleteMany
   */
  export type PublicacoesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Publicacoes to delete
     */
    where?: PublicacoesWhereInput
  }

  /**
   * Publicacoes without action
   */
  export type PublicacoesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacoes
     */
    select?: PublicacoesSelect<ExtArgs> | null
  }


  /**
   * Model ExperiencialLaboral
   */

  export type AggregateExperiencialLaboral = {
    _count: ExperiencialLaboralCountAggregateOutputType | null
    _avg: ExperiencialLaboralAvgAggregateOutputType | null
    _sum: ExperiencialLaboralSumAggregateOutputType | null
    _min: ExperiencialLaboralMinAggregateOutputType | null
    _max: ExperiencialLaboralMaxAggregateOutputType | null
  }

  export type ExperiencialLaboralAvgAggregateOutputType = {
    id: number | null
    Id_funcionario: number | null
  }

  export type ExperiencialLaboralSumAggregateOutputType = {
    id: number | null
    Id_funcionario: number | null
  }

  export type ExperiencialLaboralMinAggregateOutputType = {
    id: number | null
    ano_inicio: Date | null
    ano_termino: Date | null
    funcao: string | null
    instituicao: string | null
    pais: string | null
    createdAt: Date | null
    updatedAt: Date | null
    Id_funcionario: number | null
  }

  export type ExperiencialLaboralMaxAggregateOutputType = {
    id: number | null
    ano_inicio: Date | null
    ano_termino: Date | null
    funcao: string | null
    instituicao: string | null
    pais: string | null
    createdAt: Date | null
    updatedAt: Date | null
    Id_funcionario: number | null
  }

  export type ExperiencialLaboralCountAggregateOutputType = {
    id: number
    ano_inicio: number
    ano_termino: number
    funcao: number
    instituicao: number
    pais: number
    createdAt: number
    updatedAt: number
    Id_funcionario: number
    _all: number
  }


  export type ExperiencialLaboralAvgAggregateInputType = {
    id?: true
    Id_funcionario?: true
  }

  export type ExperiencialLaboralSumAggregateInputType = {
    id?: true
    Id_funcionario?: true
  }

  export type ExperiencialLaboralMinAggregateInputType = {
    id?: true
    ano_inicio?: true
    ano_termino?: true
    funcao?: true
    instituicao?: true
    pais?: true
    createdAt?: true
    updatedAt?: true
    Id_funcionario?: true
  }

  export type ExperiencialLaboralMaxAggregateInputType = {
    id?: true
    ano_inicio?: true
    ano_termino?: true
    funcao?: true
    instituicao?: true
    pais?: true
    createdAt?: true
    updatedAt?: true
    Id_funcionario?: true
  }

  export type ExperiencialLaboralCountAggregateInputType = {
    id?: true
    ano_inicio?: true
    ano_termino?: true
    funcao?: true
    instituicao?: true
    pais?: true
    createdAt?: true
    updatedAt?: true
    Id_funcionario?: true
    _all?: true
  }

  export type ExperiencialLaboralAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ExperiencialLaboral to aggregate.
     */
    where?: ExperiencialLaboralWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExperiencialLaborals to fetch.
     */
    orderBy?: ExperiencialLaboralOrderByWithRelationInput | ExperiencialLaboralOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ExperiencialLaboralWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExperiencialLaborals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExperiencialLaborals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ExperiencialLaborals
    **/
    _count?: true | ExperiencialLaboralCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ExperiencialLaboralAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ExperiencialLaboralSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ExperiencialLaboralMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ExperiencialLaboralMaxAggregateInputType
  }

  export type GetExperiencialLaboralAggregateType<T extends ExperiencialLaboralAggregateArgs> = {
        [P in keyof T & keyof AggregateExperiencialLaboral]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateExperiencialLaboral[P]>
      : GetScalarType<T[P], AggregateExperiencialLaboral[P]>
  }




  export type ExperiencialLaboralGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExperiencialLaboralWhereInput
    orderBy?: ExperiencialLaboralOrderByWithAggregationInput | ExperiencialLaboralOrderByWithAggregationInput[]
    by: ExperiencialLaboralScalarFieldEnum[] | ExperiencialLaboralScalarFieldEnum
    having?: ExperiencialLaboralScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ExperiencialLaboralCountAggregateInputType | true
    _avg?: ExperiencialLaboralAvgAggregateInputType
    _sum?: ExperiencialLaboralSumAggregateInputType
    _min?: ExperiencialLaboralMinAggregateInputType
    _max?: ExperiencialLaboralMaxAggregateInputType
  }

  export type ExperiencialLaboralGroupByOutputType = {
    id: number
    ano_inicio: Date
    ano_termino: Date
    funcao: string
    instituicao: string
    pais: string | null
    createdAt: Date
    updatedAt: Date
    Id_funcionario: number | null
    _count: ExperiencialLaboralCountAggregateOutputType | null
    _avg: ExperiencialLaboralAvgAggregateOutputType | null
    _sum: ExperiencialLaboralSumAggregateOutputType | null
    _min: ExperiencialLaboralMinAggregateOutputType | null
    _max: ExperiencialLaboralMaxAggregateOutputType | null
  }

  type GetExperiencialLaboralGroupByPayload<T extends ExperiencialLaboralGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ExperiencialLaboralGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ExperiencialLaboralGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ExperiencialLaboralGroupByOutputType[P]>
            : GetScalarType<T[P], ExperiencialLaboralGroupByOutputType[P]>
        }
      >
    >


  export type ExperiencialLaboralSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ano_inicio?: boolean
    ano_termino?: boolean
    funcao?: boolean
    instituicao?: boolean
    pais?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Id_funcionario?: boolean
    Funcionario?: boolean | ExperiencialLaboral$FuncionarioArgs<ExtArgs>
  }, ExtArgs["result"]["experiencialLaboral"]>

  export type ExperiencialLaboralSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ano_inicio?: boolean
    ano_termino?: boolean
    funcao?: boolean
    instituicao?: boolean
    pais?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Id_funcionario?: boolean
    Funcionario?: boolean | ExperiencialLaboral$FuncionarioArgs<ExtArgs>
  }, ExtArgs["result"]["experiencialLaboral"]>

  export type ExperiencialLaboralSelectScalar = {
    id?: boolean
    ano_inicio?: boolean
    ano_termino?: boolean
    funcao?: boolean
    instituicao?: boolean
    pais?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Id_funcionario?: boolean
  }

  export type ExperiencialLaboralInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Funcionario?: boolean | ExperiencialLaboral$FuncionarioArgs<ExtArgs>
  }
  export type ExperiencialLaboralIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Funcionario?: boolean | ExperiencialLaboral$FuncionarioArgs<ExtArgs>
  }

  export type $ExperiencialLaboralPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ExperiencialLaboral"
    objects: {
      Funcionario: Prisma.$FuncionarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ano_inicio: Date
      ano_termino: Date
      funcao: string
      instituicao: string
      pais: string | null
      createdAt: Date
      updatedAt: Date
      Id_funcionario: number | null
    }, ExtArgs["result"]["experiencialLaboral"]>
    composites: {}
  }

  type ExperiencialLaboralGetPayload<S extends boolean | null | undefined | ExperiencialLaboralDefaultArgs> = $Result.GetResult<Prisma.$ExperiencialLaboralPayload, S>

  type ExperiencialLaboralCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ExperiencialLaboralFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ExperiencialLaboralCountAggregateInputType | true
    }

  export interface ExperiencialLaboralDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ExperiencialLaboral'], meta: { name: 'ExperiencialLaboral' } }
    /**
     * Find zero or one ExperiencialLaboral that matches the filter.
     * @param {ExperiencialLaboralFindUniqueArgs} args - Arguments to find a ExperiencialLaboral
     * @example
     * // Get one ExperiencialLaboral
     * const experiencialLaboral = await prisma.experiencialLaboral.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ExperiencialLaboralFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ExperiencialLaboralFindUniqueArgs<ExtArgs>>
    ): Prisma__ExperiencialLaboralClient<$Result.GetResult<Prisma.$ExperiencialLaboralPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one ExperiencialLaboral that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ExperiencialLaboralFindUniqueOrThrowArgs} args - Arguments to find a ExperiencialLaboral
     * @example
     * // Get one ExperiencialLaboral
     * const experiencialLaboral = await prisma.experiencialLaboral.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ExperiencialLaboralFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ExperiencialLaboralFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ExperiencialLaboralClient<$Result.GetResult<Prisma.$ExperiencialLaboralPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first ExperiencialLaboral that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExperiencialLaboralFindFirstArgs} args - Arguments to find a ExperiencialLaboral
     * @example
     * // Get one ExperiencialLaboral
     * const experiencialLaboral = await prisma.experiencialLaboral.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ExperiencialLaboralFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ExperiencialLaboralFindFirstArgs<ExtArgs>>
    ): Prisma__ExperiencialLaboralClient<$Result.GetResult<Prisma.$ExperiencialLaboralPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first ExperiencialLaboral that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExperiencialLaboralFindFirstOrThrowArgs} args - Arguments to find a ExperiencialLaboral
     * @example
     * // Get one ExperiencialLaboral
     * const experiencialLaboral = await prisma.experiencialLaboral.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ExperiencialLaboralFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ExperiencialLaboralFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ExperiencialLaboralClient<$Result.GetResult<Prisma.$ExperiencialLaboralPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more ExperiencialLaborals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExperiencialLaboralFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ExperiencialLaborals
     * const experiencialLaborals = await prisma.experiencialLaboral.findMany()
     * 
     * // Get first 10 ExperiencialLaborals
     * const experiencialLaborals = await prisma.experiencialLaboral.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const experiencialLaboralWithIdOnly = await prisma.experiencialLaboral.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ExperiencialLaboralFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ExperiencialLaboralFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExperiencialLaboralPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a ExperiencialLaboral.
     * @param {ExperiencialLaboralCreateArgs} args - Arguments to create a ExperiencialLaboral.
     * @example
     * // Create one ExperiencialLaboral
     * const ExperiencialLaboral = await prisma.experiencialLaboral.create({
     *   data: {
     *     // ... data to create a ExperiencialLaboral
     *   }
     * })
     * 
    **/
    create<T extends ExperiencialLaboralCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ExperiencialLaboralCreateArgs<ExtArgs>>
    ): Prisma__ExperiencialLaboralClient<$Result.GetResult<Prisma.$ExperiencialLaboralPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many ExperiencialLaborals.
     * @param {ExperiencialLaboralCreateManyArgs} args - Arguments to create many ExperiencialLaborals.
     * @example
     * // Create many ExperiencialLaborals
     * const experiencialLaboral = await prisma.experiencialLaboral.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends ExperiencialLaboralCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ExperiencialLaboralCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ExperiencialLaborals and returns the data saved in the database.
     * @param {ExperiencialLaboralCreateManyAndReturnArgs} args - Arguments to create many ExperiencialLaborals.
     * @example
     * // Create many ExperiencialLaborals
     * const experiencialLaboral = await prisma.experiencialLaboral.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ExperiencialLaborals and only return the `id`
     * const experiencialLaboralWithIdOnly = await prisma.experiencialLaboral.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends ExperiencialLaboralCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, ExperiencialLaboralCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExperiencialLaboralPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a ExperiencialLaboral.
     * @param {ExperiencialLaboralDeleteArgs} args - Arguments to delete one ExperiencialLaboral.
     * @example
     * // Delete one ExperiencialLaboral
     * const ExperiencialLaboral = await prisma.experiencialLaboral.delete({
     *   where: {
     *     // ... filter to delete one ExperiencialLaboral
     *   }
     * })
     * 
    **/
    delete<T extends ExperiencialLaboralDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ExperiencialLaboralDeleteArgs<ExtArgs>>
    ): Prisma__ExperiencialLaboralClient<$Result.GetResult<Prisma.$ExperiencialLaboralPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one ExperiencialLaboral.
     * @param {ExperiencialLaboralUpdateArgs} args - Arguments to update one ExperiencialLaboral.
     * @example
     * // Update one ExperiencialLaboral
     * const experiencialLaboral = await prisma.experiencialLaboral.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ExperiencialLaboralUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ExperiencialLaboralUpdateArgs<ExtArgs>>
    ): Prisma__ExperiencialLaboralClient<$Result.GetResult<Prisma.$ExperiencialLaboralPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more ExperiencialLaborals.
     * @param {ExperiencialLaboralDeleteManyArgs} args - Arguments to filter ExperiencialLaborals to delete.
     * @example
     * // Delete a few ExperiencialLaborals
     * const { count } = await prisma.experiencialLaboral.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ExperiencialLaboralDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ExperiencialLaboralDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ExperiencialLaborals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExperiencialLaboralUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ExperiencialLaborals
     * const experiencialLaboral = await prisma.experiencialLaboral.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ExperiencialLaboralUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ExperiencialLaboralUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ExperiencialLaboral.
     * @param {ExperiencialLaboralUpsertArgs} args - Arguments to update or create a ExperiencialLaboral.
     * @example
     * // Update or create a ExperiencialLaboral
     * const experiencialLaboral = await prisma.experiencialLaboral.upsert({
     *   create: {
     *     // ... data to create a ExperiencialLaboral
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ExperiencialLaboral we want to update
     *   }
     * })
    **/
    upsert<T extends ExperiencialLaboralUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ExperiencialLaboralUpsertArgs<ExtArgs>>
    ): Prisma__ExperiencialLaboralClient<$Result.GetResult<Prisma.$ExperiencialLaboralPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of ExperiencialLaborals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExperiencialLaboralCountArgs} args - Arguments to filter ExperiencialLaborals to count.
     * @example
     * // Count the number of ExperiencialLaborals
     * const count = await prisma.experiencialLaboral.count({
     *   where: {
     *     // ... the filter for the ExperiencialLaborals we want to count
     *   }
     * })
    **/
    count<T extends ExperiencialLaboralCountArgs>(
      args?: Subset<T, ExperiencialLaboralCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ExperiencialLaboralCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ExperiencialLaboral.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExperiencialLaboralAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ExperiencialLaboralAggregateArgs>(args: Subset<T, ExperiencialLaboralAggregateArgs>): Prisma.PrismaPromise<GetExperiencialLaboralAggregateType<T>>

    /**
     * Group by ExperiencialLaboral.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExperiencialLaboralGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ExperiencialLaboralGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ExperiencialLaboralGroupByArgs['orderBy'] }
        : { orderBy?: ExperiencialLaboralGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ExperiencialLaboralGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetExperiencialLaboralGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ExperiencialLaboral model
   */
  readonly fields: ExperiencialLaboralFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ExperiencialLaboral.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ExperiencialLaboralClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Funcionario<T extends ExperiencialLaboral$FuncionarioArgs<ExtArgs> = {}>(args?: Subset<T, ExperiencialLaboral$FuncionarioArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the ExperiencialLaboral model
   */ 
  interface ExperiencialLaboralFieldRefs {
    readonly id: FieldRef<"ExperiencialLaboral", 'Int'>
    readonly ano_inicio: FieldRef<"ExperiencialLaboral", 'DateTime'>
    readonly ano_termino: FieldRef<"ExperiencialLaboral", 'DateTime'>
    readonly funcao: FieldRef<"ExperiencialLaboral", 'String'>
    readonly instituicao: FieldRef<"ExperiencialLaboral", 'String'>
    readonly pais: FieldRef<"ExperiencialLaboral", 'String'>
    readonly createdAt: FieldRef<"ExperiencialLaboral", 'DateTime'>
    readonly updatedAt: FieldRef<"ExperiencialLaboral", 'DateTime'>
    readonly Id_funcionario: FieldRef<"ExperiencialLaboral", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ExperiencialLaboral findUnique
   */
  export type ExperiencialLaboralFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExperiencialLaboral
     */
    select?: ExperiencialLaboralSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExperiencialLaboralInclude<ExtArgs> | null
    /**
     * Filter, which ExperiencialLaboral to fetch.
     */
    where: ExperiencialLaboralWhereUniqueInput
  }

  /**
   * ExperiencialLaboral findUniqueOrThrow
   */
  export type ExperiencialLaboralFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExperiencialLaboral
     */
    select?: ExperiencialLaboralSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExperiencialLaboralInclude<ExtArgs> | null
    /**
     * Filter, which ExperiencialLaboral to fetch.
     */
    where: ExperiencialLaboralWhereUniqueInput
  }

  /**
   * ExperiencialLaboral findFirst
   */
  export type ExperiencialLaboralFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExperiencialLaboral
     */
    select?: ExperiencialLaboralSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExperiencialLaboralInclude<ExtArgs> | null
    /**
     * Filter, which ExperiencialLaboral to fetch.
     */
    where?: ExperiencialLaboralWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExperiencialLaborals to fetch.
     */
    orderBy?: ExperiencialLaboralOrderByWithRelationInput | ExperiencialLaboralOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ExperiencialLaborals.
     */
    cursor?: ExperiencialLaboralWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExperiencialLaborals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExperiencialLaborals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ExperiencialLaborals.
     */
    distinct?: ExperiencialLaboralScalarFieldEnum | ExperiencialLaboralScalarFieldEnum[]
  }

  /**
   * ExperiencialLaboral findFirstOrThrow
   */
  export type ExperiencialLaboralFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExperiencialLaboral
     */
    select?: ExperiencialLaboralSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExperiencialLaboralInclude<ExtArgs> | null
    /**
     * Filter, which ExperiencialLaboral to fetch.
     */
    where?: ExperiencialLaboralWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExperiencialLaborals to fetch.
     */
    orderBy?: ExperiencialLaboralOrderByWithRelationInput | ExperiencialLaboralOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ExperiencialLaborals.
     */
    cursor?: ExperiencialLaboralWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExperiencialLaborals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExperiencialLaborals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ExperiencialLaborals.
     */
    distinct?: ExperiencialLaboralScalarFieldEnum | ExperiencialLaboralScalarFieldEnum[]
  }

  /**
   * ExperiencialLaboral findMany
   */
  export type ExperiencialLaboralFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExperiencialLaboral
     */
    select?: ExperiencialLaboralSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExperiencialLaboralInclude<ExtArgs> | null
    /**
     * Filter, which ExperiencialLaborals to fetch.
     */
    where?: ExperiencialLaboralWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExperiencialLaborals to fetch.
     */
    orderBy?: ExperiencialLaboralOrderByWithRelationInput | ExperiencialLaboralOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ExperiencialLaborals.
     */
    cursor?: ExperiencialLaboralWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExperiencialLaborals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExperiencialLaborals.
     */
    skip?: number
    distinct?: ExperiencialLaboralScalarFieldEnum | ExperiencialLaboralScalarFieldEnum[]
  }

  /**
   * ExperiencialLaboral create
   */
  export type ExperiencialLaboralCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExperiencialLaboral
     */
    select?: ExperiencialLaboralSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExperiencialLaboralInclude<ExtArgs> | null
    /**
     * The data needed to create a ExperiencialLaboral.
     */
    data: XOR<ExperiencialLaboralCreateInput, ExperiencialLaboralUncheckedCreateInput>
  }

  /**
   * ExperiencialLaboral createMany
   */
  export type ExperiencialLaboralCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ExperiencialLaborals.
     */
    data: ExperiencialLaboralCreateManyInput | ExperiencialLaboralCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ExperiencialLaboral createManyAndReturn
   */
  export type ExperiencialLaboralCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExperiencialLaboral
     */
    select?: ExperiencialLaboralSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ExperiencialLaborals.
     */
    data: ExperiencialLaboralCreateManyInput | ExperiencialLaboralCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExperiencialLaboralIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ExperiencialLaboral update
   */
  export type ExperiencialLaboralUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExperiencialLaboral
     */
    select?: ExperiencialLaboralSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExperiencialLaboralInclude<ExtArgs> | null
    /**
     * The data needed to update a ExperiencialLaboral.
     */
    data: XOR<ExperiencialLaboralUpdateInput, ExperiencialLaboralUncheckedUpdateInput>
    /**
     * Choose, which ExperiencialLaboral to update.
     */
    where: ExperiencialLaboralWhereUniqueInput
  }

  /**
   * ExperiencialLaboral updateMany
   */
  export type ExperiencialLaboralUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ExperiencialLaborals.
     */
    data: XOR<ExperiencialLaboralUpdateManyMutationInput, ExperiencialLaboralUncheckedUpdateManyInput>
    /**
     * Filter which ExperiencialLaborals to update
     */
    where?: ExperiencialLaboralWhereInput
  }

  /**
   * ExperiencialLaboral upsert
   */
  export type ExperiencialLaboralUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExperiencialLaboral
     */
    select?: ExperiencialLaboralSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExperiencialLaboralInclude<ExtArgs> | null
    /**
     * The filter to search for the ExperiencialLaboral to update in case it exists.
     */
    where: ExperiencialLaboralWhereUniqueInput
    /**
     * In case the ExperiencialLaboral found by the `where` argument doesn't exist, create a new ExperiencialLaboral with this data.
     */
    create: XOR<ExperiencialLaboralCreateInput, ExperiencialLaboralUncheckedCreateInput>
    /**
     * In case the ExperiencialLaboral was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ExperiencialLaboralUpdateInput, ExperiencialLaboralUncheckedUpdateInput>
  }

  /**
   * ExperiencialLaboral delete
   */
  export type ExperiencialLaboralDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExperiencialLaboral
     */
    select?: ExperiencialLaboralSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExperiencialLaboralInclude<ExtArgs> | null
    /**
     * Filter which ExperiencialLaboral to delete.
     */
    where: ExperiencialLaboralWhereUniqueInput
  }

  /**
   * ExperiencialLaboral deleteMany
   */
  export type ExperiencialLaboralDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ExperiencialLaborals to delete
     */
    where?: ExperiencialLaboralWhereInput
  }

  /**
   * ExperiencialLaboral.Funcionario
   */
  export type ExperiencialLaboral$FuncionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    where?: FuncionarioWhereInput
  }

  /**
   * ExperiencialLaboral without action
   */
  export type ExperiencialLaboralDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExperiencialLaboral
     */
    select?: ExperiencialLaboralSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExperiencialLaboralInclude<ExtArgs> | null
  }


  /**
   * Model Departamento
   */

  export type AggregateDepartamento = {
    _count: DepartamentoCountAggregateOutputType | null
    _avg: DepartamentoAvgAggregateOutputType | null
    _sum: DepartamentoSumAggregateOutputType | null
    _min: DepartamentoMinAggregateOutputType | null
    _max: DepartamentoMaxAggregateOutputType | null
  }

  export type DepartamentoAvgAggregateOutputType = {
    id: number | null
    Id_funcionario_chefe: number | null
    Id_funcionario_supervisor: number | null
  }

  export type DepartamentoSumAggregateOutputType = {
    id: number | null
    Id_funcionario_chefe: number | null
    Id_funcionario_supervisor: number | null
  }

  export type DepartamentoMinAggregateOutputType = {
    id: number | null
    nome_departamento: string | null
    Id_funcionario_chefe: number | null
    Id_funcionario_supervisor: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DepartamentoMaxAggregateOutputType = {
    id: number | null
    nome_departamento: string | null
    Id_funcionario_chefe: number | null
    Id_funcionario_supervisor: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DepartamentoCountAggregateOutputType = {
    id: number
    nome_departamento: number
    Id_funcionario_chefe: number
    Id_funcionario_supervisor: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type DepartamentoAvgAggregateInputType = {
    id?: true
    Id_funcionario_chefe?: true
    Id_funcionario_supervisor?: true
  }

  export type DepartamentoSumAggregateInputType = {
    id?: true
    Id_funcionario_chefe?: true
    Id_funcionario_supervisor?: true
  }

  export type DepartamentoMinAggregateInputType = {
    id?: true
    nome_departamento?: true
    Id_funcionario_chefe?: true
    Id_funcionario_supervisor?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DepartamentoMaxAggregateInputType = {
    id?: true
    nome_departamento?: true
    Id_funcionario_chefe?: true
    Id_funcionario_supervisor?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DepartamentoCountAggregateInputType = {
    id?: true
    nome_departamento?: true
    Id_funcionario_chefe?: true
    Id_funcionario_supervisor?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type DepartamentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Departamento to aggregate.
     */
    where?: DepartamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departamentos to fetch.
     */
    orderBy?: DepartamentoOrderByWithRelationInput | DepartamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DepartamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Departamentos
    **/
    _count?: true | DepartamentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DepartamentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DepartamentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DepartamentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DepartamentoMaxAggregateInputType
  }

  export type GetDepartamentoAggregateType<T extends DepartamentoAggregateArgs> = {
        [P in keyof T & keyof AggregateDepartamento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDepartamento[P]>
      : GetScalarType<T[P], AggregateDepartamento[P]>
  }




  export type DepartamentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepartamentoWhereInput
    orderBy?: DepartamentoOrderByWithAggregationInput | DepartamentoOrderByWithAggregationInput[]
    by: DepartamentoScalarFieldEnum[] | DepartamentoScalarFieldEnum
    having?: DepartamentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DepartamentoCountAggregateInputType | true
    _avg?: DepartamentoAvgAggregateInputType
    _sum?: DepartamentoSumAggregateInputType
    _min?: DepartamentoMinAggregateInputType
    _max?: DepartamentoMaxAggregateInputType
  }

  export type DepartamentoGroupByOutputType = {
    id: number
    nome_departamento: string
    Id_funcionario_chefe: number | null
    Id_funcionario_supervisor: number | null
    createdAt: Date
    updatedAt: Date
    _count: DepartamentoCountAggregateOutputType | null
    _avg: DepartamentoAvgAggregateOutputType | null
    _sum: DepartamentoSumAggregateOutputType | null
    _min: DepartamentoMinAggregateOutputType | null
    _max: DepartamentoMaxAggregateOutputType | null
  }

  type GetDepartamentoGroupByPayload<T extends DepartamentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DepartamentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DepartamentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DepartamentoGroupByOutputType[P]>
            : GetScalarType<T[P], DepartamentoGroupByOutputType[P]>
        }
      >
    >


  export type DepartamentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_departamento?: boolean
    Id_funcionario_chefe?: boolean
    Id_funcionario_supervisor?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    funcionario_chefe?: boolean | Departamento$funcionario_chefeArgs<ExtArgs>
    funcionario_supervisor?: boolean | Departamento$funcionario_supervisorArgs<ExtArgs>
    avaliacao?: boolean | Departamento$avaliacaoArgs<ExtArgs>
    funcionariodepartamento?: boolean | Departamento$funcionariodepartamentoArgs<ExtArgs>
    _count?: boolean | DepartamentoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["departamento"]>

  export type DepartamentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_departamento?: boolean
    Id_funcionario_chefe?: boolean
    Id_funcionario_supervisor?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    funcionario_chefe?: boolean | Departamento$funcionario_chefeArgs<ExtArgs>
    funcionario_supervisor?: boolean | Departamento$funcionario_supervisorArgs<ExtArgs>
  }, ExtArgs["result"]["departamento"]>

  export type DepartamentoSelectScalar = {
    id?: boolean
    nome_departamento?: boolean
    Id_funcionario_chefe?: boolean
    Id_funcionario_supervisor?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type DepartamentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionario_chefe?: boolean | Departamento$funcionario_chefeArgs<ExtArgs>
    funcionario_supervisor?: boolean | Departamento$funcionario_supervisorArgs<ExtArgs>
    avaliacao?: boolean | Departamento$avaliacaoArgs<ExtArgs>
    funcionariodepartamento?: boolean | Departamento$funcionariodepartamentoArgs<ExtArgs>
    _count?: boolean | DepartamentoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DepartamentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionario_chefe?: boolean | Departamento$funcionario_chefeArgs<ExtArgs>
    funcionario_supervisor?: boolean | Departamento$funcionario_supervisorArgs<ExtArgs>
  }

  export type $DepartamentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Departamento"
    objects: {
      funcionario_chefe: Prisma.$FuncionarioPayload<ExtArgs> | null
      funcionario_supervisor: Prisma.$FuncionarioPayload<ExtArgs> | null
      avaliacao: Prisma.$AvaliacaoPayload<ExtArgs>[]
      funcionariodepartamento: Prisma.$FuncionarioDepartamentoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome_departamento: string
      Id_funcionario_chefe: number | null
      Id_funcionario_supervisor: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["departamento"]>
    composites: {}
  }

  type DepartamentoGetPayload<S extends boolean | null | undefined | DepartamentoDefaultArgs> = $Result.GetResult<Prisma.$DepartamentoPayload, S>

  type DepartamentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DepartamentoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DepartamentoCountAggregateInputType | true
    }

  export interface DepartamentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Departamento'], meta: { name: 'Departamento' } }
    /**
     * Find zero or one Departamento that matches the filter.
     * @param {DepartamentoFindUniqueArgs} args - Arguments to find a Departamento
     * @example
     * // Get one Departamento
     * const departamento = await prisma.departamento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends DepartamentoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, DepartamentoFindUniqueArgs<ExtArgs>>
    ): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Departamento that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DepartamentoFindUniqueOrThrowArgs} args - Arguments to find a Departamento
     * @example
     * // Get one Departamento
     * const departamento = await prisma.departamento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends DepartamentoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DepartamentoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Departamento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoFindFirstArgs} args - Arguments to find a Departamento
     * @example
     * // Get one Departamento
     * const departamento = await prisma.departamento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends DepartamentoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, DepartamentoFindFirstArgs<ExtArgs>>
    ): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Departamento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoFindFirstOrThrowArgs} args - Arguments to find a Departamento
     * @example
     * // Get one Departamento
     * const departamento = await prisma.departamento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends DepartamentoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DepartamentoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Departamentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Departamentos
     * const departamentos = await prisma.departamento.findMany()
     * 
     * // Get first 10 Departamentos
     * const departamentos = await prisma.departamento.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const departamentoWithIdOnly = await prisma.departamento.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends DepartamentoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DepartamentoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Departamento.
     * @param {DepartamentoCreateArgs} args - Arguments to create a Departamento.
     * @example
     * // Create one Departamento
     * const Departamento = await prisma.departamento.create({
     *   data: {
     *     // ... data to create a Departamento
     *   }
     * })
     * 
    **/
    create<T extends DepartamentoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, DepartamentoCreateArgs<ExtArgs>>
    ): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Departamentos.
     * @param {DepartamentoCreateManyArgs} args - Arguments to create many Departamentos.
     * @example
     * // Create many Departamentos
     * const departamento = await prisma.departamento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends DepartamentoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DepartamentoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Departamentos and returns the data saved in the database.
     * @param {DepartamentoCreateManyAndReturnArgs} args - Arguments to create many Departamentos.
     * @example
     * // Create many Departamentos
     * const departamento = await prisma.departamento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Departamentos and only return the `id`
     * const departamentoWithIdOnly = await prisma.departamento.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends DepartamentoCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, DepartamentoCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Departamento.
     * @param {DepartamentoDeleteArgs} args - Arguments to delete one Departamento.
     * @example
     * // Delete one Departamento
     * const Departamento = await prisma.departamento.delete({
     *   where: {
     *     // ... filter to delete one Departamento
     *   }
     * })
     * 
    **/
    delete<T extends DepartamentoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, DepartamentoDeleteArgs<ExtArgs>>
    ): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Departamento.
     * @param {DepartamentoUpdateArgs} args - Arguments to update one Departamento.
     * @example
     * // Update one Departamento
     * const departamento = await prisma.departamento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DepartamentoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, DepartamentoUpdateArgs<ExtArgs>>
    ): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Departamentos.
     * @param {DepartamentoDeleteManyArgs} args - Arguments to filter Departamentos to delete.
     * @example
     * // Delete a few Departamentos
     * const { count } = await prisma.departamento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DepartamentoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DepartamentoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Departamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Departamentos
     * const departamento = await prisma.departamento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DepartamentoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, DepartamentoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Departamento.
     * @param {DepartamentoUpsertArgs} args - Arguments to update or create a Departamento.
     * @example
     * // Update or create a Departamento
     * const departamento = await prisma.departamento.upsert({
     *   create: {
     *     // ... data to create a Departamento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Departamento we want to update
     *   }
     * })
    **/
    upsert<T extends DepartamentoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, DepartamentoUpsertArgs<ExtArgs>>
    ): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Departamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoCountArgs} args - Arguments to filter Departamentos to count.
     * @example
     * // Count the number of Departamentos
     * const count = await prisma.departamento.count({
     *   where: {
     *     // ... the filter for the Departamentos we want to count
     *   }
     * })
    **/
    count<T extends DepartamentoCountArgs>(
      args?: Subset<T, DepartamentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DepartamentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Departamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DepartamentoAggregateArgs>(args: Subset<T, DepartamentoAggregateArgs>): Prisma.PrismaPromise<GetDepartamentoAggregateType<T>>

    /**
     * Group by Departamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DepartamentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DepartamentoGroupByArgs['orderBy'] }
        : { orderBy?: DepartamentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DepartamentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDepartamentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Departamento model
   */
  readonly fields: DepartamentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Departamento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DepartamentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    funcionario_chefe<T extends Departamento$funcionario_chefeArgs<ExtArgs> = {}>(args?: Subset<T, Departamento$funcionario_chefeArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    funcionario_supervisor<T extends Departamento$funcionario_supervisorArgs<ExtArgs> = {}>(args?: Subset<T, Departamento$funcionario_supervisorArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    avaliacao<T extends Departamento$avaliacaoArgs<ExtArgs> = {}>(args?: Subset<T, Departamento$avaliacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, 'findMany'> | Null>;

    funcionariodepartamento<T extends Departamento$funcionariodepartamentoArgs<ExtArgs> = {}>(args?: Subset<T, Departamento$funcionariodepartamentoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioDepartamentoPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Departamento model
   */ 
  interface DepartamentoFieldRefs {
    readonly id: FieldRef<"Departamento", 'Int'>
    readonly nome_departamento: FieldRef<"Departamento", 'String'>
    readonly Id_funcionario_chefe: FieldRef<"Departamento", 'Int'>
    readonly Id_funcionario_supervisor: FieldRef<"Departamento", 'Int'>
    readonly createdAt: FieldRef<"Departamento", 'DateTime'>
    readonly updatedAt: FieldRef<"Departamento", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Departamento findUnique
   */
  export type DepartamentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which Departamento to fetch.
     */
    where: DepartamentoWhereUniqueInput
  }

  /**
   * Departamento findUniqueOrThrow
   */
  export type DepartamentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which Departamento to fetch.
     */
    where: DepartamentoWhereUniqueInput
  }

  /**
   * Departamento findFirst
   */
  export type DepartamentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which Departamento to fetch.
     */
    where?: DepartamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departamentos to fetch.
     */
    orderBy?: DepartamentoOrderByWithRelationInput | DepartamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Departamentos.
     */
    cursor?: DepartamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Departamentos.
     */
    distinct?: DepartamentoScalarFieldEnum | DepartamentoScalarFieldEnum[]
  }

  /**
   * Departamento findFirstOrThrow
   */
  export type DepartamentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which Departamento to fetch.
     */
    where?: DepartamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departamentos to fetch.
     */
    orderBy?: DepartamentoOrderByWithRelationInput | DepartamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Departamentos.
     */
    cursor?: DepartamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Departamentos.
     */
    distinct?: DepartamentoScalarFieldEnum | DepartamentoScalarFieldEnum[]
  }

  /**
   * Departamento findMany
   */
  export type DepartamentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which Departamentos to fetch.
     */
    where?: DepartamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departamentos to fetch.
     */
    orderBy?: DepartamentoOrderByWithRelationInput | DepartamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Departamentos.
     */
    cursor?: DepartamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departamentos.
     */
    skip?: number
    distinct?: DepartamentoScalarFieldEnum | DepartamentoScalarFieldEnum[]
  }

  /**
   * Departamento create
   */
  export type DepartamentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * The data needed to create a Departamento.
     */
    data: XOR<DepartamentoCreateInput, DepartamentoUncheckedCreateInput>
  }

  /**
   * Departamento createMany
   */
  export type DepartamentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Departamentos.
     */
    data: DepartamentoCreateManyInput | DepartamentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Departamento createManyAndReturn
   */
  export type DepartamentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Departamentos.
     */
    data: DepartamentoCreateManyInput | DepartamentoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Departamento update
   */
  export type DepartamentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * The data needed to update a Departamento.
     */
    data: XOR<DepartamentoUpdateInput, DepartamentoUncheckedUpdateInput>
    /**
     * Choose, which Departamento to update.
     */
    where: DepartamentoWhereUniqueInput
  }

  /**
   * Departamento updateMany
   */
  export type DepartamentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Departamentos.
     */
    data: XOR<DepartamentoUpdateManyMutationInput, DepartamentoUncheckedUpdateManyInput>
    /**
     * Filter which Departamentos to update
     */
    where?: DepartamentoWhereInput
  }

  /**
   * Departamento upsert
   */
  export type DepartamentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * The filter to search for the Departamento to update in case it exists.
     */
    where: DepartamentoWhereUniqueInput
    /**
     * In case the Departamento found by the `where` argument doesn't exist, create a new Departamento with this data.
     */
    create: XOR<DepartamentoCreateInput, DepartamentoUncheckedCreateInput>
    /**
     * In case the Departamento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DepartamentoUpdateInput, DepartamentoUncheckedUpdateInput>
  }

  /**
   * Departamento delete
   */
  export type DepartamentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter which Departamento to delete.
     */
    where: DepartamentoWhereUniqueInput
  }

  /**
   * Departamento deleteMany
   */
  export type DepartamentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Departamentos to delete
     */
    where?: DepartamentoWhereInput
  }

  /**
   * Departamento.funcionario_chefe
   */
  export type Departamento$funcionario_chefeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    where?: FuncionarioWhereInput
  }

  /**
   * Departamento.funcionario_supervisor
   */
  export type Departamento$funcionario_supervisorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    where?: FuncionarioWhereInput
  }

  /**
   * Departamento.avaliacao
   */
  export type Departamento$avaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    where?: AvaliacaoWhereInput
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    cursor?: AvaliacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * Departamento.funcionariodepartamento
   */
  export type Departamento$funcionariodepartamentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioDepartamento
     */
    select?: FuncionarioDepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioDepartamentoInclude<ExtArgs> | null
    where?: FuncionarioDepartamentoWhereInput
    orderBy?: FuncionarioDepartamentoOrderByWithRelationInput | FuncionarioDepartamentoOrderByWithRelationInput[]
    cursor?: FuncionarioDepartamentoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FuncionarioDepartamentoScalarFieldEnum | FuncionarioDepartamentoScalarFieldEnum[]
  }

  /**
   * Departamento without action
   */
  export type DepartamentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
  }


  /**
   * Model FuncionarioDepartamento
   */

  export type AggregateFuncionarioDepartamento = {
    _count: FuncionarioDepartamentoCountAggregateOutputType | null
    _avg: FuncionarioDepartamentoAvgAggregateOutputType | null
    _sum: FuncionarioDepartamentoSumAggregateOutputType | null
    _min: FuncionarioDepartamentoMinAggregateOutputType | null
    _max: FuncionarioDepartamentoMaxAggregateOutputType | null
  }

  export type FuncionarioDepartamentoAvgAggregateOutputType = {
    id: number | null
    Id_departamento: number | null
    Id_funcionario: number | null
  }

  export type FuncionarioDepartamentoSumAggregateOutputType = {
    id: number | null
    Id_departamento: number | null
    Id_funcionario: number | null
  }

  export type FuncionarioDepartamentoMinAggregateOutputType = {
    id: number | null
    Id_departamento: number | null
    Id_funcionario: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FuncionarioDepartamentoMaxAggregateOutputType = {
    id: number | null
    Id_departamento: number | null
    Id_funcionario: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FuncionarioDepartamentoCountAggregateOutputType = {
    id: number
    Id_departamento: number
    Id_funcionario: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FuncionarioDepartamentoAvgAggregateInputType = {
    id?: true
    Id_departamento?: true
    Id_funcionario?: true
  }

  export type FuncionarioDepartamentoSumAggregateInputType = {
    id?: true
    Id_departamento?: true
    Id_funcionario?: true
  }

  export type FuncionarioDepartamentoMinAggregateInputType = {
    id?: true
    Id_departamento?: true
    Id_funcionario?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FuncionarioDepartamentoMaxAggregateInputType = {
    id?: true
    Id_departamento?: true
    Id_funcionario?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FuncionarioDepartamentoCountAggregateInputType = {
    id?: true
    Id_departamento?: true
    Id_funcionario?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FuncionarioDepartamentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FuncionarioDepartamento to aggregate.
     */
    where?: FuncionarioDepartamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FuncionarioDepartamentos to fetch.
     */
    orderBy?: FuncionarioDepartamentoOrderByWithRelationInput | FuncionarioDepartamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FuncionarioDepartamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FuncionarioDepartamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FuncionarioDepartamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FuncionarioDepartamentos
    **/
    _count?: true | FuncionarioDepartamentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FuncionarioDepartamentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FuncionarioDepartamentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FuncionarioDepartamentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FuncionarioDepartamentoMaxAggregateInputType
  }

  export type GetFuncionarioDepartamentoAggregateType<T extends FuncionarioDepartamentoAggregateArgs> = {
        [P in keyof T & keyof AggregateFuncionarioDepartamento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFuncionarioDepartamento[P]>
      : GetScalarType<T[P], AggregateFuncionarioDepartamento[P]>
  }




  export type FuncionarioDepartamentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FuncionarioDepartamentoWhereInput
    orderBy?: FuncionarioDepartamentoOrderByWithAggregationInput | FuncionarioDepartamentoOrderByWithAggregationInput[]
    by: FuncionarioDepartamentoScalarFieldEnum[] | FuncionarioDepartamentoScalarFieldEnum
    having?: FuncionarioDepartamentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FuncionarioDepartamentoCountAggregateInputType | true
    _avg?: FuncionarioDepartamentoAvgAggregateInputType
    _sum?: FuncionarioDepartamentoSumAggregateInputType
    _min?: FuncionarioDepartamentoMinAggregateInputType
    _max?: FuncionarioDepartamentoMaxAggregateInputType
  }

  export type FuncionarioDepartamentoGroupByOutputType = {
    id: number
    Id_departamento: number | null
    Id_funcionario: number | null
    createdAt: Date
    updatedAt: Date
    _count: FuncionarioDepartamentoCountAggregateOutputType | null
    _avg: FuncionarioDepartamentoAvgAggregateOutputType | null
    _sum: FuncionarioDepartamentoSumAggregateOutputType | null
    _min: FuncionarioDepartamentoMinAggregateOutputType | null
    _max: FuncionarioDepartamentoMaxAggregateOutputType | null
  }

  type GetFuncionarioDepartamentoGroupByPayload<T extends FuncionarioDepartamentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FuncionarioDepartamentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FuncionarioDepartamentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FuncionarioDepartamentoGroupByOutputType[P]>
            : GetScalarType<T[P], FuncionarioDepartamentoGroupByOutputType[P]>
        }
      >
    >


  export type FuncionarioDepartamentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    Id_departamento?: boolean
    Id_funcionario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Departamento?: boolean | FuncionarioDepartamento$DepartamentoArgs<ExtArgs>
    Funcionario?: boolean | FuncionarioDepartamento$FuncionarioArgs<ExtArgs>
  }, ExtArgs["result"]["funcionarioDepartamento"]>

  export type FuncionarioDepartamentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    Id_departamento?: boolean
    Id_funcionario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Departamento?: boolean | FuncionarioDepartamento$DepartamentoArgs<ExtArgs>
    Funcionario?: boolean | FuncionarioDepartamento$FuncionarioArgs<ExtArgs>
  }, ExtArgs["result"]["funcionarioDepartamento"]>

  export type FuncionarioDepartamentoSelectScalar = {
    id?: boolean
    Id_departamento?: boolean
    Id_funcionario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FuncionarioDepartamentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Departamento?: boolean | FuncionarioDepartamento$DepartamentoArgs<ExtArgs>
    Funcionario?: boolean | FuncionarioDepartamento$FuncionarioArgs<ExtArgs>
  }
  export type FuncionarioDepartamentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Departamento?: boolean | FuncionarioDepartamento$DepartamentoArgs<ExtArgs>
    Funcionario?: boolean | FuncionarioDepartamento$FuncionarioArgs<ExtArgs>
  }

  export type $FuncionarioDepartamentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FuncionarioDepartamento"
    objects: {
      Departamento: Prisma.$DepartamentoPayload<ExtArgs> | null
      Funcionario: Prisma.$FuncionarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      Id_departamento: number | null
      Id_funcionario: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["funcionarioDepartamento"]>
    composites: {}
  }

  type FuncionarioDepartamentoGetPayload<S extends boolean | null | undefined | FuncionarioDepartamentoDefaultArgs> = $Result.GetResult<Prisma.$FuncionarioDepartamentoPayload, S>

  type FuncionarioDepartamentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FuncionarioDepartamentoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FuncionarioDepartamentoCountAggregateInputType | true
    }

  export interface FuncionarioDepartamentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FuncionarioDepartamento'], meta: { name: 'FuncionarioDepartamento' } }
    /**
     * Find zero or one FuncionarioDepartamento that matches the filter.
     * @param {FuncionarioDepartamentoFindUniqueArgs} args - Arguments to find a FuncionarioDepartamento
     * @example
     * // Get one FuncionarioDepartamento
     * const funcionarioDepartamento = await prisma.funcionarioDepartamento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FuncionarioDepartamentoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, FuncionarioDepartamentoFindUniqueArgs<ExtArgs>>
    ): Prisma__FuncionarioDepartamentoClient<$Result.GetResult<Prisma.$FuncionarioDepartamentoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one FuncionarioDepartamento that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FuncionarioDepartamentoFindUniqueOrThrowArgs} args - Arguments to find a FuncionarioDepartamento
     * @example
     * // Get one FuncionarioDepartamento
     * const funcionarioDepartamento = await prisma.funcionarioDepartamento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FuncionarioDepartamentoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncionarioDepartamentoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__FuncionarioDepartamentoClient<$Result.GetResult<Prisma.$FuncionarioDepartamentoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first FuncionarioDepartamento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioDepartamentoFindFirstArgs} args - Arguments to find a FuncionarioDepartamento
     * @example
     * // Get one FuncionarioDepartamento
     * const funcionarioDepartamento = await prisma.funcionarioDepartamento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FuncionarioDepartamentoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncionarioDepartamentoFindFirstArgs<ExtArgs>>
    ): Prisma__FuncionarioDepartamentoClient<$Result.GetResult<Prisma.$FuncionarioDepartamentoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first FuncionarioDepartamento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioDepartamentoFindFirstOrThrowArgs} args - Arguments to find a FuncionarioDepartamento
     * @example
     * // Get one FuncionarioDepartamento
     * const funcionarioDepartamento = await prisma.funcionarioDepartamento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FuncionarioDepartamentoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncionarioDepartamentoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__FuncionarioDepartamentoClient<$Result.GetResult<Prisma.$FuncionarioDepartamentoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more FuncionarioDepartamentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioDepartamentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FuncionarioDepartamentos
     * const funcionarioDepartamentos = await prisma.funcionarioDepartamento.findMany()
     * 
     * // Get first 10 FuncionarioDepartamentos
     * const funcionarioDepartamentos = await prisma.funcionarioDepartamento.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const funcionarioDepartamentoWithIdOnly = await prisma.funcionarioDepartamento.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FuncionarioDepartamentoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncionarioDepartamentoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioDepartamentoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a FuncionarioDepartamento.
     * @param {FuncionarioDepartamentoCreateArgs} args - Arguments to create a FuncionarioDepartamento.
     * @example
     * // Create one FuncionarioDepartamento
     * const FuncionarioDepartamento = await prisma.funcionarioDepartamento.create({
     *   data: {
     *     // ... data to create a FuncionarioDepartamento
     *   }
     * })
     * 
    **/
    create<T extends FuncionarioDepartamentoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, FuncionarioDepartamentoCreateArgs<ExtArgs>>
    ): Prisma__FuncionarioDepartamentoClient<$Result.GetResult<Prisma.$FuncionarioDepartamentoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many FuncionarioDepartamentos.
     * @param {FuncionarioDepartamentoCreateManyArgs} args - Arguments to create many FuncionarioDepartamentos.
     * @example
     * // Create many FuncionarioDepartamentos
     * const funcionarioDepartamento = await prisma.funcionarioDepartamento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends FuncionarioDepartamentoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncionarioDepartamentoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FuncionarioDepartamentos and returns the data saved in the database.
     * @param {FuncionarioDepartamentoCreateManyAndReturnArgs} args - Arguments to create many FuncionarioDepartamentos.
     * @example
     * // Create many FuncionarioDepartamentos
     * const funcionarioDepartamento = await prisma.funcionarioDepartamento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FuncionarioDepartamentos and only return the `id`
     * const funcionarioDepartamentoWithIdOnly = await prisma.funcionarioDepartamento.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends FuncionarioDepartamentoCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncionarioDepartamentoCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioDepartamentoPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a FuncionarioDepartamento.
     * @param {FuncionarioDepartamentoDeleteArgs} args - Arguments to delete one FuncionarioDepartamento.
     * @example
     * // Delete one FuncionarioDepartamento
     * const FuncionarioDepartamento = await prisma.funcionarioDepartamento.delete({
     *   where: {
     *     // ... filter to delete one FuncionarioDepartamento
     *   }
     * })
     * 
    **/
    delete<T extends FuncionarioDepartamentoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, FuncionarioDepartamentoDeleteArgs<ExtArgs>>
    ): Prisma__FuncionarioDepartamentoClient<$Result.GetResult<Prisma.$FuncionarioDepartamentoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one FuncionarioDepartamento.
     * @param {FuncionarioDepartamentoUpdateArgs} args - Arguments to update one FuncionarioDepartamento.
     * @example
     * // Update one FuncionarioDepartamento
     * const funcionarioDepartamento = await prisma.funcionarioDepartamento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FuncionarioDepartamentoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, FuncionarioDepartamentoUpdateArgs<ExtArgs>>
    ): Prisma__FuncionarioDepartamentoClient<$Result.GetResult<Prisma.$FuncionarioDepartamentoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more FuncionarioDepartamentos.
     * @param {FuncionarioDepartamentoDeleteManyArgs} args - Arguments to filter FuncionarioDepartamentos to delete.
     * @example
     * // Delete a few FuncionarioDepartamentos
     * const { count } = await prisma.funcionarioDepartamento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FuncionarioDepartamentoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FuncionarioDepartamentoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FuncionarioDepartamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioDepartamentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FuncionarioDepartamentos
     * const funcionarioDepartamento = await prisma.funcionarioDepartamento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FuncionarioDepartamentoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, FuncionarioDepartamentoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FuncionarioDepartamento.
     * @param {FuncionarioDepartamentoUpsertArgs} args - Arguments to update or create a FuncionarioDepartamento.
     * @example
     * // Update or create a FuncionarioDepartamento
     * const funcionarioDepartamento = await prisma.funcionarioDepartamento.upsert({
     *   create: {
     *     // ... data to create a FuncionarioDepartamento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FuncionarioDepartamento we want to update
     *   }
     * })
    **/
    upsert<T extends FuncionarioDepartamentoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, FuncionarioDepartamentoUpsertArgs<ExtArgs>>
    ): Prisma__FuncionarioDepartamentoClient<$Result.GetResult<Prisma.$FuncionarioDepartamentoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of FuncionarioDepartamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioDepartamentoCountArgs} args - Arguments to filter FuncionarioDepartamentos to count.
     * @example
     * // Count the number of FuncionarioDepartamentos
     * const count = await prisma.funcionarioDepartamento.count({
     *   where: {
     *     // ... the filter for the FuncionarioDepartamentos we want to count
     *   }
     * })
    **/
    count<T extends FuncionarioDepartamentoCountArgs>(
      args?: Subset<T, FuncionarioDepartamentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FuncionarioDepartamentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FuncionarioDepartamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioDepartamentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FuncionarioDepartamentoAggregateArgs>(args: Subset<T, FuncionarioDepartamentoAggregateArgs>): Prisma.PrismaPromise<GetFuncionarioDepartamentoAggregateType<T>>

    /**
     * Group by FuncionarioDepartamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioDepartamentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FuncionarioDepartamentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FuncionarioDepartamentoGroupByArgs['orderBy'] }
        : { orderBy?: FuncionarioDepartamentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FuncionarioDepartamentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFuncionarioDepartamentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FuncionarioDepartamento model
   */
  readonly fields: FuncionarioDepartamentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FuncionarioDepartamento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FuncionarioDepartamentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Departamento<T extends FuncionarioDepartamento$DepartamentoArgs<ExtArgs> = {}>(args?: Subset<T, FuncionarioDepartamento$DepartamentoArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    Funcionario<T extends FuncionarioDepartamento$FuncionarioArgs<ExtArgs> = {}>(args?: Subset<T, FuncionarioDepartamento$FuncionarioArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the FuncionarioDepartamento model
   */ 
  interface FuncionarioDepartamentoFieldRefs {
    readonly id: FieldRef<"FuncionarioDepartamento", 'Int'>
    readonly Id_departamento: FieldRef<"FuncionarioDepartamento", 'Int'>
    readonly Id_funcionario: FieldRef<"FuncionarioDepartamento", 'Int'>
    readonly createdAt: FieldRef<"FuncionarioDepartamento", 'DateTime'>
    readonly updatedAt: FieldRef<"FuncionarioDepartamento", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FuncionarioDepartamento findUnique
   */
  export type FuncionarioDepartamentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioDepartamento
     */
    select?: FuncionarioDepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioDepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which FuncionarioDepartamento to fetch.
     */
    where: FuncionarioDepartamentoWhereUniqueInput
  }

  /**
   * FuncionarioDepartamento findUniqueOrThrow
   */
  export type FuncionarioDepartamentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioDepartamento
     */
    select?: FuncionarioDepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioDepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which FuncionarioDepartamento to fetch.
     */
    where: FuncionarioDepartamentoWhereUniqueInput
  }

  /**
   * FuncionarioDepartamento findFirst
   */
  export type FuncionarioDepartamentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioDepartamento
     */
    select?: FuncionarioDepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioDepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which FuncionarioDepartamento to fetch.
     */
    where?: FuncionarioDepartamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FuncionarioDepartamentos to fetch.
     */
    orderBy?: FuncionarioDepartamentoOrderByWithRelationInput | FuncionarioDepartamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FuncionarioDepartamentos.
     */
    cursor?: FuncionarioDepartamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FuncionarioDepartamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FuncionarioDepartamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FuncionarioDepartamentos.
     */
    distinct?: FuncionarioDepartamentoScalarFieldEnum | FuncionarioDepartamentoScalarFieldEnum[]
  }

  /**
   * FuncionarioDepartamento findFirstOrThrow
   */
  export type FuncionarioDepartamentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioDepartamento
     */
    select?: FuncionarioDepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioDepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which FuncionarioDepartamento to fetch.
     */
    where?: FuncionarioDepartamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FuncionarioDepartamentos to fetch.
     */
    orderBy?: FuncionarioDepartamentoOrderByWithRelationInput | FuncionarioDepartamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FuncionarioDepartamentos.
     */
    cursor?: FuncionarioDepartamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FuncionarioDepartamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FuncionarioDepartamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FuncionarioDepartamentos.
     */
    distinct?: FuncionarioDepartamentoScalarFieldEnum | FuncionarioDepartamentoScalarFieldEnum[]
  }

  /**
   * FuncionarioDepartamento findMany
   */
  export type FuncionarioDepartamentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioDepartamento
     */
    select?: FuncionarioDepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioDepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which FuncionarioDepartamentos to fetch.
     */
    where?: FuncionarioDepartamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FuncionarioDepartamentos to fetch.
     */
    orderBy?: FuncionarioDepartamentoOrderByWithRelationInput | FuncionarioDepartamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FuncionarioDepartamentos.
     */
    cursor?: FuncionarioDepartamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FuncionarioDepartamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FuncionarioDepartamentos.
     */
    skip?: number
    distinct?: FuncionarioDepartamentoScalarFieldEnum | FuncionarioDepartamentoScalarFieldEnum[]
  }

  /**
   * FuncionarioDepartamento create
   */
  export type FuncionarioDepartamentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioDepartamento
     */
    select?: FuncionarioDepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioDepartamentoInclude<ExtArgs> | null
    /**
     * The data needed to create a FuncionarioDepartamento.
     */
    data: XOR<FuncionarioDepartamentoCreateInput, FuncionarioDepartamentoUncheckedCreateInput>
  }

  /**
   * FuncionarioDepartamento createMany
   */
  export type FuncionarioDepartamentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FuncionarioDepartamentos.
     */
    data: FuncionarioDepartamentoCreateManyInput | FuncionarioDepartamentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FuncionarioDepartamento createManyAndReturn
   */
  export type FuncionarioDepartamentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioDepartamento
     */
    select?: FuncionarioDepartamentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many FuncionarioDepartamentos.
     */
    data: FuncionarioDepartamentoCreateManyInput | FuncionarioDepartamentoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioDepartamentoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FuncionarioDepartamento update
   */
  export type FuncionarioDepartamentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioDepartamento
     */
    select?: FuncionarioDepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioDepartamentoInclude<ExtArgs> | null
    /**
     * The data needed to update a FuncionarioDepartamento.
     */
    data: XOR<FuncionarioDepartamentoUpdateInput, FuncionarioDepartamentoUncheckedUpdateInput>
    /**
     * Choose, which FuncionarioDepartamento to update.
     */
    where: FuncionarioDepartamentoWhereUniqueInput
  }

  /**
   * FuncionarioDepartamento updateMany
   */
  export type FuncionarioDepartamentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FuncionarioDepartamentos.
     */
    data: XOR<FuncionarioDepartamentoUpdateManyMutationInput, FuncionarioDepartamentoUncheckedUpdateManyInput>
    /**
     * Filter which FuncionarioDepartamentos to update
     */
    where?: FuncionarioDepartamentoWhereInput
  }

  /**
   * FuncionarioDepartamento upsert
   */
  export type FuncionarioDepartamentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioDepartamento
     */
    select?: FuncionarioDepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioDepartamentoInclude<ExtArgs> | null
    /**
     * The filter to search for the FuncionarioDepartamento to update in case it exists.
     */
    where: FuncionarioDepartamentoWhereUniqueInput
    /**
     * In case the FuncionarioDepartamento found by the `where` argument doesn't exist, create a new FuncionarioDepartamento with this data.
     */
    create: XOR<FuncionarioDepartamentoCreateInput, FuncionarioDepartamentoUncheckedCreateInput>
    /**
     * In case the FuncionarioDepartamento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FuncionarioDepartamentoUpdateInput, FuncionarioDepartamentoUncheckedUpdateInput>
  }

  /**
   * FuncionarioDepartamento delete
   */
  export type FuncionarioDepartamentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioDepartamento
     */
    select?: FuncionarioDepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioDepartamentoInclude<ExtArgs> | null
    /**
     * Filter which FuncionarioDepartamento to delete.
     */
    where: FuncionarioDepartamentoWhereUniqueInput
  }

  /**
   * FuncionarioDepartamento deleteMany
   */
  export type FuncionarioDepartamentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FuncionarioDepartamentos to delete
     */
    where?: FuncionarioDepartamentoWhereInput
  }

  /**
   * FuncionarioDepartamento.Departamento
   */
  export type FuncionarioDepartamento$DepartamentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    where?: DepartamentoWhereInput
  }

  /**
   * FuncionarioDepartamento.Funcionario
   */
  export type FuncionarioDepartamento$FuncionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    where?: FuncionarioWhereInput
  }

  /**
   * FuncionarioDepartamento without action
   */
  export type FuncionarioDepartamentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioDepartamento
     */
    select?: FuncionarioDepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioDepartamentoInclude<ExtArgs> | null
  }


  /**
   * Model FichaAvaliacao
   */

  export type AggregateFichaAvaliacao = {
    _count: FichaAvaliacaoCountAggregateOutputType | null
    _avg: FichaAvaliacaoAvgAggregateOutputType | null
    _sum: FichaAvaliacaoSumAggregateOutputType | null
    _min: FichaAvaliacaoMinAggregateOutputType | null
    _max: FichaAvaliacaoMaxAggregateOutputType | null
  }

  export type FichaAvaliacaoAvgAggregateOutputType = {
    id: number | null
  }

  export type FichaAvaliacaoSumAggregateOutputType = {
    id: number | null
  }

  export type FichaAvaliacaoMinAggregateOutputType = {
    id: number | null
    nome_ficha: string | null
    objetivo: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FichaAvaliacaoMaxAggregateOutputType = {
    id: number | null
    nome_ficha: string | null
    objetivo: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FichaAvaliacaoCountAggregateOutputType = {
    id: number
    nome_ficha: number
    objetivo: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FichaAvaliacaoAvgAggregateInputType = {
    id?: true
  }

  export type FichaAvaliacaoSumAggregateInputType = {
    id?: true
  }

  export type FichaAvaliacaoMinAggregateInputType = {
    id?: true
    nome_ficha?: true
    objetivo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FichaAvaliacaoMaxAggregateInputType = {
    id?: true
    nome_ficha?: true
    objetivo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FichaAvaliacaoCountAggregateInputType = {
    id?: true
    nome_ficha?: true
    objetivo?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FichaAvaliacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FichaAvaliacao to aggregate.
     */
    where?: FichaAvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FichaAvaliacaos to fetch.
     */
    orderBy?: FichaAvaliacaoOrderByWithRelationInput | FichaAvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FichaAvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FichaAvaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FichaAvaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FichaAvaliacaos
    **/
    _count?: true | FichaAvaliacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FichaAvaliacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FichaAvaliacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FichaAvaliacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FichaAvaliacaoMaxAggregateInputType
  }

  export type GetFichaAvaliacaoAggregateType<T extends FichaAvaliacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateFichaAvaliacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFichaAvaliacao[P]>
      : GetScalarType<T[P], AggregateFichaAvaliacao[P]>
  }




  export type FichaAvaliacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FichaAvaliacaoWhereInput
    orderBy?: FichaAvaliacaoOrderByWithAggregationInput | FichaAvaliacaoOrderByWithAggregationInput[]
    by: FichaAvaliacaoScalarFieldEnum[] | FichaAvaliacaoScalarFieldEnum
    having?: FichaAvaliacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FichaAvaliacaoCountAggregateInputType | true
    _avg?: FichaAvaliacaoAvgAggregateInputType
    _sum?: FichaAvaliacaoSumAggregateInputType
    _min?: FichaAvaliacaoMinAggregateInputType
    _max?: FichaAvaliacaoMaxAggregateInputType
  }

  export type FichaAvaliacaoGroupByOutputType = {
    id: number
    nome_ficha: string
    objetivo: string | null
    createdAt: Date
    updatedAt: Date
    _count: FichaAvaliacaoCountAggregateOutputType | null
    _avg: FichaAvaliacaoAvgAggregateOutputType | null
    _sum: FichaAvaliacaoSumAggregateOutputType | null
    _min: FichaAvaliacaoMinAggregateOutputType | null
    _max: FichaAvaliacaoMaxAggregateOutputType | null
  }

  type GetFichaAvaliacaoGroupByPayload<T extends FichaAvaliacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FichaAvaliacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FichaAvaliacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FichaAvaliacaoGroupByOutputType[P]>
            : GetScalarType<T[P], FichaAvaliacaoGroupByOutputType[P]>
        }
      >
    >


  export type FichaAvaliacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_ficha?: boolean
    objetivo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    perguntafichaavaliacao?: boolean | FichaAvaliacao$perguntafichaavaliacaoArgs<ExtArgs>
    avaliacao?: boolean | FichaAvaliacao$avaliacaoArgs<ExtArgs>
    _count?: boolean | FichaAvaliacaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fichaAvaliacao"]>

  export type FichaAvaliacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_ficha?: boolean
    objetivo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["fichaAvaliacao"]>

  export type FichaAvaliacaoSelectScalar = {
    id?: boolean
    nome_ficha?: boolean
    objetivo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FichaAvaliacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    perguntafichaavaliacao?: boolean | FichaAvaliacao$perguntafichaavaliacaoArgs<ExtArgs>
    avaliacao?: boolean | FichaAvaliacao$avaliacaoArgs<ExtArgs>
    _count?: boolean | FichaAvaliacaoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FichaAvaliacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $FichaAvaliacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FichaAvaliacao"
    objects: {
      perguntafichaavaliacao: Prisma.$PerguntaFichaAvaliacaoPayload<ExtArgs>[]
      avaliacao: Prisma.$AvaliacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome_ficha: string
      objetivo: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["fichaAvaliacao"]>
    composites: {}
  }

  type FichaAvaliacaoGetPayload<S extends boolean | null | undefined | FichaAvaliacaoDefaultArgs> = $Result.GetResult<Prisma.$FichaAvaliacaoPayload, S>

  type FichaAvaliacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FichaAvaliacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FichaAvaliacaoCountAggregateInputType | true
    }

  export interface FichaAvaliacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FichaAvaliacao'], meta: { name: 'FichaAvaliacao' } }
    /**
     * Find zero or one FichaAvaliacao that matches the filter.
     * @param {FichaAvaliacaoFindUniqueArgs} args - Arguments to find a FichaAvaliacao
     * @example
     * // Get one FichaAvaliacao
     * const fichaAvaliacao = await prisma.fichaAvaliacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FichaAvaliacaoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, FichaAvaliacaoFindUniqueArgs<ExtArgs>>
    ): Prisma__FichaAvaliacaoClient<$Result.GetResult<Prisma.$FichaAvaliacaoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one FichaAvaliacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FichaAvaliacaoFindUniqueOrThrowArgs} args - Arguments to find a FichaAvaliacao
     * @example
     * // Get one FichaAvaliacao
     * const fichaAvaliacao = await prisma.fichaAvaliacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FichaAvaliacaoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FichaAvaliacaoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__FichaAvaliacaoClient<$Result.GetResult<Prisma.$FichaAvaliacaoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first FichaAvaliacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FichaAvaliacaoFindFirstArgs} args - Arguments to find a FichaAvaliacao
     * @example
     * // Get one FichaAvaliacao
     * const fichaAvaliacao = await prisma.fichaAvaliacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FichaAvaliacaoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, FichaAvaliacaoFindFirstArgs<ExtArgs>>
    ): Prisma__FichaAvaliacaoClient<$Result.GetResult<Prisma.$FichaAvaliacaoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first FichaAvaliacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FichaAvaliacaoFindFirstOrThrowArgs} args - Arguments to find a FichaAvaliacao
     * @example
     * // Get one FichaAvaliacao
     * const fichaAvaliacao = await prisma.fichaAvaliacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FichaAvaliacaoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FichaAvaliacaoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__FichaAvaliacaoClient<$Result.GetResult<Prisma.$FichaAvaliacaoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more FichaAvaliacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FichaAvaliacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FichaAvaliacaos
     * const fichaAvaliacaos = await prisma.fichaAvaliacao.findMany()
     * 
     * // Get first 10 FichaAvaliacaos
     * const fichaAvaliacaos = await prisma.fichaAvaliacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fichaAvaliacaoWithIdOnly = await prisma.fichaAvaliacao.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FichaAvaliacaoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FichaAvaliacaoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FichaAvaliacaoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a FichaAvaliacao.
     * @param {FichaAvaliacaoCreateArgs} args - Arguments to create a FichaAvaliacao.
     * @example
     * // Create one FichaAvaliacao
     * const FichaAvaliacao = await prisma.fichaAvaliacao.create({
     *   data: {
     *     // ... data to create a FichaAvaliacao
     *   }
     * })
     * 
    **/
    create<T extends FichaAvaliacaoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, FichaAvaliacaoCreateArgs<ExtArgs>>
    ): Prisma__FichaAvaliacaoClient<$Result.GetResult<Prisma.$FichaAvaliacaoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many FichaAvaliacaos.
     * @param {FichaAvaliacaoCreateManyArgs} args - Arguments to create many FichaAvaliacaos.
     * @example
     * // Create many FichaAvaliacaos
     * const fichaAvaliacao = await prisma.fichaAvaliacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends FichaAvaliacaoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FichaAvaliacaoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FichaAvaliacaos and returns the data saved in the database.
     * @param {FichaAvaliacaoCreateManyAndReturnArgs} args - Arguments to create many FichaAvaliacaos.
     * @example
     * // Create many FichaAvaliacaos
     * const fichaAvaliacao = await prisma.fichaAvaliacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FichaAvaliacaos and only return the `id`
     * const fichaAvaliacaoWithIdOnly = await prisma.fichaAvaliacao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends FichaAvaliacaoCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, FichaAvaliacaoCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FichaAvaliacaoPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a FichaAvaliacao.
     * @param {FichaAvaliacaoDeleteArgs} args - Arguments to delete one FichaAvaliacao.
     * @example
     * // Delete one FichaAvaliacao
     * const FichaAvaliacao = await prisma.fichaAvaliacao.delete({
     *   where: {
     *     // ... filter to delete one FichaAvaliacao
     *   }
     * })
     * 
    **/
    delete<T extends FichaAvaliacaoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, FichaAvaliacaoDeleteArgs<ExtArgs>>
    ): Prisma__FichaAvaliacaoClient<$Result.GetResult<Prisma.$FichaAvaliacaoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one FichaAvaliacao.
     * @param {FichaAvaliacaoUpdateArgs} args - Arguments to update one FichaAvaliacao.
     * @example
     * // Update one FichaAvaliacao
     * const fichaAvaliacao = await prisma.fichaAvaliacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FichaAvaliacaoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, FichaAvaliacaoUpdateArgs<ExtArgs>>
    ): Prisma__FichaAvaliacaoClient<$Result.GetResult<Prisma.$FichaAvaliacaoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more FichaAvaliacaos.
     * @param {FichaAvaliacaoDeleteManyArgs} args - Arguments to filter FichaAvaliacaos to delete.
     * @example
     * // Delete a few FichaAvaliacaos
     * const { count } = await prisma.fichaAvaliacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FichaAvaliacaoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FichaAvaliacaoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FichaAvaliacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FichaAvaliacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FichaAvaliacaos
     * const fichaAvaliacao = await prisma.fichaAvaliacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FichaAvaliacaoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, FichaAvaliacaoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FichaAvaliacao.
     * @param {FichaAvaliacaoUpsertArgs} args - Arguments to update or create a FichaAvaliacao.
     * @example
     * // Update or create a FichaAvaliacao
     * const fichaAvaliacao = await prisma.fichaAvaliacao.upsert({
     *   create: {
     *     // ... data to create a FichaAvaliacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FichaAvaliacao we want to update
     *   }
     * })
    **/
    upsert<T extends FichaAvaliacaoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, FichaAvaliacaoUpsertArgs<ExtArgs>>
    ): Prisma__FichaAvaliacaoClient<$Result.GetResult<Prisma.$FichaAvaliacaoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of FichaAvaliacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FichaAvaliacaoCountArgs} args - Arguments to filter FichaAvaliacaos to count.
     * @example
     * // Count the number of FichaAvaliacaos
     * const count = await prisma.fichaAvaliacao.count({
     *   where: {
     *     // ... the filter for the FichaAvaliacaos we want to count
     *   }
     * })
    **/
    count<T extends FichaAvaliacaoCountArgs>(
      args?: Subset<T, FichaAvaliacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FichaAvaliacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FichaAvaliacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FichaAvaliacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FichaAvaliacaoAggregateArgs>(args: Subset<T, FichaAvaliacaoAggregateArgs>): Prisma.PrismaPromise<GetFichaAvaliacaoAggregateType<T>>

    /**
     * Group by FichaAvaliacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FichaAvaliacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FichaAvaliacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FichaAvaliacaoGroupByArgs['orderBy'] }
        : { orderBy?: FichaAvaliacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FichaAvaliacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFichaAvaliacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FichaAvaliacao model
   */
  readonly fields: FichaAvaliacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FichaAvaliacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FichaAvaliacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    perguntafichaavaliacao<T extends FichaAvaliacao$perguntafichaavaliacaoArgs<ExtArgs> = {}>(args?: Subset<T, FichaAvaliacao$perguntafichaavaliacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PerguntaFichaAvaliacaoPayload<ExtArgs>, T, 'findMany'> | Null>;

    avaliacao<T extends FichaAvaliacao$avaliacaoArgs<ExtArgs> = {}>(args?: Subset<T, FichaAvaliacao$avaliacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the FichaAvaliacao model
   */ 
  interface FichaAvaliacaoFieldRefs {
    readonly id: FieldRef<"FichaAvaliacao", 'Int'>
    readonly nome_ficha: FieldRef<"FichaAvaliacao", 'String'>
    readonly objetivo: FieldRef<"FichaAvaliacao", 'String'>
    readonly createdAt: FieldRef<"FichaAvaliacao", 'DateTime'>
    readonly updatedAt: FieldRef<"FichaAvaliacao", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FichaAvaliacao findUnique
   */
  export type FichaAvaliacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FichaAvaliacao
     */
    select?: FichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FichaAvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which FichaAvaliacao to fetch.
     */
    where: FichaAvaliacaoWhereUniqueInput
  }

  /**
   * FichaAvaliacao findUniqueOrThrow
   */
  export type FichaAvaliacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FichaAvaliacao
     */
    select?: FichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FichaAvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which FichaAvaliacao to fetch.
     */
    where: FichaAvaliacaoWhereUniqueInput
  }

  /**
   * FichaAvaliacao findFirst
   */
  export type FichaAvaliacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FichaAvaliacao
     */
    select?: FichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FichaAvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which FichaAvaliacao to fetch.
     */
    where?: FichaAvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FichaAvaliacaos to fetch.
     */
    orderBy?: FichaAvaliacaoOrderByWithRelationInput | FichaAvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FichaAvaliacaos.
     */
    cursor?: FichaAvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FichaAvaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FichaAvaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FichaAvaliacaos.
     */
    distinct?: FichaAvaliacaoScalarFieldEnum | FichaAvaliacaoScalarFieldEnum[]
  }

  /**
   * FichaAvaliacao findFirstOrThrow
   */
  export type FichaAvaliacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FichaAvaliacao
     */
    select?: FichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FichaAvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which FichaAvaliacao to fetch.
     */
    where?: FichaAvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FichaAvaliacaos to fetch.
     */
    orderBy?: FichaAvaliacaoOrderByWithRelationInput | FichaAvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FichaAvaliacaos.
     */
    cursor?: FichaAvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FichaAvaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FichaAvaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FichaAvaliacaos.
     */
    distinct?: FichaAvaliacaoScalarFieldEnum | FichaAvaliacaoScalarFieldEnum[]
  }

  /**
   * FichaAvaliacao findMany
   */
  export type FichaAvaliacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FichaAvaliacao
     */
    select?: FichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FichaAvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which FichaAvaliacaos to fetch.
     */
    where?: FichaAvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FichaAvaliacaos to fetch.
     */
    orderBy?: FichaAvaliacaoOrderByWithRelationInput | FichaAvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FichaAvaliacaos.
     */
    cursor?: FichaAvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FichaAvaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FichaAvaliacaos.
     */
    skip?: number
    distinct?: FichaAvaliacaoScalarFieldEnum | FichaAvaliacaoScalarFieldEnum[]
  }

  /**
   * FichaAvaliacao create
   */
  export type FichaAvaliacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FichaAvaliacao
     */
    select?: FichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FichaAvaliacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a FichaAvaliacao.
     */
    data: XOR<FichaAvaliacaoCreateInput, FichaAvaliacaoUncheckedCreateInput>
  }

  /**
   * FichaAvaliacao createMany
   */
  export type FichaAvaliacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FichaAvaliacaos.
     */
    data: FichaAvaliacaoCreateManyInput | FichaAvaliacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FichaAvaliacao createManyAndReturn
   */
  export type FichaAvaliacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FichaAvaliacao
     */
    select?: FichaAvaliacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many FichaAvaliacaos.
     */
    data: FichaAvaliacaoCreateManyInput | FichaAvaliacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FichaAvaliacao update
   */
  export type FichaAvaliacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FichaAvaliacao
     */
    select?: FichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FichaAvaliacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a FichaAvaliacao.
     */
    data: XOR<FichaAvaliacaoUpdateInput, FichaAvaliacaoUncheckedUpdateInput>
    /**
     * Choose, which FichaAvaliacao to update.
     */
    where: FichaAvaliacaoWhereUniqueInput
  }

  /**
   * FichaAvaliacao updateMany
   */
  export type FichaAvaliacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FichaAvaliacaos.
     */
    data: XOR<FichaAvaliacaoUpdateManyMutationInput, FichaAvaliacaoUncheckedUpdateManyInput>
    /**
     * Filter which FichaAvaliacaos to update
     */
    where?: FichaAvaliacaoWhereInput
  }

  /**
   * FichaAvaliacao upsert
   */
  export type FichaAvaliacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FichaAvaliacao
     */
    select?: FichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FichaAvaliacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the FichaAvaliacao to update in case it exists.
     */
    where: FichaAvaliacaoWhereUniqueInput
    /**
     * In case the FichaAvaliacao found by the `where` argument doesn't exist, create a new FichaAvaliacao with this data.
     */
    create: XOR<FichaAvaliacaoCreateInput, FichaAvaliacaoUncheckedCreateInput>
    /**
     * In case the FichaAvaliacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FichaAvaliacaoUpdateInput, FichaAvaliacaoUncheckedUpdateInput>
  }

  /**
   * FichaAvaliacao delete
   */
  export type FichaAvaliacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FichaAvaliacao
     */
    select?: FichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FichaAvaliacaoInclude<ExtArgs> | null
    /**
     * Filter which FichaAvaliacao to delete.
     */
    where: FichaAvaliacaoWhereUniqueInput
  }

  /**
   * FichaAvaliacao deleteMany
   */
  export type FichaAvaliacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FichaAvaliacaos to delete
     */
    where?: FichaAvaliacaoWhereInput
  }

  /**
   * FichaAvaliacao.perguntafichaavaliacao
   */
  export type FichaAvaliacao$perguntafichaavaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PerguntaFichaAvaliacao
     */
    select?: PerguntaFichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PerguntaFichaAvaliacaoInclude<ExtArgs> | null
    where?: PerguntaFichaAvaliacaoWhereInput
    orderBy?: PerguntaFichaAvaliacaoOrderByWithRelationInput | PerguntaFichaAvaliacaoOrderByWithRelationInput[]
    cursor?: PerguntaFichaAvaliacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PerguntaFichaAvaliacaoScalarFieldEnum | PerguntaFichaAvaliacaoScalarFieldEnum[]
  }

  /**
   * FichaAvaliacao.avaliacao
   */
  export type FichaAvaliacao$avaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    where?: AvaliacaoWhereInput
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    cursor?: AvaliacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * FichaAvaliacao without action
   */
  export type FichaAvaliacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FichaAvaliacao
     */
    select?: FichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FichaAvaliacaoInclude<ExtArgs> | null
  }


  /**
   * Model Competencia
   */

  export type AggregateCompetencia = {
    _count: CompetenciaCountAggregateOutputType | null
    _avg: CompetenciaAvgAggregateOutputType | null
    _sum: CompetenciaSumAggregateOutputType | null
    _min: CompetenciaMinAggregateOutputType | null
    _max: CompetenciaMaxAggregateOutputType | null
  }

  export type CompetenciaAvgAggregateOutputType = {
    id: number | null
  }

  export type CompetenciaSumAggregateOutputType = {
    id: number | null
  }

  export type CompetenciaMinAggregateOutputType = {
    id: number | null
    nome_competencia: string | null
    criterio: $Enums.Criterio | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CompetenciaMaxAggregateOutputType = {
    id: number | null
    nome_competencia: string | null
    criterio: $Enums.Criterio | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CompetenciaCountAggregateOutputType = {
    id: number
    nome_competencia: number
    criterio: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CompetenciaAvgAggregateInputType = {
    id?: true
  }

  export type CompetenciaSumAggregateInputType = {
    id?: true
  }

  export type CompetenciaMinAggregateInputType = {
    id?: true
    nome_competencia?: true
    criterio?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CompetenciaMaxAggregateInputType = {
    id?: true
    nome_competencia?: true
    criterio?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CompetenciaCountAggregateInputType = {
    id?: true
    nome_competencia?: true
    criterio?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CompetenciaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Competencia to aggregate.
     */
    where?: CompetenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Competencias to fetch.
     */
    orderBy?: CompetenciaOrderByWithRelationInput | CompetenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompetenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Competencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Competencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Competencias
    **/
    _count?: true | CompetenciaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompetenciaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompetenciaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompetenciaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompetenciaMaxAggregateInputType
  }

  export type GetCompetenciaAggregateType<T extends CompetenciaAggregateArgs> = {
        [P in keyof T & keyof AggregateCompetencia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompetencia[P]>
      : GetScalarType<T[P], AggregateCompetencia[P]>
  }




  export type CompetenciaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompetenciaWhereInput
    orderBy?: CompetenciaOrderByWithAggregationInput | CompetenciaOrderByWithAggregationInput[]
    by: CompetenciaScalarFieldEnum[] | CompetenciaScalarFieldEnum
    having?: CompetenciaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompetenciaCountAggregateInputType | true
    _avg?: CompetenciaAvgAggregateInputType
    _sum?: CompetenciaSumAggregateInputType
    _min?: CompetenciaMinAggregateInputType
    _max?: CompetenciaMaxAggregateInputType
  }

  export type CompetenciaGroupByOutputType = {
    id: number
    nome_competencia: string
    criterio: $Enums.Criterio
    createdAt: Date
    updatedAt: Date
    _count: CompetenciaCountAggregateOutputType | null
    _avg: CompetenciaAvgAggregateOutputType | null
    _sum: CompetenciaSumAggregateOutputType | null
    _min: CompetenciaMinAggregateOutputType | null
    _max: CompetenciaMaxAggregateOutputType | null
  }

  type GetCompetenciaGroupByPayload<T extends CompetenciaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompetenciaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompetenciaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompetenciaGroupByOutputType[P]>
            : GetScalarType<T[P], CompetenciaGroupByOutputType[P]>
        }
      >
    >


  export type CompetenciaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_competencia?: boolean
    criterio?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    perguntafichaavaliacao?: boolean | Competencia$perguntafichaavaliacaoArgs<ExtArgs>
    _count?: boolean | CompetenciaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["competencia"]>

  export type CompetenciaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_competencia?: boolean
    criterio?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["competencia"]>

  export type CompetenciaSelectScalar = {
    id?: boolean
    nome_competencia?: boolean
    criterio?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CompetenciaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    perguntafichaavaliacao?: boolean | Competencia$perguntafichaavaliacaoArgs<ExtArgs>
    _count?: boolean | CompetenciaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CompetenciaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CompetenciaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Competencia"
    objects: {
      perguntafichaavaliacao: Prisma.$PerguntaFichaAvaliacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome_competencia: string
      criterio: $Enums.Criterio
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["competencia"]>
    composites: {}
  }

  type CompetenciaGetPayload<S extends boolean | null | undefined | CompetenciaDefaultArgs> = $Result.GetResult<Prisma.$CompetenciaPayload, S>

  type CompetenciaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CompetenciaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CompetenciaCountAggregateInputType | true
    }

  export interface CompetenciaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Competencia'], meta: { name: 'Competencia' } }
    /**
     * Find zero or one Competencia that matches the filter.
     * @param {CompetenciaFindUniqueArgs} args - Arguments to find a Competencia
     * @example
     * // Get one Competencia
     * const competencia = await prisma.competencia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CompetenciaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CompetenciaFindUniqueArgs<ExtArgs>>
    ): Prisma__CompetenciaClient<$Result.GetResult<Prisma.$CompetenciaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Competencia that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CompetenciaFindUniqueOrThrowArgs} args - Arguments to find a Competencia
     * @example
     * // Get one Competencia
     * const competencia = await prisma.competencia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CompetenciaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CompetenciaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CompetenciaClient<$Result.GetResult<Prisma.$CompetenciaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Competencia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompetenciaFindFirstArgs} args - Arguments to find a Competencia
     * @example
     * // Get one Competencia
     * const competencia = await prisma.competencia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CompetenciaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CompetenciaFindFirstArgs<ExtArgs>>
    ): Prisma__CompetenciaClient<$Result.GetResult<Prisma.$CompetenciaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Competencia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompetenciaFindFirstOrThrowArgs} args - Arguments to find a Competencia
     * @example
     * // Get one Competencia
     * const competencia = await prisma.competencia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CompetenciaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CompetenciaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CompetenciaClient<$Result.GetResult<Prisma.$CompetenciaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Competencias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompetenciaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Competencias
     * const competencias = await prisma.competencia.findMany()
     * 
     * // Get first 10 Competencias
     * const competencias = await prisma.competencia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const competenciaWithIdOnly = await prisma.competencia.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CompetenciaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CompetenciaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompetenciaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Competencia.
     * @param {CompetenciaCreateArgs} args - Arguments to create a Competencia.
     * @example
     * // Create one Competencia
     * const Competencia = await prisma.competencia.create({
     *   data: {
     *     // ... data to create a Competencia
     *   }
     * })
     * 
    **/
    create<T extends CompetenciaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CompetenciaCreateArgs<ExtArgs>>
    ): Prisma__CompetenciaClient<$Result.GetResult<Prisma.$CompetenciaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Competencias.
     * @param {CompetenciaCreateManyArgs} args - Arguments to create many Competencias.
     * @example
     * // Create many Competencias
     * const competencia = await prisma.competencia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends CompetenciaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CompetenciaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Competencias and returns the data saved in the database.
     * @param {CompetenciaCreateManyAndReturnArgs} args - Arguments to create many Competencias.
     * @example
     * // Create many Competencias
     * const competencia = await prisma.competencia.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Competencias and only return the `id`
     * const competenciaWithIdOnly = await prisma.competencia.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends CompetenciaCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, CompetenciaCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompetenciaPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Competencia.
     * @param {CompetenciaDeleteArgs} args - Arguments to delete one Competencia.
     * @example
     * // Delete one Competencia
     * const Competencia = await prisma.competencia.delete({
     *   where: {
     *     // ... filter to delete one Competencia
     *   }
     * })
     * 
    **/
    delete<T extends CompetenciaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CompetenciaDeleteArgs<ExtArgs>>
    ): Prisma__CompetenciaClient<$Result.GetResult<Prisma.$CompetenciaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Competencia.
     * @param {CompetenciaUpdateArgs} args - Arguments to update one Competencia.
     * @example
     * // Update one Competencia
     * const competencia = await prisma.competencia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CompetenciaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CompetenciaUpdateArgs<ExtArgs>>
    ): Prisma__CompetenciaClient<$Result.GetResult<Prisma.$CompetenciaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Competencias.
     * @param {CompetenciaDeleteManyArgs} args - Arguments to filter Competencias to delete.
     * @example
     * // Delete a few Competencias
     * const { count } = await prisma.competencia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CompetenciaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CompetenciaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Competencias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompetenciaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Competencias
     * const competencia = await prisma.competencia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CompetenciaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CompetenciaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Competencia.
     * @param {CompetenciaUpsertArgs} args - Arguments to update or create a Competencia.
     * @example
     * // Update or create a Competencia
     * const competencia = await prisma.competencia.upsert({
     *   create: {
     *     // ... data to create a Competencia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Competencia we want to update
     *   }
     * })
    **/
    upsert<T extends CompetenciaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CompetenciaUpsertArgs<ExtArgs>>
    ): Prisma__CompetenciaClient<$Result.GetResult<Prisma.$CompetenciaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Competencias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompetenciaCountArgs} args - Arguments to filter Competencias to count.
     * @example
     * // Count the number of Competencias
     * const count = await prisma.competencia.count({
     *   where: {
     *     // ... the filter for the Competencias we want to count
     *   }
     * })
    **/
    count<T extends CompetenciaCountArgs>(
      args?: Subset<T, CompetenciaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompetenciaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Competencia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompetenciaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompetenciaAggregateArgs>(args: Subset<T, CompetenciaAggregateArgs>): Prisma.PrismaPromise<GetCompetenciaAggregateType<T>>

    /**
     * Group by Competencia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompetenciaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompetenciaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompetenciaGroupByArgs['orderBy'] }
        : { orderBy?: CompetenciaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompetenciaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompetenciaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Competencia model
   */
  readonly fields: CompetenciaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Competencia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompetenciaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    perguntafichaavaliacao<T extends Competencia$perguntafichaavaliacaoArgs<ExtArgs> = {}>(args?: Subset<T, Competencia$perguntafichaavaliacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PerguntaFichaAvaliacaoPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Competencia model
   */ 
  interface CompetenciaFieldRefs {
    readonly id: FieldRef<"Competencia", 'Int'>
    readonly nome_competencia: FieldRef<"Competencia", 'String'>
    readonly criterio: FieldRef<"Competencia", 'Criterio'>
    readonly createdAt: FieldRef<"Competencia", 'DateTime'>
    readonly updatedAt: FieldRef<"Competencia", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Competencia findUnique
   */
  export type CompetenciaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Competencia
     */
    select?: CompetenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetenciaInclude<ExtArgs> | null
    /**
     * Filter, which Competencia to fetch.
     */
    where: CompetenciaWhereUniqueInput
  }

  /**
   * Competencia findUniqueOrThrow
   */
  export type CompetenciaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Competencia
     */
    select?: CompetenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetenciaInclude<ExtArgs> | null
    /**
     * Filter, which Competencia to fetch.
     */
    where: CompetenciaWhereUniqueInput
  }

  /**
   * Competencia findFirst
   */
  export type CompetenciaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Competencia
     */
    select?: CompetenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetenciaInclude<ExtArgs> | null
    /**
     * Filter, which Competencia to fetch.
     */
    where?: CompetenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Competencias to fetch.
     */
    orderBy?: CompetenciaOrderByWithRelationInput | CompetenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Competencias.
     */
    cursor?: CompetenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Competencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Competencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Competencias.
     */
    distinct?: CompetenciaScalarFieldEnum | CompetenciaScalarFieldEnum[]
  }

  /**
   * Competencia findFirstOrThrow
   */
  export type CompetenciaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Competencia
     */
    select?: CompetenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetenciaInclude<ExtArgs> | null
    /**
     * Filter, which Competencia to fetch.
     */
    where?: CompetenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Competencias to fetch.
     */
    orderBy?: CompetenciaOrderByWithRelationInput | CompetenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Competencias.
     */
    cursor?: CompetenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Competencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Competencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Competencias.
     */
    distinct?: CompetenciaScalarFieldEnum | CompetenciaScalarFieldEnum[]
  }

  /**
   * Competencia findMany
   */
  export type CompetenciaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Competencia
     */
    select?: CompetenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetenciaInclude<ExtArgs> | null
    /**
     * Filter, which Competencias to fetch.
     */
    where?: CompetenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Competencias to fetch.
     */
    orderBy?: CompetenciaOrderByWithRelationInput | CompetenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Competencias.
     */
    cursor?: CompetenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Competencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Competencias.
     */
    skip?: number
    distinct?: CompetenciaScalarFieldEnum | CompetenciaScalarFieldEnum[]
  }

  /**
   * Competencia create
   */
  export type CompetenciaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Competencia
     */
    select?: CompetenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetenciaInclude<ExtArgs> | null
    /**
     * The data needed to create a Competencia.
     */
    data: XOR<CompetenciaCreateInput, CompetenciaUncheckedCreateInput>
  }

  /**
   * Competencia createMany
   */
  export type CompetenciaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Competencias.
     */
    data: CompetenciaCreateManyInput | CompetenciaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Competencia createManyAndReturn
   */
  export type CompetenciaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Competencia
     */
    select?: CompetenciaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Competencias.
     */
    data: CompetenciaCreateManyInput | CompetenciaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Competencia update
   */
  export type CompetenciaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Competencia
     */
    select?: CompetenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetenciaInclude<ExtArgs> | null
    /**
     * The data needed to update a Competencia.
     */
    data: XOR<CompetenciaUpdateInput, CompetenciaUncheckedUpdateInput>
    /**
     * Choose, which Competencia to update.
     */
    where: CompetenciaWhereUniqueInput
  }

  /**
   * Competencia updateMany
   */
  export type CompetenciaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Competencias.
     */
    data: XOR<CompetenciaUpdateManyMutationInput, CompetenciaUncheckedUpdateManyInput>
    /**
     * Filter which Competencias to update
     */
    where?: CompetenciaWhereInput
  }

  /**
   * Competencia upsert
   */
  export type CompetenciaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Competencia
     */
    select?: CompetenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetenciaInclude<ExtArgs> | null
    /**
     * The filter to search for the Competencia to update in case it exists.
     */
    where: CompetenciaWhereUniqueInput
    /**
     * In case the Competencia found by the `where` argument doesn't exist, create a new Competencia with this data.
     */
    create: XOR<CompetenciaCreateInput, CompetenciaUncheckedCreateInput>
    /**
     * In case the Competencia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompetenciaUpdateInput, CompetenciaUncheckedUpdateInput>
  }

  /**
   * Competencia delete
   */
  export type CompetenciaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Competencia
     */
    select?: CompetenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetenciaInclude<ExtArgs> | null
    /**
     * Filter which Competencia to delete.
     */
    where: CompetenciaWhereUniqueInput
  }

  /**
   * Competencia deleteMany
   */
  export type CompetenciaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Competencias to delete
     */
    where?: CompetenciaWhereInput
  }

  /**
   * Competencia.perguntafichaavaliacao
   */
  export type Competencia$perguntafichaavaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PerguntaFichaAvaliacao
     */
    select?: PerguntaFichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PerguntaFichaAvaliacaoInclude<ExtArgs> | null
    where?: PerguntaFichaAvaliacaoWhereInput
    orderBy?: PerguntaFichaAvaliacaoOrderByWithRelationInput | PerguntaFichaAvaliacaoOrderByWithRelationInput[]
    cursor?: PerguntaFichaAvaliacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PerguntaFichaAvaliacaoScalarFieldEnum | PerguntaFichaAvaliacaoScalarFieldEnum[]
  }

  /**
   * Competencia without action
   */
  export type CompetenciaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Competencia
     */
    select?: CompetenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetenciaInclude<ExtArgs> | null
  }


  /**
   * Model PerguntaFichaAvaliacao
   */

  export type AggregatePerguntaFichaAvaliacao = {
    _count: PerguntaFichaAvaliacaoCountAggregateOutputType | null
    _avg: PerguntaFichaAvaliacaoAvgAggregateOutputType | null
    _sum: PerguntaFichaAvaliacaoSumAggregateOutputType | null
    _min: PerguntaFichaAvaliacaoMinAggregateOutputType | null
    _max: PerguntaFichaAvaliacaoMaxAggregateOutputType | null
  }

  export type PerguntaFichaAvaliacaoAvgAggregateOutputType = {
    id: number | null
    competenciaId: number | null
    fichaAvaliacaoId: number | null
    nivel_esperado: number | null
  }

  export type PerguntaFichaAvaliacaoSumAggregateOutputType = {
    id: number | null
    competenciaId: number | null
    fichaAvaliacaoId: number | null
    nivel_esperado: number | null
  }

  export type PerguntaFichaAvaliacaoMinAggregateOutputType = {
    id: number | null
    competenciaId: number | null
    fichaAvaliacaoId: number | null
    descricao: string | null
    nivel_esperado: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PerguntaFichaAvaliacaoMaxAggregateOutputType = {
    id: number | null
    competenciaId: number | null
    fichaAvaliacaoId: number | null
    descricao: string | null
    nivel_esperado: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PerguntaFichaAvaliacaoCountAggregateOutputType = {
    id: number
    competenciaId: number
    fichaAvaliacaoId: number
    descricao: number
    nivel_esperado: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PerguntaFichaAvaliacaoAvgAggregateInputType = {
    id?: true
    competenciaId?: true
    fichaAvaliacaoId?: true
    nivel_esperado?: true
  }

  export type PerguntaFichaAvaliacaoSumAggregateInputType = {
    id?: true
    competenciaId?: true
    fichaAvaliacaoId?: true
    nivel_esperado?: true
  }

  export type PerguntaFichaAvaliacaoMinAggregateInputType = {
    id?: true
    competenciaId?: true
    fichaAvaliacaoId?: true
    descricao?: true
    nivel_esperado?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PerguntaFichaAvaliacaoMaxAggregateInputType = {
    id?: true
    competenciaId?: true
    fichaAvaliacaoId?: true
    descricao?: true
    nivel_esperado?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PerguntaFichaAvaliacaoCountAggregateInputType = {
    id?: true
    competenciaId?: true
    fichaAvaliacaoId?: true
    descricao?: true
    nivel_esperado?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PerguntaFichaAvaliacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PerguntaFichaAvaliacao to aggregate.
     */
    where?: PerguntaFichaAvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PerguntaFichaAvaliacaos to fetch.
     */
    orderBy?: PerguntaFichaAvaliacaoOrderByWithRelationInput | PerguntaFichaAvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PerguntaFichaAvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PerguntaFichaAvaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PerguntaFichaAvaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PerguntaFichaAvaliacaos
    **/
    _count?: true | PerguntaFichaAvaliacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PerguntaFichaAvaliacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PerguntaFichaAvaliacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PerguntaFichaAvaliacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PerguntaFichaAvaliacaoMaxAggregateInputType
  }

  export type GetPerguntaFichaAvaliacaoAggregateType<T extends PerguntaFichaAvaliacaoAggregateArgs> = {
        [P in keyof T & keyof AggregatePerguntaFichaAvaliacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePerguntaFichaAvaliacao[P]>
      : GetScalarType<T[P], AggregatePerguntaFichaAvaliacao[P]>
  }




  export type PerguntaFichaAvaliacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PerguntaFichaAvaliacaoWhereInput
    orderBy?: PerguntaFichaAvaliacaoOrderByWithAggregationInput | PerguntaFichaAvaliacaoOrderByWithAggregationInput[]
    by: PerguntaFichaAvaliacaoScalarFieldEnum[] | PerguntaFichaAvaliacaoScalarFieldEnum
    having?: PerguntaFichaAvaliacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PerguntaFichaAvaliacaoCountAggregateInputType | true
    _avg?: PerguntaFichaAvaliacaoAvgAggregateInputType
    _sum?: PerguntaFichaAvaliacaoSumAggregateInputType
    _min?: PerguntaFichaAvaliacaoMinAggregateInputType
    _max?: PerguntaFichaAvaliacaoMaxAggregateInputType
  }

  export type PerguntaFichaAvaliacaoGroupByOutputType = {
    id: number
    competenciaId: number | null
    fichaAvaliacaoId: number | null
    descricao: string
    nivel_esperado: number
    createdAt: Date
    updatedAt: Date
    _count: PerguntaFichaAvaliacaoCountAggregateOutputType | null
    _avg: PerguntaFichaAvaliacaoAvgAggregateOutputType | null
    _sum: PerguntaFichaAvaliacaoSumAggregateOutputType | null
    _min: PerguntaFichaAvaliacaoMinAggregateOutputType | null
    _max: PerguntaFichaAvaliacaoMaxAggregateOutputType | null
  }

  type GetPerguntaFichaAvaliacaoGroupByPayload<T extends PerguntaFichaAvaliacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PerguntaFichaAvaliacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PerguntaFichaAvaliacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PerguntaFichaAvaliacaoGroupByOutputType[P]>
            : GetScalarType<T[P], PerguntaFichaAvaliacaoGroupByOutputType[P]>
        }
      >
    >


  export type PerguntaFichaAvaliacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    competenciaId?: boolean
    fichaAvaliacaoId?: boolean
    descricao?: boolean
    nivel_esperado?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Competencia?: boolean | PerguntaFichaAvaliacao$CompetenciaArgs<ExtArgs>
    FichaAvaliacao?: boolean | PerguntaFichaAvaliacao$FichaAvaliacaoArgs<ExtArgs>
  }, ExtArgs["result"]["perguntaFichaAvaliacao"]>

  export type PerguntaFichaAvaliacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    competenciaId?: boolean
    fichaAvaliacaoId?: boolean
    descricao?: boolean
    nivel_esperado?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Competencia?: boolean | PerguntaFichaAvaliacao$CompetenciaArgs<ExtArgs>
    FichaAvaliacao?: boolean | PerguntaFichaAvaliacao$FichaAvaliacaoArgs<ExtArgs>
  }, ExtArgs["result"]["perguntaFichaAvaliacao"]>

  export type PerguntaFichaAvaliacaoSelectScalar = {
    id?: boolean
    competenciaId?: boolean
    fichaAvaliacaoId?: boolean
    descricao?: boolean
    nivel_esperado?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PerguntaFichaAvaliacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Competencia?: boolean | PerguntaFichaAvaliacao$CompetenciaArgs<ExtArgs>
    FichaAvaliacao?: boolean | PerguntaFichaAvaliacao$FichaAvaliacaoArgs<ExtArgs>
  }
  export type PerguntaFichaAvaliacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Competencia?: boolean | PerguntaFichaAvaliacao$CompetenciaArgs<ExtArgs>
    FichaAvaliacao?: boolean | PerguntaFichaAvaliacao$FichaAvaliacaoArgs<ExtArgs>
  }

  export type $PerguntaFichaAvaliacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PerguntaFichaAvaliacao"
    objects: {
      Competencia: Prisma.$CompetenciaPayload<ExtArgs> | null
      FichaAvaliacao: Prisma.$FichaAvaliacaoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      competenciaId: number | null
      fichaAvaliacaoId: number | null
      descricao: string
      nivel_esperado: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["perguntaFichaAvaliacao"]>
    composites: {}
  }

  type PerguntaFichaAvaliacaoGetPayload<S extends boolean | null | undefined | PerguntaFichaAvaliacaoDefaultArgs> = $Result.GetResult<Prisma.$PerguntaFichaAvaliacaoPayload, S>

  type PerguntaFichaAvaliacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PerguntaFichaAvaliacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PerguntaFichaAvaliacaoCountAggregateInputType | true
    }

  export interface PerguntaFichaAvaliacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PerguntaFichaAvaliacao'], meta: { name: 'PerguntaFichaAvaliacao' } }
    /**
     * Find zero or one PerguntaFichaAvaliacao that matches the filter.
     * @param {PerguntaFichaAvaliacaoFindUniqueArgs} args - Arguments to find a PerguntaFichaAvaliacao
     * @example
     * // Get one PerguntaFichaAvaliacao
     * const perguntaFichaAvaliacao = await prisma.perguntaFichaAvaliacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends PerguntaFichaAvaliacaoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, PerguntaFichaAvaliacaoFindUniqueArgs<ExtArgs>>
    ): Prisma__PerguntaFichaAvaliacaoClient<$Result.GetResult<Prisma.$PerguntaFichaAvaliacaoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one PerguntaFichaAvaliacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PerguntaFichaAvaliacaoFindUniqueOrThrowArgs} args - Arguments to find a PerguntaFichaAvaliacao
     * @example
     * // Get one PerguntaFichaAvaliacao
     * const perguntaFichaAvaliacao = await prisma.perguntaFichaAvaliacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends PerguntaFichaAvaliacaoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, PerguntaFichaAvaliacaoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__PerguntaFichaAvaliacaoClient<$Result.GetResult<Prisma.$PerguntaFichaAvaliacaoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first PerguntaFichaAvaliacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PerguntaFichaAvaliacaoFindFirstArgs} args - Arguments to find a PerguntaFichaAvaliacao
     * @example
     * // Get one PerguntaFichaAvaliacao
     * const perguntaFichaAvaliacao = await prisma.perguntaFichaAvaliacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends PerguntaFichaAvaliacaoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, PerguntaFichaAvaliacaoFindFirstArgs<ExtArgs>>
    ): Prisma__PerguntaFichaAvaliacaoClient<$Result.GetResult<Prisma.$PerguntaFichaAvaliacaoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first PerguntaFichaAvaliacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PerguntaFichaAvaliacaoFindFirstOrThrowArgs} args - Arguments to find a PerguntaFichaAvaliacao
     * @example
     * // Get one PerguntaFichaAvaliacao
     * const perguntaFichaAvaliacao = await prisma.perguntaFichaAvaliacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends PerguntaFichaAvaliacaoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, PerguntaFichaAvaliacaoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__PerguntaFichaAvaliacaoClient<$Result.GetResult<Prisma.$PerguntaFichaAvaliacaoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more PerguntaFichaAvaliacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PerguntaFichaAvaliacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PerguntaFichaAvaliacaos
     * const perguntaFichaAvaliacaos = await prisma.perguntaFichaAvaliacao.findMany()
     * 
     * // Get first 10 PerguntaFichaAvaliacaos
     * const perguntaFichaAvaliacaos = await prisma.perguntaFichaAvaliacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const perguntaFichaAvaliacaoWithIdOnly = await prisma.perguntaFichaAvaliacao.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends PerguntaFichaAvaliacaoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, PerguntaFichaAvaliacaoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PerguntaFichaAvaliacaoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a PerguntaFichaAvaliacao.
     * @param {PerguntaFichaAvaliacaoCreateArgs} args - Arguments to create a PerguntaFichaAvaliacao.
     * @example
     * // Create one PerguntaFichaAvaliacao
     * const PerguntaFichaAvaliacao = await prisma.perguntaFichaAvaliacao.create({
     *   data: {
     *     // ... data to create a PerguntaFichaAvaliacao
     *   }
     * })
     * 
    **/
    create<T extends PerguntaFichaAvaliacaoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, PerguntaFichaAvaliacaoCreateArgs<ExtArgs>>
    ): Prisma__PerguntaFichaAvaliacaoClient<$Result.GetResult<Prisma.$PerguntaFichaAvaliacaoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many PerguntaFichaAvaliacaos.
     * @param {PerguntaFichaAvaliacaoCreateManyArgs} args - Arguments to create many PerguntaFichaAvaliacaos.
     * @example
     * // Create many PerguntaFichaAvaliacaos
     * const perguntaFichaAvaliacao = await prisma.perguntaFichaAvaliacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends PerguntaFichaAvaliacaoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, PerguntaFichaAvaliacaoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PerguntaFichaAvaliacaos and returns the data saved in the database.
     * @param {PerguntaFichaAvaliacaoCreateManyAndReturnArgs} args - Arguments to create many PerguntaFichaAvaliacaos.
     * @example
     * // Create many PerguntaFichaAvaliacaos
     * const perguntaFichaAvaliacao = await prisma.perguntaFichaAvaliacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PerguntaFichaAvaliacaos and only return the `id`
     * const perguntaFichaAvaliacaoWithIdOnly = await prisma.perguntaFichaAvaliacao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends PerguntaFichaAvaliacaoCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, PerguntaFichaAvaliacaoCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PerguntaFichaAvaliacaoPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a PerguntaFichaAvaliacao.
     * @param {PerguntaFichaAvaliacaoDeleteArgs} args - Arguments to delete one PerguntaFichaAvaliacao.
     * @example
     * // Delete one PerguntaFichaAvaliacao
     * const PerguntaFichaAvaliacao = await prisma.perguntaFichaAvaliacao.delete({
     *   where: {
     *     // ... filter to delete one PerguntaFichaAvaliacao
     *   }
     * })
     * 
    **/
    delete<T extends PerguntaFichaAvaliacaoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, PerguntaFichaAvaliacaoDeleteArgs<ExtArgs>>
    ): Prisma__PerguntaFichaAvaliacaoClient<$Result.GetResult<Prisma.$PerguntaFichaAvaliacaoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one PerguntaFichaAvaliacao.
     * @param {PerguntaFichaAvaliacaoUpdateArgs} args - Arguments to update one PerguntaFichaAvaliacao.
     * @example
     * // Update one PerguntaFichaAvaliacao
     * const perguntaFichaAvaliacao = await prisma.perguntaFichaAvaliacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends PerguntaFichaAvaliacaoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, PerguntaFichaAvaliacaoUpdateArgs<ExtArgs>>
    ): Prisma__PerguntaFichaAvaliacaoClient<$Result.GetResult<Prisma.$PerguntaFichaAvaliacaoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more PerguntaFichaAvaliacaos.
     * @param {PerguntaFichaAvaliacaoDeleteManyArgs} args - Arguments to filter PerguntaFichaAvaliacaos to delete.
     * @example
     * // Delete a few PerguntaFichaAvaliacaos
     * const { count } = await prisma.perguntaFichaAvaliacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends PerguntaFichaAvaliacaoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, PerguntaFichaAvaliacaoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PerguntaFichaAvaliacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PerguntaFichaAvaliacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PerguntaFichaAvaliacaos
     * const perguntaFichaAvaliacao = await prisma.perguntaFichaAvaliacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends PerguntaFichaAvaliacaoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, PerguntaFichaAvaliacaoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PerguntaFichaAvaliacao.
     * @param {PerguntaFichaAvaliacaoUpsertArgs} args - Arguments to update or create a PerguntaFichaAvaliacao.
     * @example
     * // Update or create a PerguntaFichaAvaliacao
     * const perguntaFichaAvaliacao = await prisma.perguntaFichaAvaliacao.upsert({
     *   create: {
     *     // ... data to create a PerguntaFichaAvaliacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PerguntaFichaAvaliacao we want to update
     *   }
     * })
    **/
    upsert<T extends PerguntaFichaAvaliacaoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, PerguntaFichaAvaliacaoUpsertArgs<ExtArgs>>
    ): Prisma__PerguntaFichaAvaliacaoClient<$Result.GetResult<Prisma.$PerguntaFichaAvaliacaoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of PerguntaFichaAvaliacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PerguntaFichaAvaliacaoCountArgs} args - Arguments to filter PerguntaFichaAvaliacaos to count.
     * @example
     * // Count the number of PerguntaFichaAvaliacaos
     * const count = await prisma.perguntaFichaAvaliacao.count({
     *   where: {
     *     // ... the filter for the PerguntaFichaAvaliacaos we want to count
     *   }
     * })
    **/
    count<T extends PerguntaFichaAvaliacaoCountArgs>(
      args?: Subset<T, PerguntaFichaAvaliacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PerguntaFichaAvaliacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PerguntaFichaAvaliacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PerguntaFichaAvaliacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PerguntaFichaAvaliacaoAggregateArgs>(args: Subset<T, PerguntaFichaAvaliacaoAggregateArgs>): Prisma.PrismaPromise<GetPerguntaFichaAvaliacaoAggregateType<T>>

    /**
     * Group by PerguntaFichaAvaliacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PerguntaFichaAvaliacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PerguntaFichaAvaliacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PerguntaFichaAvaliacaoGroupByArgs['orderBy'] }
        : { orderBy?: PerguntaFichaAvaliacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PerguntaFichaAvaliacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPerguntaFichaAvaliacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PerguntaFichaAvaliacao model
   */
  readonly fields: PerguntaFichaAvaliacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PerguntaFichaAvaliacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PerguntaFichaAvaliacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Competencia<T extends PerguntaFichaAvaliacao$CompetenciaArgs<ExtArgs> = {}>(args?: Subset<T, PerguntaFichaAvaliacao$CompetenciaArgs<ExtArgs>>): Prisma__CompetenciaClient<$Result.GetResult<Prisma.$CompetenciaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    FichaAvaliacao<T extends PerguntaFichaAvaliacao$FichaAvaliacaoArgs<ExtArgs> = {}>(args?: Subset<T, PerguntaFichaAvaliacao$FichaAvaliacaoArgs<ExtArgs>>): Prisma__FichaAvaliacaoClient<$Result.GetResult<Prisma.$FichaAvaliacaoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the PerguntaFichaAvaliacao model
   */ 
  interface PerguntaFichaAvaliacaoFieldRefs {
    readonly id: FieldRef<"PerguntaFichaAvaliacao", 'Int'>
    readonly competenciaId: FieldRef<"PerguntaFichaAvaliacao", 'Int'>
    readonly fichaAvaliacaoId: FieldRef<"PerguntaFichaAvaliacao", 'Int'>
    readonly descricao: FieldRef<"PerguntaFichaAvaliacao", 'String'>
    readonly nivel_esperado: FieldRef<"PerguntaFichaAvaliacao", 'Int'>
    readonly createdAt: FieldRef<"PerguntaFichaAvaliacao", 'DateTime'>
    readonly updatedAt: FieldRef<"PerguntaFichaAvaliacao", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PerguntaFichaAvaliacao findUnique
   */
  export type PerguntaFichaAvaliacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PerguntaFichaAvaliacao
     */
    select?: PerguntaFichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PerguntaFichaAvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which PerguntaFichaAvaliacao to fetch.
     */
    where: PerguntaFichaAvaliacaoWhereUniqueInput
  }

  /**
   * PerguntaFichaAvaliacao findUniqueOrThrow
   */
  export type PerguntaFichaAvaliacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PerguntaFichaAvaliacao
     */
    select?: PerguntaFichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PerguntaFichaAvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which PerguntaFichaAvaliacao to fetch.
     */
    where: PerguntaFichaAvaliacaoWhereUniqueInput
  }

  /**
   * PerguntaFichaAvaliacao findFirst
   */
  export type PerguntaFichaAvaliacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PerguntaFichaAvaliacao
     */
    select?: PerguntaFichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PerguntaFichaAvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which PerguntaFichaAvaliacao to fetch.
     */
    where?: PerguntaFichaAvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PerguntaFichaAvaliacaos to fetch.
     */
    orderBy?: PerguntaFichaAvaliacaoOrderByWithRelationInput | PerguntaFichaAvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PerguntaFichaAvaliacaos.
     */
    cursor?: PerguntaFichaAvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PerguntaFichaAvaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PerguntaFichaAvaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PerguntaFichaAvaliacaos.
     */
    distinct?: PerguntaFichaAvaliacaoScalarFieldEnum | PerguntaFichaAvaliacaoScalarFieldEnum[]
  }

  /**
   * PerguntaFichaAvaliacao findFirstOrThrow
   */
  export type PerguntaFichaAvaliacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PerguntaFichaAvaliacao
     */
    select?: PerguntaFichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PerguntaFichaAvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which PerguntaFichaAvaliacao to fetch.
     */
    where?: PerguntaFichaAvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PerguntaFichaAvaliacaos to fetch.
     */
    orderBy?: PerguntaFichaAvaliacaoOrderByWithRelationInput | PerguntaFichaAvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PerguntaFichaAvaliacaos.
     */
    cursor?: PerguntaFichaAvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PerguntaFichaAvaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PerguntaFichaAvaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PerguntaFichaAvaliacaos.
     */
    distinct?: PerguntaFichaAvaliacaoScalarFieldEnum | PerguntaFichaAvaliacaoScalarFieldEnum[]
  }

  /**
   * PerguntaFichaAvaliacao findMany
   */
  export type PerguntaFichaAvaliacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PerguntaFichaAvaliacao
     */
    select?: PerguntaFichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PerguntaFichaAvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which PerguntaFichaAvaliacaos to fetch.
     */
    where?: PerguntaFichaAvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PerguntaFichaAvaliacaos to fetch.
     */
    orderBy?: PerguntaFichaAvaliacaoOrderByWithRelationInput | PerguntaFichaAvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PerguntaFichaAvaliacaos.
     */
    cursor?: PerguntaFichaAvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PerguntaFichaAvaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PerguntaFichaAvaliacaos.
     */
    skip?: number
    distinct?: PerguntaFichaAvaliacaoScalarFieldEnum | PerguntaFichaAvaliacaoScalarFieldEnum[]
  }

  /**
   * PerguntaFichaAvaliacao create
   */
  export type PerguntaFichaAvaliacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PerguntaFichaAvaliacao
     */
    select?: PerguntaFichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PerguntaFichaAvaliacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a PerguntaFichaAvaliacao.
     */
    data: XOR<PerguntaFichaAvaliacaoCreateInput, PerguntaFichaAvaliacaoUncheckedCreateInput>
  }

  /**
   * PerguntaFichaAvaliacao createMany
   */
  export type PerguntaFichaAvaliacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PerguntaFichaAvaliacaos.
     */
    data: PerguntaFichaAvaliacaoCreateManyInput | PerguntaFichaAvaliacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PerguntaFichaAvaliacao createManyAndReturn
   */
  export type PerguntaFichaAvaliacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PerguntaFichaAvaliacao
     */
    select?: PerguntaFichaAvaliacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PerguntaFichaAvaliacaos.
     */
    data: PerguntaFichaAvaliacaoCreateManyInput | PerguntaFichaAvaliacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PerguntaFichaAvaliacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PerguntaFichaAvaliacao update
   */
  export type PerguntaFichaAvaliacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PerguntaFichaAvaliacao
     */
    select?: PerguntaFichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PerguntaFichaAvaliacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a PerguntaFichaAvaliacao.
     */
    data: XOR<PerguntaFichaAvaliacaoUpdateInput, PerguntaFichaAvaliacaoUncheckedUpdateInput>
    /**
     * Choose, which PerguntaFichaAvaliacao to update.
     */
    where: PerguntaFichaAvaliacaoWhereUniqueInput
  }

  /**
   * PerguntaFichaAvaliacao updateMany
   */
  export type PerguntaFichaAvaliacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PerguntaFichaAvaliacaos.
     */
    data: XOR<PerguntaFichaAvaliacaoUpdateManyMutationInput, PerguntaFichaAvaliacaoUncheckedUpdateManyInput>
    /**
     * Filter which PerguntaFichaAvaliacaos to update
     */
    where?: PerguntaFichaAvaliacaoWhereInput
  }

  /**
   * PerguntaFichaAvaliacao upsert
   */
  export type PerguntaFichaAvaliacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PerguntaFichaAvaliacao
     */
    select?: PerguntaFichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PerguntaFichaAvaliacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the PerguntaFichaAvaliacao to update in case it exists.
     */
    where: PerguntaFichaAvaliacaoWhereUniqueInput
    /**
     * In case the PerguntaFichaAvaliacao found by the `where` argument doesn't exist, create a new PerguntaFichaAvaliacao with this data.
     */
    create: XOR<PerguntaFichaAvaliacaoCreateInput, PerguntaFichaAvaliacaoUncheckedCreateInput>
    /**
     * In case the PerguntaFichaAvaliacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PerguntaFichaAvaliacaoUpdateInput, PerguntaFichaAvaliacaoUncheckedUpdateInput>
  }

  /**
   * PerguntaFichaAvaliacao delete
   */
  export type PerguntaFichaAvaliacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PerguntaFichaAvaliacao
     */
    select?: PerguntaFichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PerguntaFichaAvaliacaoInclude<ExtArgs> | null
    /**
     * Filter which PerguntaFichaAvaliacao to delete.
     */
    where: PerguntaFichaAvaliacaoWhereUniqueInput
  }

  /**
   * PerguntaFichaAvaliacao deleteMany
   */
  export type PerguntaFichaAvaliacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PerguntaFichaAvaliacaos to delete
     */
    where?: PerguntaFichaAvaliacaoWhereInput
  }

  /**
   * PerguntaFichaAvaliacao.Competencia
   */
  export type PerguntaFichaAvaliacao$CompetenciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Competencia
     */
    select?: CompetenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetenciaInclude<ExtArgs> | null
    where?: CompetenciaWhereInput
  }

  /**
   * PerguntaFichaAvaliacao.FichaAvaliacao
   */
  export type PerguntaFichaAvaliacao$FichaAvaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FichaAvaliacao
     */
    select?: FichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FichaAvaliacaoInclude<ExtArgs> | null
    where?: FichaAvaliacaoWhereInput
  }

  /**
   * PerguntaFichaAvaliacao without action
   */
  export type PerguntaFichaAvaliacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PerguntaFichaAvaliacao
     */
    select?: PerguntaFichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PerguntaFichaAvaliacaoInclude<ExtArgs> | null
  }


  /**
   * Model Avaliacao
   */

  export type AggregateAvaliacao = {
    _count: AvaliacaoCountAggregateOutputType | null
    _avg: AvaliacaoAvgAggregateOutputType | null
    _sum: AvaliacaoSumAggregateOutputType | null
    _min: AvaliacaoMinAggregateOutputType | null
    _max: AvaliacaoMaxAggregateOutputType | null
  }

  export type AvaliacaoAvgAggregateOutputType = {
    id: number | null
    id_funcionario_avaliador: number | null
    id_fichaAvaliacao: number | null
    id_departamento: number | null
  }

  export type AvaliacaoSumAggregateOutputType = {
    id: number | null
    id_funcionario_avaliador: number | null
    id_fichaAvaliacao: number | null
    id_departamento: number | null
  }

  export type AvaliacaoMinAggregateOutputType = {
    id: number | null
    id_funcionario_avaliador: number | null
    id_fichaAvaliacao: number | null
    id_departamento: number | null
    Tipo_Avaliacao: $Enums.TipoAvaliacao | null
    status: $Enums.Status | null
    data: Date | null
    comentario: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AvaliacaoMaxAggregateOutputType = {
    id: number | null
    id_funcionario_avaliador: number | null
    id_fichaAvaliacao: number | null
    id_departamento: number | null
    Tipo_Avaliacao: $Enums.TipoAvaliacao | null
    status: $Enums.Status | null
    data: Date | null
    comentario: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AvaliacaoCountAggregateOutputType = {
    id: number
    id_funcionario_avaliador: number
    id_fichaAvaliacao: number
    id_departamento: number
    Tipo_Avaliacao: number
    status: number
    data: number
    comentario: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AvaliacaoAvgAggregateInputType = {
    id?: true
    id_funcionario_avaliador?: true
    id_fichaAvaliacao?: true
    id_departamento?: true
  }

  export type AvaliacaoSumAggregateInputType = {
    id?: true
    id_funcionario_avaliador?: true
    id_fichaAvaliacao?: true
    id_departamento?: true
  }

  export type AvaliacaoMinAggregateInputType = {
    id?: true
    id_funcionario_avaliador?: true
    id_fichaAvaliacao?: true
    id_departamento?: true
    Tipo_Avaliacao?: true
    status?: true
    data?: true
    comentario?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AvaliacaoMaxAggregateInputType = {
    id?: true
    id_funcionario_avaliador?: true
    id_fichaAvaliacao?: true
    id_departamento?: true
    Tipo_Avaliacao?: true
    status?: true
    data?: true
    comentario?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AvaliacaoCountAggregateInputType = {
    id?: true
    id_funcionario_avaliador?: true
    id_fichaAvaliacao?: true
    id_departamento?: true
    Tipo_Avaliacao?: true
    status?: true
    data?: true
    comentario?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AvaliacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Avaliacao to aggregate.
     */
    where?: AvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avaliacaos to fetch.
     */
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Avaliacaos
    **/
    _count?: true | AvaliacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AvaliacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AvaliacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AvaliacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AvaliacaoMaxAggregateInputType
  }

  export type GetAvaliacaoAggregateType<T extends AvaliacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateAvaliacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAvaliacao[P]>
      : GetScalarType<T[P], AggregateAvaliacao[P]>
  }




  export type AvaliacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliacaoWhereInput
    orderBy?: AvaliacaoOrderByWithAggregationInput | AvaliacaoOrderByWithAggregationInput[]
    by: AvaliacaoScalarFieldEnum[] | AvaliacaoScalarFieldEnum
    having?: AvaliacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AvaliacaoCountAggregateInputType | true
    _avg?: AvaliacaoAvgAggregateInputType
    _sum?: AvaliacaoSumAggregateInputType
    _min?: AvaliacaoMinAggregateInputType
    _max?: AvaliacaoMaxAggregateInputType
  }

  export type AvaliacaoGroupByOutputType = {
    id: number
    id_funcionario_avaliador: number | null
    id_fichaAvaliacao: number | null
    id_departamento: number | null
    Tipo_Avaliacao: $Enums.TipoAvaliacao
    status: $Enums.Status
    data: Date
    comentario: string | null
    createdAt: Date
    updatedAt: Date
    _count: AvaliacaoCountAggregateOutputType | null
    _avg: AvaliacaoAvgAggregateOutputType | null
    _sum: AvaliacaoSumAggregateOutputType | null
    _min: AvaliacaoMinAggregateOutputType | null
    _max: AvaliacaoMaxAggregateOutputType | null
  }

  type GetAvaliacaoGroupByPayload<T extends AvaliacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AvaliacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AvaliacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AvaliacaoGroupByOutputType[P]>
            : GetScalarType<T[P], AvaliacaoGroupByOutputType[P]>
        }
      >
    >


  export type AvaliacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_funcionario_avaliador?: boolean
    id_fichaAvaliacao?: boolean
    id_departamento?: boolean
    Tipo_Avaliacao?: boolean
    status?: boolean
    data?: boolean
    comentario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Funcionario?: boolean | Avaliacao$FuncionarioArgs<ExtArgs>
    FichaAvaliacao?: boolean | Avaliacao$FichaAvaliacaoArgs<ExtArgs>
    Departamento?: boolean | Avaliacao$DepartamentoArgs<ExtArgs>
  }, ExtArgs["result"]["avaliacao"]>

  export type AvaliacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_funcionario_avaliador?: boolean
    id_fichaAvaliacao?: boolean
    id_departamento?: boolean
    Tipo_Avaliacao?: boolean
    status?: boolean
    data?: boolean
    comentario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Funcionario?: boolean | Avaliacao$FuncionarioArgs<ExtArgs>
    FichaAvaliacao?: boolean | Avaliacao$FichaAvaliacaoArgs<ExtArgs>
    Departamento?: boolean | Avaliacao$DepartamentoArgs<ExtArgs>
  }, ExtArgs["result"]["avaliacao"]>

  export type AvaliacaoSelectScalar = {
    id?: boolean
    id_funcionario_avaliador?: boolean
    id_fichaAvaliacao?: boolean
    id_departamento?: boolean
    Tipo_Avaliacao?: boolean
    status?: boolean
    data?: boolean
    comentario?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AvaliacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Funcionario?: boolean | Avaliacao$FuncionarioArgs<ExtArgs>
    FichaAvaliacao?: boolean | Avaliacao$FichaAvaliacaoArgs<ExtArgs>
    Departamento?: boolean | Avaliacao$DepartamentoArgs<ExtArgs>
  }
  export type AvaliacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Funcionario?: boolean | Avaliacao$FuncionarioArgs<ExtArgs>
    FichaAvaliacao?: boolean | Avaliacao$FichaAvaliacaoArgs<ExtArgs>
    Departamento?: boolean | Avaliacao$DepartamentoArgs<ExtArgs>
  }

  export type $AvaliacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Avaliacao"
    objects: {
      Funcionario: Prisma.$FuncionarioPayload<ExtArgs> | null
      FichaAvaliacao: Prisma.$FichaAvaliacaoPayload<ExtArgs> | null
      Departamento: Prisma.$DepartamentoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_funcionario_avaliador: number | null
      id_fichaAvaliacao: number | null
      id_departamento: number | null
      Tipo_Avaliacao: $Enums.TipoAvaliacao
      status: $Enums.Status
      data: Date
      comentario: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["avaliacao"]>
    composites: {}
  }

  type AvaliacaoGetPayload<S extends boolean | null | undefined | AvaliacaoDefaultArgs> = $Result.GetResult<Prisma.$AvaliacaoPayload, S>

  type AvaliacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AvaliacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AvaliacaoCountAggregateInputType | true
    }

  export interface AvaliacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Avaliacao'], meta: { name: 'Avaliacao' } }
    /**
     * Find zero or one Avaliacao that matches the filter.
     * @param {AvaliacaoFindUniqueArgs} args - Arguments to find a Avaliacao
     * @example
     * // Get one Avaliacao
     * const avaliacao = await prisma.avaliacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends AvaliacaoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, AvaliacaoFindUniqueArgs<ExtArgs>>
    ): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Avaliacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AvaliacaoFindUniqueOrThrowArgs} args - Arguments to find a Avaliacao
     * @example
     * // Get one Avaliacao
     * const avaliacao = await prisma.avaliacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends AvaliacaoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AvaliacaoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Avaliacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoFindFirstArgs} args - Arguments to find a Avaliacao
     * @example
     * // Get one Avaliacao
     * const avaliacao = await prisma.avaliacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends AvaliacaoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, AvaliacaoFindFirstArgs<ExtArgs>>
    ): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Avaliacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoFindFirstOrThrowArgs} args - Arguments to find a Avaliacao
     * @example
     * // Get one Avaliacao
     * const avaliacao = await prisma.avaliacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends AvaliacaoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AvaliacaoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Avaliacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Avaliacaos
     * const avaliacaos = await prisma.avaliacao.findMany()
     * 
     * // Get first 10 Avaliacaos
     * const avaliacaos = await prisma.avaliacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const avaliacaoWithIdOnly = await prisma.avaliacao.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends AvaliacaoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AvaliacaoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Avaliacao.
     * @param {AvaliacaoCreateArgs} args - Arguments to create a Avaliacao.
     * @example
     * // Create one Avaliacao
     * const Avaliacao = await prisma.avaliacao.create({
     *   data: {
     *     // ... data to create a Avaliacao
     *   }
     * })
     * 
    **/
    create<T extends AvaliacaoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, AvaliacaoCreateArgs<ExtArgs>>
    ): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Avaliacaos.
     * @param {AvaliacaoCreateManyArgs} args - Arguments to create many Avaliacaos.
     * @example
     * // Create many Avaliacaos
     * const avaliacao = await prisma.avaliacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends AvaliacaoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AvaliacaoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Avaliacaos and returns the data saved in the database.
     * @param {AvaliacaoCreateManyAndReturnArgs} args - Arguments to create many Avaliacaos.
     * @example
     * // Create many Avaliacaos
     * const avaliacao = await prisma.avaliacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Avaliacaos and only return the `id`
     * const avaliacaoWithIdOnly = await prisma.avaliacao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends AvaliacaoCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, AvaliacaoCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Avaliacao.
     * @param {AvaliacaoDeleteArgs} args - Arguments to delete one Avaliacao.
     * @example
     * // Delete one Avaliacao
     * const Avaliacao = await prisma.avaliacao.delete({
     *   where: {
     *     // ... filter to delete one Avaliacao
     *   }
     * })
     * 
    **/
    delete<T extends AvaliacaoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, AvaliacaoDeleteArgs<ExtArgs>>
    ): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Avaliacao.
     * @param {AvaliacaoUpdateArgs} args - Arguments to update one Avaliacao.
     * @example
     * // Update one Avaliacao
     * const avaliacao = await prisma.avaliacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends AvaliacaoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, AvaliacaoUpdateArgs<ExtArgs>>
    ): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Avaliacaos.
     * @param {AvaliacaoDeleteManyArgs} args - Arguments to filter Avaliacaos to delete.
     * @example
     * // Delete a few Avaliacaos
     * const { count } = await prisma.avaliacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends AvaliacaoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AvaliacaoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Avaliacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Avaliacaos
     * const avaliacao = await prisma.avaliacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends AvaliacaoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, AvaliacaoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Avaliacao.
     * @param {AvaliacaoUpsertArgs} args - Arguments to update or create a Avaliacao.
     * @example
     * // Update or create a Avaliacao
     * const avaliacao = await prisma.avaliacao.upsert({
     *   create: {
     *     // ... data to create a Avaliacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Avaliacao we want to update
     *   }
     * })
    **/
    upsert<T extends AvaliacaoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, AvaliacaoUpsertArgs<ExtArgs>>
    ): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Avaliacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoCountArgs} args - Arguments to filter Avaliacaos to count.
     * @example
     * // Count the number of Avaliacaos
     * const count = await prisma.avaliacao.count({
     *   where: {
     *     // ... the filter for the Avaliacaos we want to count
     *   }
     * })
    **/
    count<T extends AvaliacaoCountArgs>(
      args?: Subset<T, AvaliacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AvaliacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Avaliacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AvaliacaoAggregateArgs>(args: Subset<T, AvaliacaoAggregateArgs>): Prisma.PrismaPromise<GetAvaliacaoAggregateType<T>>

    /**
     * Group by Avaliacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AvaliacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AvaliacaoGroupByArgs['orderBy'] }
        : { orderBy?: AvaliacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AvaliacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAvaliacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Avaliacao model
   */
  readonly fields: AvaliacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Avaliacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AvaliacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Funcionario<T extends Avaliacao$FuncionarioArgs<ExtArgs> = {}>(args?: Subset<T, Avaliacao$FuncionarioArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    FichaAvaliacao<T extends Avaliacao$FichaAvaliacaoArgs<ExtArgs> = {}>(args?: Subset<T, Avaliacao$FichaAvaliacaoArgs<ExtArgs>>): Prisma__FichaAvaliacaoClient<$Result.GetResult<Prisma.$FichaAvaliacaoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    Departamento<T extends Avaliacao$DepartamentoArgs<ExtArgs> = {}>(args?: Subset<T, Avaliacao$DepartamentoArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Avaliacao model
   */ 
  interface AvaliacaoFieldRefs {
    readonly id: FieldRef<"Avaliacao", 'Int'>
    readonly id_funcionario_avaliador: FieldRef<"Avaliacao", 'Int'>
    readonly id_fichaAvaliacao: FieldRef<"Avaliacao", 'Int'>
    readonly id_departamento: FieldRef<"Avaliacao", 'Int'>
    readonly Tipo_Avaliacao: FieldRef<"Avaliacao", 'TipoAvaliacao'>
    readonly status: FieldRef<"Avaliacao", 'Status'>
    readonly data: FieldRef<"Avaliacao", 'DateTime'>
    readonly comentario: FieldRef<"Avaliacao", 'String'>
    readonly createdAt: FieldRef<"Avaliacao", 'DateTime'>
    readonly updatedAt: FieldRef<"Avaliacao", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Avaliacao findUnique
   */
  export type AvaliacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacao to fetch.
     */
    where: AvaliacaoWhereUniqueInput
  }

  /**
   * Avaliacao findUniqueOrThrow
   */
  export type AvaliacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacao to fetch.
     */
    where: AvaliacaoWhereUniqueInput
  }

  /**
   * Avaliacao findFirst
   */
  export type AvaliacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacao to fetch.
     */
    where?: AvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avaliacaos to fetch.
     */
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Avaliacaos.
     */
    cursor?: AvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Avaliacaos.
     */
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * Avaliacao findFirstOrThrow
   */
  export type AvaliacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacao to fetch.
     */
    where?: AvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avaliacaos to fetch.
     */
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Avaliacaos.
     */
    cursor?: AvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Avaliacaos.
     */
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * Avaliacao findMany
   */
  export type AvaliacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacaos to fetch.
     */
    where?: AvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avaliacaos to fetch.
     */
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Avaliacaos.
     */
    cursor?: AvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avaliacaos.
     */
    skip?: number
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * Avaliacao create
   */
  export type AvaliacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a Avaliacao.
     */
    data: XOR<AvaliacaoCreateInput, AvaliacaoUncheckedCreateInput>
  }

  /**
   * Avaliacao createMany
   */
  export type AvaliacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Avaliacaos.
     */
    data: AvaliacaoCreateManyInput | AvaliacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Avaliacao createManyAndReturn
   */
  export type AvaliacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Avaliacaos.
     */
    data: AvaliacaoCreateManyInput | AvaliacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Avaliacao update
   */
  export type AvaliacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a Avaliacao.
     */
    data: XOR<AvaliacaoUpdateInput, AvaliacaoUncheckedUpdateInput>
    /**
     * Choose, which Avaliacao to update.
     */
    where: AvaliacaoWhereUniqueInput
  }

  /**
   * Avaliacao updateMany
   */
  export type AvaliacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Avaliacaos.
     */
    data: XOR<AvaliacaoUpdateManyMutationInput, AvaliacaoUncheckedUpdateManyInput>
    /**
     * Filter which Avaliacaos to update
     */
    where?: AvaliacaoWhereInput
  }

  /**
   * Avaliacao upsert
   */
  export type AvaliacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the Avaliacao to update in case it exists.
     */
    where: AvaliacaoWhereUniqueInput
    /**
     * In case the Avaliacao found by the `where` argument doesn't exist, create a new Avaliacao with this data.
     */
    create: XOR<AvaliacaoCreateInput, AvaliacaoUncheckedCreateInput>
    /**
     * In case the Avaliacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AvaliacaoUpdateInput, AvaliacaoUncheckedUpdateInput>
  }

  /**
   * Avaliacao delete
   */
  export type AvaliacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter which Avaliacao to delete.
     */
    where: AvaliacaoWhereUniqueInput
  }

  /**
   * Avaliacao deleteMany
   */
  export type AvaliacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Avaliacaos to delete
     */
    where?: AvaliacaoWhereInput
  }

  /**
   * Avaliacao.Funcionario
   */
  export type Avaliacao$FuncionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    where?: FuncionarioWhereInput
  }

  /**
   * Avaliacao.FichaAvaliacao
   */
  export type Avaliacao$FichaAvaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FichaAvaliacao
     */
    select?: FichaAvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FichaAvaliacaoInclude<ExtArgs> | null
    where?: FichaAvaliacaoWhereInput
  }

  /**
   * Avaliacao.Departamento
   */
  export type Avaliacao$DepartamentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    where?: DepartamentoWhereInput
  }

  /**
   * Avaliacao without action
   */
  export type AvaliacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CarreiraScalarFieldEnum: {
    id: 'id',
    nome_carreira: 'nome_carreira',
    regime: 'regime',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CarreiraScalarFieldEnum = (typeof CarreiraScalarFieldEnum)[keyof typeof CarreiraScalarFieldEnum]


  export const SubCarreiraScalarFieldEnum: {
    id: 'id',
    nome_SubCarreira: 'nome_SubCarreira',
    Id_carreira: 'Id_carreira',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SubCarreiraScalarFieldEnum = (typeof SubCarreiraScalarFieldEnum)[keyof typeof SubCarreiraScalarFieldEnum]


  export const CategoriaRHScalarFieldEnum: {
    id: 'id',
    nome_categoria: 'nome_categoria',
    salario_base: 'salario_base',
    Id_carreira: 'Id_carreira',
    Id_subCarreira: 'Id_subCarreira',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CategoriaRHScalarFieldEnum = (typeof CategoriaRHScalarFieldEnum)[keyof typeof CategoriaRHScalarFieldEnum]


  export const FuncaoScalarFieldEnum: {
    id: 'id',
    nome_funcao: 'nome_funcao',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FuncaoScalarFieldEnum = (typeof FuncaoScalarFieldEnum)[keyof typeof FuncaoScalarFieldEnum]


  export const BancoScalarFieldEnum: {
    id: 'id',
    nome_banco: 'nome_banco',
    codigo: 'codigo',
    sigla: 'sigla',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BancoScalarFieldEnum = (typeof BancoScalarFieldEnum)[keyof typeof BancoScalarFieldEnum]


  export const FuncionarioScalarFieldEnum: {
    id: 'id',
    nome_completo: 'nome_completo',
    nome_pai: 'nome_pai',
    nome_mae: 'nome_mae',
    nascimento: 'nascimento',
    email: 'email',
    genero: 'genero',
    tipo_identificacao: 'tipo_identificacao',
    num_identificacao: 'num_identificacao',
    nivel_academico: 'nivel_academico',
    avatar: 'avatar',
    telefone1: 'telefone1',
    telefone2: 'telefone2',
    linkedin: 'linkedin',
    whatsApp: 'whatsApp',
    instagram: 'instagram',
    bairro: 'bairro',
    rua: 'rua',
    id_funcao: 'id_funcao',
    id_categoria: 'id_categoria',
    num_conta: 'num_conta',
    iban: 'iban',
    Id_banco: 'Id_banco',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FuncionarioScalarFieldEnum = (typeof FuncionarioScalarFieldEnum)[keyof typeof FuncionarioScalarFieldEnum]


  export const DadosProfissionaisScalarFieldEnum: {
    id: 'id',
    data_admissao: 'data_admissao',
    numero_despacho: 'numero_despacho',
    data_despacho: 'data_despacho',
    contrato: 'contrato',
    Id_funcionario: 'Id_funcionario',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type DadosProfissionaisScalarFieldEnum = (typeof DadosProfissionaisScalarFieldEnum)[keyof typeof DadosProfissionaisScalarFieldEnum]


  export const FormacoesScalarFieldEnum: {
    id: 'id',
    ano_inicio: 'ano_inicio',
    ano_termino: 'ano_termino',
    formacao: 'formacao',
    pais: 'pais',
    instituicao: 'instituicao',
    Id_funcionario: 'Id_funcionario',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FormacoesScalarFieldEnum = (typeof FormacoesScalarFieldEnum)[keyof typeof FormacoesScalarFieldEnum]


  export const PublicacoesScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    entidade: 'entidade',
    ano: 'ano',
    tipo: 'tipo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PublicacoesScalarFieldEnum = (typeof PublicacoesScalarFieldEnum)[keyof typeof PublicacoesScalarFieldEnum]


  export const ExperiencialLaboralScalarFieldEnum: {
    id: 'id',
    ano_inicio: 'ano_inicio',
    ano_termino: 'ano_termino',
    funcao: 'funcao',
    instituicao: 'instituicao',
    pais: 'pais',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    Id_funcionario: 'Id_funcionario'
  };

  export type ExperiencialLaboralScalarFieldEnum = (typeof ExperiencialLaboralScalarFieldEnum)[keyof typeof ExperiencialLaboralScalarFieldEnum]


  export const DepartamentoScalarFieldEnum: {
    id: 'id',
    nome_departamento: 'nome_departamento',
    Id_funcionario_chefe: 'Id_funcionario_chefe',
    Id_funcionario_supervisor: 'Id_funcionario_supervisor',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type DepartamentoScalarFieldEnum = (typeof DepartamentoScalarFieldEnum)[keyof typeof DepartamentoScalarFieldEnum]


  export const FuncionarioDepartamentoScalarFieldEnum: {
    id: 'id',
    Id_departamento: 'Id_departamento',
    Id_funcionario: 'Id_funcionario',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FuncionarioDepartamentoScalarFieldEnum = (typeof FuncionarioDepartamentoScalarFieldEnum)[keyof typeof FuncionarioDepartamentoScalarFieldEnum]


  export const FichaAvaliacaoScalarFieldEnum: {
    id: 'id',
    nome_ficha: 'nome_ficha',
    objetivo: 'objetivo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FichaAvaliacaoScalarFieldEnum = (typeof FichaAvaliacaoScalarFieldEnum)[keyof typeof FichaAvaliacaoScalarFieldEnum]


  export const CompetenciaScalarFieldEnum: {
    id: 'id',
    nome_competencia: 'nome_competencia',
    criterio: 'criterio',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CompetenciaScalarFieldEnum = (typeof CompetenciaScalarFieldEnum)[keyof typeof CompetenciaScalarFieldEnum]


  export const PerguntaFichaAvaliacaoScalarFieldEnum: {
    id: 'id',
    competenciaId: 'competenciaId',
    fichaAvaliacaoId: 'fichaAvaliacaoId',
    descricao: 'descricao',
    nivel_esperado: 'nivel_esperado',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PerguntaFichaAvaliacaoScalarFieldEnum = (typeof PerguntaFichaAvaliacaoScalarFieldEnum)[keyof typeof PerguntaFichaAvaliacaoScalarFieldEnum]


  export const AvaliacaoScalarFieldEnum: {
    id: 'id',
    id_funcionario_avaliador: 'id_funcionario_avaliador',
    id_fichaAvaliacao: 'id_fichaAvaliacao',
    id_departamento: 'id_departamento',
    Tipo_Avaliacao: 'Tipo_Avaliacao',
    status: 'status',
    data: 'data',
    comentario: 'comentario',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AvaliacaoScalarFieldEnum = (typeof AvaliacaoScalarFieldEnum)[keyof typeof AvaliacaoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Regime'
   */
  export type EnumRegimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Regime'>
    


  /**
   * Reference to a field of type 'Regime[]'
   */
  export type ListEnumRegimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Regime[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Genero'
   */
  export type EnumGeneroFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Genero'>
    


  /**
   * Reference to a field of type 'Genero[]'
   */
  export type ListEnumGeneroFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Genero[]'>
    


  /**
   * Reference to a field of type 'Identificacao'
   */
  export type EnumIdentificacaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Identificacao'>
    


  /**
   * Reference to a field of type 'Identificacao[]'
   */
  export type ListEnumIdentificacaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Identificacao[]'>
    


  /**
   * Reference to a field of type 'NIVEL_ACADEMICO'
   */
  export type EnumNIVEL_ACADEMICOFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NIVEL_ACADEMICO'>
    


  /**
   * Reference to a field of type 'NIVEL_ACADEMICO[]'
   */
  export type ListEnumNIVEL_ACADEMICOFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NIVEL_ACADEMICO[]'>
    


  /**
   * Reference to a field of type 'Contrato'
   */
  export type EnumContratoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Contrato'>
    


  /**
   * Reference to a field of type 'Contrato[]'
   */
  export type ListEnumContratoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Contrato[]'>
    


  /**
   * Reference to a field of type 'Tipo'
   */
  export type EnumTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Tipo'>
    


  /**
   * Reference to a field of type 'Tipo[]'
   */
  export type ListEnumTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Tipo[]'>
    


  /**
   * Reference to a field of type 'Criterio'
   */
  export type EnumCriterioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Criterio'>
    


  /**
   * Reference to a field of type 'Criterio[]'
   */
  export type ListEnumCriterioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Criterio[]'>
    


  /**
   * Reference to a field of type 'TipoAvaliacao'
   */
  export type EnumTipoAvaliacaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoAvaliacao'>
    


  /**
   * Reference to a field of type 'TipoAvaliacao[]'
   */
  export type ListEnumTipoAvaliacaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoAvaliacao[]'>
    


  /**
   * Reference to a field of type 'Status'
   */
  export type EnumStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Status'>
    


  /**
   * Reference to a field of type 'Status[]'
   */
  export type ListEnumStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Status[]'>
    
  /**
   * Deep Input Types
   */


  export type CarreiraWhereInput = {
    AND?: CarreiraWhereInput | CarreiraWhereInput[]
    OR?: CarreiraWhereInput[]
    NOT?: CarreiraWhereInput | CarreiraWhereInput[]
    id?: IntFilter<"Carreira"> | number
    nome_carreira?: StringFilter<"Carreira"> | string
    regime?: EnumRegimeFilter<"Carreira"> | $Enums.Regime
    createdAt?: DateTimeFilter<"Carreira"> | Date | string
    updatedAt?: DateTimeFilter<"Carreira"> | Date | string
    subcarreira?: SubCarreiraListRelationFilter
    cateroria?: CategoriaRHListRelationFilter
  }

  export type CarreiraOrderByWithRelationInput = {
    id?: SortOrder
    nome_carreira?: SortOrder
    regime?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    subcarreira?: SubCarreiraOrderByRelationAggregateInput
    cateroria?: CategoriaRHOrderByRelationAggregateInput
  }

  export type CarreiraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nome_carreira?: string
    AND?: CarreiraWhereInput | CarreiraWhereInput[]
    OR?: CarreiraWhereInput[]
    NOT?: CarreiraWhereInput | CarreiraWhereInput[]
    regime?: EnumRegimeFilter<"Carreira"> | $Enums.Regime
    createdAt?: DateTimeFilter<"Carreira"> | Date | string
    updatedAt?: DateTimeFilter<"Carreira"> | Date | string
    subcarreira?: SubCarreiraListRelationFilter
    cateroria?: CategoriaRHListRelationFilter
  }, "id" | "nome_carreira">

  export type CarreiraOrderByWithAggregationInput = {
    id?: SortOrder
    nome_carreira?: SortOrder
    regime?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CarreiraCountOrderByAggregateInput
    _avg?: CarreiraAvgOrderByAggregateInput
    _max?: CarreiraMaxOrderByAggregateInput
    _min?: CarreiraMinOrderByAggregateInput
    _sum?: CarreiraSumOrderByAggregateInput
  }

  export type CarreiraScalarWhereWithAggregatesInput = {
    AND?: CarreiraScalarWhereWithAggregatesInput | CarreiraScalarWhereWithAggregatesInput[]
    OR?: CarreiraScalarWhereWithAggregatesInput[]
    NOT?: CarreiraScalarWhereWithAggregatesInput | CarreiraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Carreira"> | number
    nome_carreira?: StringWithAggregatesFilter<"Carreira"> | string
    regime?: EnumRegimeWithAggregatesFilter<"Carreira"> | $Enums.Regime
    createdAt?: DateTimeWithAggregatesFilter<"Carreira"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Carreira"> | Date | string
  }

  export type SubCarreiraWhereInput = {
    AND?: SubCarreiraWhereInput | SubCarreiraWhereInput[]
    OR?: SubCarreiraWhereInput[]
    NOT?: SubCarreiraWhereInput | SubCarreiraWhereInput[]
    id?: IntFilter<"SubCarreira"> | number
    nome_SubCarreira?: StringFilter<"SubCarreira"> | string
    Id_carreira?: IntNullableFilter<"SubCarreira"> | number | null
    createdAt?: DateTimeFilter<"SubCarreira"> | Date | string
    updatedAt?: DateTimeFilter<"SubCarreira"> | Date | string
    Carreira?: XOR<CarreiraNullableRelationFilter, CarreiraWhereInput> | null
    categoria?: CategoriaRHListRelationFilter
  }

  export type SubCarreiraOrderByWithRelationInput = {
    id?: SortOrder
    nome_SubCarreira?: SortOrder
    Id_carreira?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Carreira?: CarreiraOrderByWithRelationInput
    categoria?: CategoriaRHOrderByRelationAggregateInput
  }

  export type SubCarreiraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SubCarreiraWhereInput | SubCarreiraWhereInput[]
    OR?: SubCarreiraWhereInput[]
    NOT?: SubCarreiraWhereInput | SubCarreiraWhereInput[]
    nome_SubCarreira?: StringFilter<"SubCarreira"> | string
    Id_carreira?: IntNullableFilter<"SubCarreira"> | number | null
    createdAt?: DateTimeFilter<"SubCarreira"> | Date | string
    updatedAt?: DateTimeFilter<"SubCarreira"> | Date | string
    Carreira?: XOR<CarreiraNullableRelationFilter, CarreiraWhereInput> | null
    categoria?: CategoriaRHListRelationFilter
  }, "id">

  export type SubCarreiraOrderByWithAggregationInput = {
    id?: SortOrder
    nome_SubCarreira?: SortOrder
    Id_carreira?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SubCarreiraCountOrderByAggregateInput
    _avg?: SubCarreiraAvgOrderByAggregateInput
    _max?: SubCarreiraMaxOrderByAggregateInput
    _min?: SubCarreiraMinOrderByAggregateInput
    _sum?: SubCarreiraSumOrderByAggregateInput
  }

  export type SubCarreiraScalarWhereWithAggregatesInput = {
    AND?: SubCarreiraScalarWhereWithAggregatesInput | SubCarreiraScalarWhereWithAggregatesInput[]
    OR?: SubCarreiraScalarWhereWithAggregatesInput[]
    NOT?: SubCarreiraScalarWhereWithAggregatesInput | SubCarreiraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SubCarreira"> | number
    nome_SubCarreira?: StringWithAggregatesFilter<"SubCarreira"> | string
    Id_carreira?: IntNullableWithAggregatesFilter<"SubCarreira"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"SubCarreira"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SubCarreira"> | Date | string
  }

  export type CategoriaRHWhereInput = {
    AND?: CategoriaRHWhereInput | CategoriaRHWhereInput[]
    OR?: CategoriaRHWhereInput[]
    NOT?: CategoriaRHWhereInput | CategoriaRHWhereInput[]
    id?: IntFilter<"CategoriaRH"> | number
    nome_categoria?: StringFilter<"CategoriaRH"> | string
    salario_base?: FloatFilter<"CategoriaRH"> | number
    Id_carreira?: IntNullableFilter<"CategoriaRH"> | number | null
    Id_subCarreira?: IntNullableFilter<"CategoriaRH"> | number | null
    createdAt?: DateTimeFilter<"CategoriaRH"> | Date | string
    updatedAt?: DateTimeFilter<"CategoriaRH"> | Date | string
    Carreira?: XOR<CarreiraNullableRelationFilter, CarreiraWhereInput> | null
    SubCarreira?: XOR<SubCarreiraNullableRelationFilter, SubCarreiraWhereInput> | null
    funcionario?: FuncionarioListRelationFilter
  }

  export type CategoriaRHOrderByWithRelationInput = {
    id?: SortOrder
    nome_categoria?: SortOrder
    salario_base?: SortOrder
    Id_carreira?: SortOrderInput | SortOrder
    Id_subCarreira?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Carreira?: CarreiraOrderByWithRelationInput
    SubCarreira?: SubCarreiraOrderByWithRelationInput
    funcionario?: FuncionarioOrderByRelationAggregateInput
  }

  export type CategoriaRHWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CategoriaRHWhereInput | CategoriaRHWhereInput[]
    OR?: CategoriaRHWhereInput[]
    NOT?: CategoriaRHWhereInput | CategoriaRHWhereInput[]
    nome_categoria?: StringFilter<"CategoriaRH"> | string
    salario_base?: FloatFilter<"CategoriaRH"> | number
    Id_carreira?: IntNullableFilter<"CategoriaRH"> | number | null
    Id_subCarreira?: IntNullableFilter<"CategoriaRH"> | number | null
    createdAt?: DateTimeFilter<"CategoriaRH"> | Date | string
    updatedAt?: DateTimeFilter<"CategoriaRH"> | Date | string
    Carreira?: XOR<CarreiraNullableRelationFilter, CarreiraWhereInput> | null
    SubCarreira?: XOR<SubCarreiraNullableRelationFilter, SubCarreiraWhereInput> | null
    funcionario?: FuncionarioListRelationFilter
  }, "id">

  export type CategoriaRHOrderByWithAggregationInput = {
    id?: SortOrder
    nome_categoria?: SortOrder
    salario_base?: SortOrder
    Id_carreira?: SortOrderInput | SortOrder
    Id_subCarreira?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CategoriaRHCountOrderByAggregateInput
    _avg?: CategoriaRHAvgOrderByAggregateInput
    _max?: CategoriaRHMaxOrderByAggregateInput
    _min?: CategoriaRHMinOrderByAggregateInput
    _sum?: CategoriaRHSumOrderByAggregateInput
  }

  export type CategoriaRHScalarWhereWithAggregatesInput = {
    AND?: CategoriaRHScalarWhereWithAggregatesInput | CategoriaRHScalarWhereWithAggregatesInput[]
    OR?: CategoriaRHScalarWhereWithAggregatesInput[]
    NOT?: CategoriaRHScalarWhereWithAggregatesInput | CategoriaRHScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CategoriaRH"> | number
    nome_categoria?: StringWithAggregatesFilter<"CategoriaRH"> | string
    salario_base?: FloatWithAggregatesFilter<"CategoriaRH"> | number
    Id_carreira?: IntNullableWithAggregatesFilter<"CategoriaRH"> | number | null
    Id_subCarreira?: IntNullableWithAggregatesFilter<"CategoriaRH"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"CategoriaRH"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CategoriaRH"> | Date | string
  }

  export type FuncaoWhereInput = {
    AND?: FuncaoWhereInput | FuncaoWhereInput[]
    OR?: FuncaoWhereInput[]
    NOT?: FuncaoWhereInput | FuncaoWhereInput[]
    id?: IntFilter<"Funcao"> | number
    nome_funcao?: StringFilter<"Funcao"> | string
    createdAt?: DateTimeFilter<"Funcao"> | Date | string
    updatedAt?: DateTimeFilter<"Funcao"> | Date | string
    funcionario?: FuncionarioListRelationFilter
  }

  export type FuncaoOrderByWithRelationInput = {
    id?: SortOrder
    nome_funcao?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    funcionario?: FuncionarioOrderByRelationAggregateInput
  }

  export type FuncaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: FuncaoWhereInput | FuncaoWhereInput[]
    OR?: FuncaoWhereInput[]
    NOT?: FuncaoWhereInput | FuncaoWhereInput[]
    nome_funcao?: StringFilter<"Funcao"> | string
    createdAt?: DateTimeFilter<"Funcao"> | Date | string
    updatedAt?: DateTimeFilter<"Funcao"> | Date | string
    funcionario?: FuncionarioListRelationFilter
  }, "id">

  export type FuncaoOrderByWithAggregationInput = {
    id?: SortOrder
    nome_funcao?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FuncaoCountOrderByAggregateInput
    _avg?: FuncaoAvgOrderByAggregateInput
    _max?: FuncaoMaxOrderByAggregateInput
    _min?: FuncaoMinOrderByAggregateInput
    _sum?: FuncaoSumOrderByAggregateInput
  }

  export type FuncaoScalarWhereWithAggregatesInput = {
    AND?: FuncaoScalarWhereWithAggregatesInput | FuncaoScalarWhereWithAggregatesInput[]
    OR?: FuncaoScalarWhereWithAggregatesInput[]
    NOT?: FuncaoScalarWhereWithAggregatesInput | FuncaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Funcao"> | number
    nome_funcao?: StringWithAggregatesFilter<"Funcao"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Funcao"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Funcao"> | Date | string
  }

  export type BancoWhereInput = {
    AND?: BancoWhereInput | BancoWhereInput[]
    OR?: BancoWhereInput[]
    NOT?: BancoWhereInput | BancoWhereInput[]
    id?: IntFilter<"Banco"> | number
    nome_banco?: StringFilter<"Banco"> | string
    codigo?: StringFilter<"Banco"> | string
    sigla?: StringFilter<"Banco"> | string
    createdAt?: DateTimeFilter<"Banco"> | Date | string
    updatedAt?: DateTimeFilter<"Banco"> | Date | string
    funcionario?: FuncionarioListRelationFilter
  }

  export type BancoOrderByWithRelationInput = {
    id?: SortOrder
    nome_banco?: SortOrder
    codigo?: SortOrder
    sigla?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    funcionario?: FuncionarioOrderByRelationAggregateInput
  }

  export type BancoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: BancoWhereInput | BancoWhereInput[]
    OR?: BancoWhereInput[]
    NOT?: BancoWhereInput | BancoWhereInput[]
    nome_banco?: StringFilter<"Banco"> | string
    codigo?: StringFilter<"Banco"> | string
    sigla?: StringFilter<"Banco"> | string
    createdAt?: DateTimeFilter<"Banco"> | Date | string
    updatedAt?: DateTimeFilter<"Banco"> | Date | string
    funcionario?: FuncionarioListRelationFilter
  }, "id">

  export type BancoOrderByWithAggregationInput = {
    id?: SortOrder
    nome_banco?: SortOrder
    codigo?: SortOrder
    sigla?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BancoCountOrderByAggregateInput
    _avg?: BancoAvgOrderByAggregateInput
    _max?: BancoMaxOrderByAggregateInput
    _min?: BancoMinOrderByAggregateInput
    _sum?: BancoSumOrderByAggregateInput
  }

  export type BancoScalarWhereWithAggregatesInput = {
    AND?: BancoScalarWhereWithAggregatesInput | BancoScalarWhereWithAggregatesInput[]
    OR?: BancoScalarWhereWithAggregatesInput[]
    NOT?: BancoScalarWhereWithAggregatesInput | BancoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Banco"> | number
    nome_banco?: StringWithAggregatesFilter<"Banco"> | string
    codigo?: StringWithAggregatesFilter<"Banco"> | string
    sigla?: StringWithAggregatesFilter<"Banco"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Banco"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Banco"> | Date | string
  }

  export type FuncionarioWhereInput = {
    AND?: FuncionarioWhereInput | FuncionarioWhereInput[]
    OR?: FuncionarioWhereInput[]
    NOT?: FuncionarioWhereInput | FuncionarioWhereInput[]
    id?: IntFilter<"Funcionario"> | number
    nome_completo?: StringFilter<"Funcionario"> | string
    nome_pai?: StringFilter<"Funcionario"> | string
    nome_mae?: StringFilter<"Funcionario"> | string
    nascimento?: DateTimeFilter<"Funcionario"> | Date | string
    email?: StringFilter<"Funcionario"> | string
    genero?: EnumGeneroFilter<"Funcionario"> | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFilter<"Funcionario"> | $Enums.Identificacao
    num_identificacao?: StringFilter<"Funcionario"> | string
    nivel_academico?: EnumNIVEL_ACADEMICOFilter<"Funcionario"> | $Enums.NIVEL_ACADEMICO
    avatar?: StringNullableFilter<"Funcionario"> | string | null
    telefone1?: StringFilter<"Funcionario"> | string
    telefone2?: StringNullableFilter<"Funcionario"> | string | null
    linkedin?: StringNullableFilter<"Funcionario"> | string | null
    whatsApp?: StringNullableFilter<"Funcionario"> | string | null
    instagram?: StringNullableFilter<"Funcionario"> | string | null
    bairro?: StringFilter<"Funcionario"> | string
    rua?: StringFilter<"Funcionario"> | string
    id_funcao?: IntNullableFilter<"Funcionario"> | number | null
    id_categoria?: IntNullableFilter<"Funcionario"> | number | null
    num_conta?: StringNullableFilter<"Funcionario"> | string | null
    iban?: StringNullableFilter<"Funcionario"> | string | null
    Id_banco?: IntNullableFilter<"Funcionario"> | number | null
    createdAt?: DateTimeFilter<"Funcionario"> | Date | string
    updatedAt?: DateTimeFilter<"Funcionario"> | Date | string
    Funcao?: XOR<FuncaoNullableRelationFilter, FuncaoWhereInput> | null
    Categoria?: XOR<CategoriaRHNullableRelationFilter, CategoriaRHWhereInput> | null
    dadosprofissionais?: DadosProfissionaisListRelationFilter
    formacoes?: FormacoesListRelationFilter
    esperiencialaboral?: ExperiencialLaboralListRelationFilter
    departamentosComoChefe?: DepartamentoListRelationFilter
    departamentosComoSupervisor?: DepartamentoListRelationFilter
    funcionariodepartamento?: FuncionarioDepartamentoListRelationFilter
    Banco?: XOR<BancoNullableRelationFilter, BancoWhereInput> | null
    avaliacao?: AvaliacaoListRelationFilter
  }

  export type FuncionarioOrderByWithRelationInput = {
    id?: SortOrder
    nome_completo?: SortOrder
    nome_pai?: SortOrder
    nome_mae?: SortOrder
    nascimento?: SortOrder
    email?: SortOrder
    genero?: SortOrder
    tipo_identificacao?: SortOrder
    num_identificacao?: SortOrder
    nivel_academico?: SortOrder
    avatar?: SortOrderInput | SortOrder
    telefone1?: SortOrder
    telefone2?: SortOrderInput | SortOrder
    linkedin?: SortOrderInput | SortOrder
    whatsApp?: SortOrderInput | SortOrder
    instagram?: SortOrderInput | SortOrder
    bairro?: SortOrder
    rua?: SortOrder
    id_funcao?: SortOrderInput | SortOrder
    id_categoria?: SortOrderInput | SortOrder
    num_conta?: SortOrderInput | SortOrder
    iban?: SortOrderInput | SortOrder
    Id_banco?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Funcao?: FuncaoOrderByWithRelationInput
    Categoria?: CategoriaRHOrderByWithRelationInput
    dadosprofissionais?: DadosProfissionaisOrderByRelationAggregateInput
    formacoes?: FormacoesOrderByRelationAggregateInput
    esperiencialaboral?: ExperiencialLaboralOrderByRelationAggregateInput
    departamentosComoChefe?: DepartamentoOrderByRelationAggregateInput
    departamentosComoSupervisor?: DepartamentoOrderByRelationAggregateInput
    funcionariodepartamento?: FuncionarioDepartamentoOrderByRelationAggregateInput
    Banco?: BancoOrderByWithRelationInput
    avaliacao?: AvaliacaoOrderByRelationAggregateInput
  }

  export type FuncionarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    telefone1?: string
    telefone2?: string
    num_conta?: string
    iban?: string
    AND?: FuncionarioWhereInput | FuncionarioWhereInput[]
    OR?: FuncionarioWhereInput[]
    NOT?: FuncionarioWhereInput | FuncionarioWhereInput[]
    nome_completo?: StringFilter<"Funcionario"> | string
    nome_pai?: StringFilter<"Funcionario"> | string
    nome_mae?: StringFilter<"Funcionario"> | string
    nascimento?: DateTimeFilter<"Funcionario"> | Date | string
    genero?: EnumGeneroFilter<"Funcionario"> | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFilter<"Funcionario"> | $Enums.Identificacao
    num_identificacao?: StringFilter<"Funcionario"> | string
    nivel_academico?: EnumNIVEL_ACADEMICOFilter<"Funcionario"> | $Enums.NIVEL_ACADEMICO
    avatar?: StringNullableFilter<"Funcionario"> | string | null
    linkedin?: StringNullableFilter<"Funcionario"> | string | null
    whatsApp?: StringNullableFilter<"Funcionario"> | string | null
    instagram?: StringNullableFilter<"Funcionario"> | string | null
    bairro?: StringFilter<"Funcionario"> | string
    rua?: StringFilter<"Funcionario"> | string
    id_funcao?: IntNullableFilter<"Funcionario"> | number | null
    id_categoria?: IntNullableFilter<"Funcionario"> | number | null
    Id_banco?: IntNullableFilter<"Funcionario"> | number | null
    createdAt?: DateTimeFilter<"Funcionario"> | Date | string
    updatedAt?: DateTimeFilter<"Funcionario"> | Date | string
    Funcao?: XOR<FuncaoNullableRelationFilter, FuncaoWhereInput> | null
    Categoria?: XOR<CategoriaRHNullableRelationFilter, CategoriaRHWhereInput> | null
    dadosprofissionais?: DadosProfissionaisListRelationFilter
    formacoes?: FormacoesListRelationFilter
    esperiencialaboral?: ExperiencialLaboralListRelationFilter
    departamentosComoChefe?: DepartamentoListRelationFilter
    departamentosComoSupervisor?: DepartamentoListRelationFilter
    funcionariodepartamento?: FuncionarioDepartamentoListRelationFilter
    Banco?: XOR<BancoNullableRelationFilter, BancoWhereInput> | null
    avaliacao?: AvaliacaoListRelationFilter
  }, "id" | "email" | "telefone1" | "telefone2" | "num_conta" | "iban">

  export type FuncionarioOrderByWithAggregationInput = {
    id?: SortOrder
    nome_completo?: SortOrder
    nome_pai?: SortOrder
    nome_mae?: SortOrder
    nascimento?: SortOrder
    email?: SortOrder
    genero?: SortOrder
    tipo_identificacao?: SortOrder
    num_identificacao?: SortOrder
    nivel_academico?: SortOrder
    avatar?: SortOrderInput | SortOrder
    telefone1?: SortOrder
    telefone2?: SortOrderInput | SortOrder
    linkedin?: SortOrderInput | SortOrder
    whatsApp?: SortOrderInput | SortOrder
    instagram?: SortOrderInput | SortOrder
    bairro?: SortOrder
    rua?: SortOrder
    id_funcao?: SortOrderInput | SortOrder
    id_categoria?: SortOrderInput | SortOrder
    num_conta?: SortOrderInput | SortOrder
    iban?: SortOrderInput | SortOrder
    Id_banco?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FuncionarioCountOrderByAggregateInput
    _avg?: FuncionarioAvgOrderByAggregateInput
    _max?: FuncionarioMaxOrderByAggregateInput
    _min?: FuncionarioMinOrderByAggregateInput
    _sum?: FuncionarioSumOrderByAggregateInput
  }

  export type FuncionarioScalarWhereWithAggregatesInput = {
    AND?: FuncionarioScalarWhereWithAggregatesInput | FuncionarioScalarWhereWithAggregatesInput[]
    OR?: FuncionarioScalarWhereWithAggregatesInput[]
    NOT?: FuncionarioScalarWhereWithAggregatesInput | FuncionarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Funcionario"> | number
    nome_completo?: StringWithAggregatesFilter<"Funcionario"> | string
    nome_pai?: StringWithAggregatesFilter<"Funcionario"> | string
    nome_mae?: StringWithAggregatesFilter<"Funcionario"> | string
    nascimento?: DateTimeWithAggregatesFilter<"Funcionario"> | Date | string
    email?: StringWithAggregatesFilter<"Funcionario"> | string
    genero?: EnumGeneroWithAggregatesFilter<"Funcionario"> | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoWithAggregatesFilter<"Funcionario"> | $Enums.Identificacao
    num_identificacao?: StringWithAggregatesFilter<"Funcionario"> | string
    nivel_academico?: EnumNIVEL_ACADEMICOWithAggregatesFilter<"Funcionario"> | $Enums.NIVEL_ACADEMICO
    avatar?: StringNullableWithAggregatesFilter<"Funcionario"> | string | null
    telefone1?: StringWithAggregatesFilter<"Funcionario"> | string
    telefone2?: StringNullableWithAggregatesFilter<"Funcionario"> | string | null
    linkedin?: StringNullableWithAggregatesFilter<"Funcionario"> | string | null
    whatsApp?: StringNullableWithAggregatesFilter<"Funcionario"> | string | null
    instagram?: StringNullableWithAggregatesFilter<"Funcionario"> | string | null
    bairro?: StringWithAggregatesFilter<"Funcionario"> | string
    rua?: StringWithAggregatesFilter<"Funcionario"> | string
    id_funcao?: IntNullableWithAggregatesFilter<"Funcionario"> | number | null
    id_categoria?: IntNullableWithAggregatesFilter<"Funcionario"> | number | null
    num_conta?: StringNullableWithAggregatesFilter<"Funcionario"> | string | null
    iban?: StringNullableWithAggregatesFilter<"Funcionario"> | string | null
    Id_banco?: IntNullableWithAggregatesFilter<"Funcionario"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Funcionario"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Funcionario"> | Date | string
  }

  export type DadosProfissionaisWhereInput = {
    AND?: DadosProfissionaisWhereInput | DadosProfissionaisWhereInput[]
    OR?: DadosProfissionaisWhereInput[]
    NOT?: DadosProfissionaisWhereInput | DadosProfissionaisWhereInput[]
    id?: IntFilter<"DadosProfissionais"> | number
    data_admissao?: DateTimeFilter<"DadosProfissionais"> | Date | string
    numero_despacho?: StringNullableFilter<"DadosProfissionais"> | string | null
    data_despacho?: DateTimeFilter<"DadosProfissionais"> | Date | string
    contrato?: EnumContratoFilter<"DadosProfissionais"> | $Enums.Contrato
    Id_funcionario?: IntNullableFilter<"DadosProfissionais"> | number | null
    createdAt?: DateTimeFilter<"DadosProfissionais"> | Date | string
    updatedAt?: DateTimeFilter<"DadosProfissionais"> | Date | string
    Funcionario?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
  }

  export type DadosProfissionaisOrderByWithRelationInput = {
    id?: SortOrder
    data_admissao?: SortOrder
    numero_despacho?: SortOrderInput | SortOrder
    data_despacho?: SortOrder
    contrato?: SortOrder
    Id_funcionario?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Funcionario?: FuncionarioOrderByWithRelationInput
  }

  export type DadosProfissionaisWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DadosProfissionaisWhereInput | DadosProfissionaisWhereInput[]
    OR?: DadosProfissionaisWhereInput[]
    NOT?: DadosProfissionaisWhereInput | DadosProfissionaisWhereInput[]
    data_admissao?: DateTimeFilter<"DadosProfissionais"> | Date | string
    numero_despacho?: StringNullableFilter<"DadosProfissionais"> | string | null
    data_despacho?: DateTimeFilter<"DadosProfissionais"> | Date | string
    contrato?: EnumContratoFilter<"DadosProfissionais"> | $Enums.Contrato
    Id_funcionario?: IntNullableFilter<"DadosProfissionais"> | number | null
    createdAt?: DateTimeFilter<"DadosProfissionais"> | Date | string
    updatedAt?: DateTimeFilter<"DadosProfissionais"> | Date | string
    Funcionario?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
  }, "id">

  export type DadosProfissionaisOrderByWithAggregationInput = {
    id?: SortOrder
    data_admissao?: SortOrder
    numero_despacho?: SortOrderInput | SortOrder
    data_despacho?: SortOrder
    contrato?: SortOrder
    Id_funcionario?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: DadosProfissionaisCountOrderByAggregateInput
    _avg?: DadosProfissionaisAvgOrderByAggregateInput
    _max?: DadosProfissionaisMaxOrderByAggregateInput
    _min?: DadosProfissionaisMinOrderByAggregateInput
    _sum?: DadosProfissionaisSumOrderByAggregateInput
  }

  export type DadosProfissionaisScalarWhereWithAggregatesInput = {
    AND?: DadosProfissionaisScalarWhereWithAggregatesInput | DadosProfissionaisScalarWhereWithAggregatesInput[]
    OR?: DadosProfissionaisScalarWhereWithAggregatesInput[]
    NOT?: DadosProfissionaisScalarWhereWithAggregatesInput | DadosProfissionaisScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DadosProfissionais"> | number
    data_admissao?: DateTimeWithAggregatesFilter<"DadosProfissionais"> | Date | string
    numero_despacho?: StringNullableWithAggregatesFilter<"DadosProfissionais"> | string | null
    data_despacho?: DateTimeWithAggregatesFilter<"DadosProfissionais"> | Date | string
    contrato?: EnumContratoWithAggregatesFilter<"DadosProfissionais"> | $Enums.Contrato
    Id_funcionario?: IntNullableWithAggregatesFilter<"DadosProfissionais"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"DadosProfissionais"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"DadosProfissionais"> | Date | string
  }

  export type FormacoesWhereInput = {
    AND?: FormacoesWhereInput | FormacoesWhereInput[]
    OR?: FormacoesWhereInput[]
    NOT?: FormacoesWhereInput | FormacoesWhereInput[]
    id?: IntFilter<"Formacoes"> | number
    ano_inicio?: DateTimeFilter<"Formacoes"> | Date | string
    ano_termino?: DateTimeFilter<"Formacoes"> | Date | string
    formacao?: StringFilter<"Formacoes"> | string
    pais?: StringFilter<"Formacoes"> | string
    instituicao?: StringFilter<"Formacoes"> | string
    Id_funcionario?: IntNullableFilter<"Formacoes"> | number | null
    createdAt?: DateTimeFilter<"Formacoes"> | Date | string
    updatedAt?: DateTimeFilter<"Formacoes"> | Date | string
    Funcionario?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
  }

  export type FormacoesOrderByWithRelationInput = {
    id?: SortOrder
    ano_inicio?: SortOrder
    ano_termino?: SortOrder
    formacao?: SortOrder
    pais?: SortOrder
    instituicao?: SortOrder
    Id_funcionario?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Funcionario?: FuncionarioOrderByWithRelationInput
  }

  export type FormacoesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: FormacoesWhereInput | FormacoesWhereInput[]
    OR?: FormacoesWhereInput[]
    NOT?: FormacoesWhereInput | FormacoesWhereInput[]
    ano_inicio?: DateTimeFilter<"Formacoes"> | Date | string
    ano_termino?: DateTimeFilter<"Formacoes"> | Date | string
    formacao?: StringFilter<"Formacoes"> | string
    pais?: StringFilter<"Formacoes"> | string
    instituicao?: StringFilter<"Formacoes"> | string
    Id_funcionario?: IntNullableFilter<"Formacoes"> | number | null
    createdAt?: DateTimeFilter<"Formacoes"> | Date | string
    updatedAt?: DateTimeFilter<"Formacoes"> | Date | string
    Funcionario?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
  }, "id">

  export type FormacoesOrderByWithAggregationInput = {
    id?: SortOrder
    ano_inicio?: SortOrder
    ano_termino?: SortOrder
    formacao?: SortOrder
    pais?: SortOrder
    instituicao?: SortOrder
    Id_funcionario?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FormacoesCountOrderByAggregateInput
    _avg?: FormacoesAvgOrderByAggregateInput
    _max?: FormacoesMaxOrderByAggregateInput
    _min?: FormacoesMinOrderByAggregateInput
    _sum?: FormacoesSumOrderByAggregateInput
  }

  export type FormacoesScalarWhereWithAggregatesInput = {
    AND?: FormacoesScalarWhereWithAggregatesInput | FormacoesScalarWhereWithAggregatesInput[]
    OR?: FormacoesScalarWhereWithAggregatesInput[]
    NOT?: FormacoesScalarWhereWithAggregatesInput | FormacoesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Formacoes"> | number
    ano_inicio?: DateTimeWithAggregatesFilter<"Formacoes"> | Date | string
    ano_termino?: DateTimeWithAggregatesFilter<"Formacoes"> | Date | string
    formacao?: StringWithAggregatesFilter<"Formacoes"> | string
    pais?: StringWithAggregatesFilter<"Formacoes"> | string
    instituicao?: StringWithAggregatesFilter<"Formacoes"> | string
    Id_funcionario?: IntNullableWithAggregatesFilter<"Formacoes"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Formacoes"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Formacoes"> | Date | string
  }

  export type PublicacoesWhereInput = {
    AND?: PublicacoesWhereInput | PublicacoesWhereInput[]
    OR?: PublicacoesWhereInput[]
    NOT?: PublicacoesWhereInput | PublicacoesWhereInput[]
    id?: IntFilter<"Publicacoes"> | number
    titulo?: StringFilter<"Publicacoes"> | string
    entidade?: StringFilter<"Publicacoes"> | string
    ano?: DateTimeFilter<"Publicacoes"> | Date | string
    tipo?: EnumTipoFilter<"Publicacoes"> | $Enums.Tipo
    createdAt?: DateTimeFilter<"Publicacoes"> | Date | string
    updatedAt?: DateTimeFilter<"Publicacoes"> | Date | string
  }

  export type PublicacoesOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrder
    entidade?: SortOrder
    ano?: SortOrder
    tipo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PublicacoesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PublicacoesWhereInput | PublicacoesWhereInput[]
    OR?: PublicacoesWhereInput[]
    NOT?: PublicacoesWhereInput | PublicacoesWhereInput[]
    titulo?: StringFilter<"Publicacoes"> | string
    entidade?: StringFilter<"Publicacoes"> | string
    ano?: DateTimeFilter<"Publicacoes"> | Date | string
    tipo?: EnumTipoFilter<"Publicacoes"> | $Enums.Tipo
    createdAt?: DateTimeFilter<"Publicacoes"> | Date | string
    updatedAt?: DateTimeFilter<"Publicacoes"> | Date | string
  }, "id">

  export type PublicacoesOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrder
    entidade?: SortOrder
    ano?: SortOrder
    tipo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PublicacoesCountOrderByAggregateInput
    _avg?: PublicacoesAvgOrderByAggregateInput
    _max?: PublicacoesMaxOrderByAggregateInput
    _min?: PublicacoesMinOrderByAggregateInput
    _sum?: PublicacoesSumOrderByAggregateInput
  }

  export type PublicacoesScalarWhereWithAggregatesInput = {
    AND?: PublicacoesScalarWhereWithAggregatesInput | PublicacoesScalarWhereWithAggregatesInput[]
    OR?: PublicacoesScalarWhereWithAggregatesInput[]
    NOT?: PublicacoesScalarWhereWithAggregatesInput | PublicacoesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Publicacoes"> | number
    titulo?: StringWithAggregatesFilter<"Publicacoes"> | string
    entidade?: StringWithAggregatesFilter<"Publicacoes"> | string
    ano?: DateTimeWithAggregatesFilter<"Publicacoes"> | Date | string
    tipo?: EnumTipoWithAggregatesFilter<"Publicacoes"> | $Enums.Tipo
    createdAt?: DateTimeWithAggregatesFilter<"Publicacoes"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Publicacoes"> | Date | string
  }

  export type ExperiencialLaboralWhereInput = {
    AND?: ExperiencialLaboralWhereInput | ExperiencialLaboralWhereInput[]
    OR?: ExperiencialLaboralWhereInput[]
    NOT?: ExperiencialLaboralWhereInput | ExperiencialLaboralWhereInput[]
    id?: IntFilter<"ExperiencialLaboral"> | number
    ano_inicio?: DateTimeFilter<"ExperiencialLaboral"> | Date | string
    ano_termino?: DateTimeFilter<"ExperiencialLaboral"> | Date | string
    funcao?: StringFilter<"ExperiencialLaboral"> | string
    instituicao?: StringFilter<"ExperiencialLaboral"> | string
    pais?: StringNullableFilter<"ExperiencialLaboral"> | string | null
    createdAt?: DateTimeFilter<"ExperiencialLaboral"> | Date | string
    updatedAt?: DateTimeFilter<"ExperiencialLaboral"> | Date | string
    Id_funcionario?: IntNullableFilter<"ExperiencialLaboral"> | number | null
    Funcionario?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
  }

  export type ExperiencialLaboralOrderByWithRelationInput = {
    id?: SortOrder
    ano_inicio?: SortOrder
    ano_termino?: SortOrder
    funcao?: SortOrder
    instituicao?: SortOrder
    pais?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Id_funcionario?: SortOrderInput | SortOrder
    Funcionario?: FuncionarioOrderByWithRelationInput
  }

  export type ExperiencialLaboralWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ExperiencialLaboralWhereInput | ExperiencialLaboralWhereInput[]
    OR?: ExperiencialLaboralWhereInput[]
    NOT?: ExperiencialLaboralWhereInput | ExperiencialLaboralWhereInput[]
    ano_inicio?: DateTimeFilter<"ExperiencialLaboral"> | Date | string
    ano_termino?: DateTimeFilter<"ExperiencialLaboral"> | Date | string
    funcao?: StringFilter<"ExperiencialLaboral"> | string
    instituicao?: StringFilter<"ExperiencialLaboral"> | string
    pais?: StringNullableFilter<"ExperiencialLaboral"> | string | null
    createdAt?: DateTimeFilter<"ExperiencialLaboral"> | Date | string
    updatedAt?: DateTimeFilter<"ExperiencialLaboral"> | Date | string
    Id_funcionario?: IntNullableFilter<"ExperiencialLaboral"> | number | null
    Funcionario?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
  }, "id">

  export type ExperiencialLaboralOrderByWithAggregationInput = {
    id?: SortOrder
    ano_inicio?: SortOrder
    ano_termino?: SortOrder
    funcao?: SortOrder
    instituicao?: SortOrder
    pais?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Id_funcionario?: SortOrderInput | SortOrder
    _count?: ExperiencialLaboralCountOrderByAggregateInput
    _avg?: ExperiencialLaboralAvgOrderByAggregateInput
    _max?: ExperiencialLaboralMaxOrderByAggregateInput
    _min?: ExperiencialLaboralMinOrderByAggregateInput
    _sum?: ExperiencialLaboralSumOrderByAggregateInput
  }

  export type ExperiencialLaboralScalarWhereWithAggregatesInput = {
    AND?: ExperiencialLaboralScalarWhereWithAggregatesInput | ExperiencialLaboralScalarWhereWithAggregatesInput[]
    OR?: ExperiencialLaboralScalarWhereWithAggregatesInput[]
    NOT?: ExperiencialLaboralScalarWhereWithAggregatesInput | ExperiencialLaboralScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ExperiencialLaboral"> | number
    ano_inicio?: DateTimeWithAggregatesFilter<"ExperiencialLaboral"> | Date | string
    ano_termino?: DateTimeWithAggregatesFilter<"ExperiencialLaboral"> | Date | string
    funcao?: StringWithAggregatesFilter<"ExperiencialLaboral"> | string
    instituicao?: StringWithAggregatesFilter<"ExperiencialLaboral"> | string
    pais?: StringNullableWithAggregatesFilter<"ExperiencialLaboral"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ExperiencialLaboral"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ExperiencialLaboral"> | Date | string
    Id_funcionario?: IntNullableWithAggregatesFilter<"ExperiencialLaboral"> | number | null
  }

  export type DepartamentoWhereInput = {
    AND?: DepartamentoWhereInput | DepartamentoWhereInput[]
    OR?: DepartamentoWhereInput[]
    NOT?: DepartamentoWhereInput | DepartamentoWhereInput[]
    id?: IntFilter<"Departamento"> | number
    nome_departamento?: StringFilter<"Departamento"> | string
    Id_funcionario_chefe?: IntNullableFilter<"Departamento"> | number | null
    Id_funcionario_supervisor?: IntNullableFilter<"Departamento"> | number | null
    createdAt?: DateTimeFilter<"Departamento"> | Date | string
    updatedAt?: DateTimeFilter<"Departamento"> | Date | string
    funcionario_chefe?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
    funcionario_supervisor?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
    avaliacao?: AvaliacaoListRelationFilter
    funcionariodepartamento?: FuncionarioDepartamentoListRelationFilter
  }

  export type DepartamentoOrderByWithRelationInput = {
    id?: SortOrder
    nome_departamento?: SortOrder
    Id_funcionario_chefe?: SortOrderInput | SortOrder
    Id_funcionario_supervisor?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    funcionario_chefe?: FuncionarioOrderByWithRelationInput
    funcionario_supervisor?: FuncionarioOrderByWithRelationInput
    avaliacao?: AvaliacaoOrderByRelationAggregateInput
    funcionariodepartamento?: FuncionarioDepartamentoOrderByRelationAggregateInput
  }

  export type DepartamentoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DepartamentoWhereInput | DepartamentoWhereInput[]
    OR?: DepartamentoWhereInput[]
    NOT?: DepartamentoWhereInput | DepartamentoWhereInput[]
    nome_departamento?: StringFilter<"Departamento"> | string
    Id_funcionario_chefe?: IntNullableFilter<"Departamento"> | number | null
    Id_funcionario_supervisor?: IntNullableFilter<"Departamento"> | number | null
    createdAt?: DateTimeFilter<"Departamento"> | Date | string
    updatedAt?: DateTimeFilter<"Departamento"> | Date | string
    funcionario_chefe?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
    funcionario_supervisor?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
    avaliacao?: AvaliacaoListRelationFilter
    funcionariodepartamento?: FuncionarioDepartamentoListRelationFilter
  }, "id">

  export type DepartamentoOrderByWithAggregationInput = {
    id?: SortOrder
    nome_departamento?: SortOrder
    Id_funcionario_chefe?: SortOrderInput | SortOrder
    Id_funcionario_supervisor?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: DepartamentoCountOrderByAggregateInput
    _avg?: DepartamentoAvgOrderByAggregateInput
    _max?: DepartamentoMaxOrderByAggregateInput
    _min?: DepartamentoMinOrderByAggregateInput
    _sum?: DepartamentoSumOrderByAggregateInput
  }

  export type DepartamentoScalarWhereWithAggregatesInput = {
    AND?: DepartamentoScalarWhereWithAggregatesInput | DepartamentoScalarWhereWithAggregatesInput[]
    OR?: DepartamentoScalarWhereWithAggregatesInput[]
    NOT?: DepartamentoScalarWhereWithAggregatesInput | DepartamentoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Departamento"> | number
    nome_departamento?: StringWithAggregatesFilter<"Departamento"> | string
    Id_funcionario_chefe?: IntNullableWithAggregatesFilter<"Departamento"> | number | null
    Id_funcionario_supervisor?: IntNullableWithAggregatesFilter<"Departamento"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Departamento"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Departamento"> | Date | string
  }

  export type FuncionarioDepartamentoWhereInput = {
    AND?: FuncionarioDepartamentoWhereInput | FuncionarioDepartamentoWhereInput[]
    OR?: FuncionarioDepartamentoWhereInput[]
    NOT?: FuncionarioDepartamentoWhereInput | FuncionarioDepartamentoWhereInput[]
    id?: IntFilter<"FuncionarioDepartamento"> | number
    Id_departamento?: IntNullableFilter<"FuncionarioDepartamento"> | number | null
    Id_funcionario?: IntNullableFilter<"FuncionarioDepartamento"> | number | null
    createdAt?: DateTimeFilter<"FuncionarioDepartamento"> | Date | string
    updatedAt?: DateTimeFilter<"FuncionarioDepartamento"> | Date | string
    Departamento?: XOR<DepartamentoNullableRelationFilter, DepartamentoWhereInput> | null
    Funcionario?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
  }

  export type FuncionarioDepartamentoOrderByWithRelationInput = {
    id?: SortOrder
    Id_departamento?: SortOrderInput | SortOrder
    Id_funcionario?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Departamento?: DepartamentoOrderByWithRelationInput
    Funcionario?: FuncionarioOrderByWithRelationInput
  }

  export type FuncionarioDepartamentoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: FuncionarioDepartamentoWhereInput | FuncionarioDepartamentoWhereInput[]
    OR?: FuncionarioDepartamentoWhereInput[]
    NOT?: FuncionarioDepartamentoWhereInput | FuncionarioDepartamentoWhereInput[]
    Id_departamento?: IntNullableFilter<"FuncionarioDepartamento"> | number | null
    Id_funcionario?: IntNullableFilter<"FuncionarioDepartamento"> | number | null
    createdAt?: DateTimeFilter<"FuncionarioDepartamento"> | Date | string
    updatedAt?: DateTimeFilter<"FuncionarioDepartamento"> | Date | string
    Departamento?: XOR<DepartamentoNullableRelationFilter, DepartamentoWhereInput> | null
    Funcionario?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
  }, "id">

  export type FuncionarioDepartamentoOrderByWithAggregationInput = {
    id?: SortOrder
    Id_departamento?: SortOrderInput | SortOrder
    Id_funcionario?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FuncionarioDepartamentoCountOrderByAggregateInput
    _avg?: FuncionarioDepartamentoAvgOrderByAggregateInput
    _max?: FuncionarioDepartamentoMaxOrderByAggregateInput
    _min?: FuncionarioDepartamentoMinOrderByAggregateInput
    _sum?: FuncionarioDepartamentoSumOrderByAggregateInput
  }

  export type FuncionarioDepartamentoScalarWhereWithAggregatesInput = {
    AND?: FuncionarioDepartamentoScalarWhereWithAggregatesInput | FuncionarioDepartamentoScalarWhereWithAggregatesInput[]
    OR?: FuncionarioDepartamentoScalarWhereWithAggregatesInput[]
    NOT?: FuncionarioDepartamentoScalarWhereWithAggregatesInput | FuncionarioDepartamentoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"FuncionarioDepartamento"> | number
    Id_departamento?: IntNullableWithAggregatesFilter<"FuncionarioDepartamento"> | number | null
    Id_funcionario?: IntNullableWithAggregatesFilter<"FuncionarioDepartamento"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"FuncionarioDepartamento"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FuncionarioDepartamento"> | Date | string
  }

  export type FichaAvaliacaoWhereInput = {
    AND?: FichaAvaliacaoWhereInput | FichaAvaliacaoWhereInput[]
    OR?: FichaAvaliacaoWhereInput[]
    NOT?: FichaAvaliacaoWhereInput | FichaAvaliacaoWhereInput[]
    id?: IntFilter<"FichaAvaliacao"> | number
    nome_ficha?: StringFilter<"FichaAvaliacao"> | string
    objetivo?: StringNullableFilter<"FichaAvaliacao"> | string | null
    createdAt?: DateTimeFilter<"FichaAvaliacao"> | Date | string
    updatedAt?: DateTimeFilter<"FichaAvaliacao"> | Date | string
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoListRelationFilter
    avaliacao?: AvaliacaoListRelationFilter
  }

  export type FichaAvaliacaoOrderByWithRelationInput = {
    id?: SortOrder
    nome_ficha?: SortOrder
    objetivo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoOrderByRelationAggregateInput
    avaliacao?: AvaliacaoOrderByRelationAggregateInput
  }

  export type FichaAvaliacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nome_ficha?: string
    AND?: FichaAvaliacaoWhereInput | FichaAvaliacaoWhereInput[]
    OR?: FichaAvaliacaoWhereInput[]
    NOT?: FichaAvaliacaoWhereInput | FichaAvaliacaoWhereInput[]
    objetivo?: StringNullableFilter<"FichaAvaliacao"> | string | null
    createdAt?: DateTimeFilter<"FichaAvaliacao"> | Date | string
    updatedAt?: DateTimeFilter<"FichaAvaliacao"> | Date | string
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoListRelationFilter
    avaliacao?: AvaliacaoListRelationFilter
  }, "id" | "nome_ficha">

  export type FichaAvaliacaoOrderByWithAggregationInput = {
    id?: SortOrder
    nome_ficha?: SortOrder
    objetivo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FichaAvaliacaoCountOrderByAggregateInput
    _avg?: FichaAvaliacaoAvgOrderByAggregateInput
    _max?: FichaAvaliacaoMaxOrderByAggregateInput
    _min?: FichaAvaliacaoMinOrderByAggregateInput
    _sum?: FichaAvaliacaoSumOrderByAggregateInput
  }

  export type FichaAvaliacaoScalarWhereWithAggregatesInput = {
    AND?: FichaAvaliacaoScalarWhereWithAggregatesInput | FichaAvaliacaoScalarWhereWithAggregatesInput[]
    OR?: FichaAvaliacaoScalarWhereWithAggregatesInput[]
    NOT?: FichaAvaliacaoScalarWhereWithAggregatesInput | FichaAvaliacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"FichaAvaliacao"> | number
    nome_ficha?: StringWithAggregatesFilter<"FichaAvaliacao"> | string
    objetivo?: StringNullableWithAggregatesFilter<"FichaAvaliacao"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"FichaAvaliacao"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FichaAvaliacao"> | Date | string
  }

  export type CompetenciaWhereInput = {
    AND?: CompetenciaWhereInput | CompetenciaWhereInput[]
    OR?: CompetenciaWhereInput[]
    NOT?: CompetenciaWhereInput | CompetenciaWhereInput[]
    id?: IntFilter<"Competencia"> | number
    nome_competencia?: StringFilter<"Competencia"> | string
    criterio?: EnumCriterioFilter<"Competencia"> | $Enums.Criterio
    createdAt?: DateTimeFilter<"Competencia"> | Date | string
    updatedAt?: DateTimeFilter<"Competencia"> | Date | string
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoListRelationFilter
  }

  export type CompetenciaOrderByWithRelationInput = {
    id?: SortOrder
    nome_competencia?: SortOrder
    criterio?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoOrderByRelationAggregateInput
  }

  export type CompetenciaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nome_competencia?: string
    AND?: CompetenciaWhereInput | CompetenciaWhereInput[]
    OR?: CompetenciaWhereInput[]
    NOT?: CompetenciaWhereInput | CompetenciaWhereInput[]
    criterio?: EnumCriterioFilter<"Competencia"> | $Enums.Criterio
    createdAt?: DateTimeFilter<"Competencia"> | Date | string
    updatedAt?: DateTimeFilter<"Competencia"> | Date | string
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoListRelationFilter
  }, "id" | "nome_competencia">

  export type CompetenciaOrderByWithAggregationInput = {
    id?: SortOrder
    nome_competencia?: SortOrder
    criterio?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CompetenciaCountOrderByAggregateInput
    _avg?: CompetenciaAvgOrderByAggregateInput
    _max?: CompetenciaMaxOrderByAggregateInput
    _min?: CompetenciaMinOrderByAggregateInput
    _sum?: CompetenciaSumOrderByAggregateInput
  }

  export type CompetenciaScalarWhereWithAggregatesInput = {
    AND?: CompetenciaScalarWhereWithAggregatesInput | CompetenciaScalarWhereWithAggregatesInput[]
    OR?: CompetenciaScalarWhereWithAggregatesInput[]
    NOT?: CompetenciaScalarWhereWithAggregatesInput | CompetenciaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Competencia"> | number
    nome_competencia?: StringWithAggregatesFilter<"Competencia"> | string
    criterio?: EnumCriterioWithAggregatesFilter<"Competencia"> | $Enums.Criterio
    createdAt?: DateTimeWithAggregatesFilter<"Competencia"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Competencia"> | Date | string
  }

  export type PerguntaFichaAvaliacaoWhereInput = {
    AND?: PerguntaFichaAvaliacaoWhereInput | PerguntaFichaAvaliacaoWhereInput[]
    OR?: PerguntaFichaAvaliacaoWhereInput[]
    NOT?: PerguntaFichaAvaliacaoWhereInput | PerguntaFichaAvaliacaoWhereInput[]
    id?: IntFilter<"PerguntaFichaAvaliacao"> | number
    competenciaId?: IntNullableFilter<"PerguntaFichaAvaliacao"> | number | null
    fichaAvaliacaoId?: IntNullableFilter<"PerguntaFichaAvaliacao"> | number | null
    descricao?: StringFilter<"PerguntaFichaAvaliacao"> | string
    nivel_esperado?: IntFilter<"PerguntaFichaAvaliacao"> | number
    createdAt?: DateTimeFilter<"PerguntaFichaAvaliacao"> | Date | string
    updatedAt?: DateTimeFilter<"PerguntaFichaAvaliacao"> | Date | string
    Competencia?: XOR<CompetenciaNullableRelationFilter, CompetenciaWhereInput> | null
    FichaAvaliacao?: XOR<FichaAvaliacaoNullableRelationFilter, FichaAvaliacaoWhereInput> | null
  }

  export type PerguntaFichaAvaliacaoOrderByWithRelationInput = {
    id?: SortOrder
    competenciaId?: SortOrderInput | SortOrder
    fichaAvaliacaoId?: SortOrderInput | SortOrder
    descricao?: SortOrder
    nivel_esperado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Competencia?: CompetenciaOrderByWithRelationInput
    FichaAvaliacao?: FichaAvaliacaoOrderByWithRelationInput
  }

  export type PerguntaFichaAvaliacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PerguntaFichaAvaliacaoWhereInput | PerguntaFichaAvaliacaoWhereInput[]
    OR?: PerguntaFichaAvaliacaoWhereInput[]
    NOT?: PerguntaFichaAvaliacaoWhereInput | PerguntaFichaAvaliacaoWhereInput[]
    competenciaId?: IntNullableFilter<"PerguntaFichaAvaliacao"> | number | null
    fichaAvaliacaoId?: IntNullableFilter<"PerguntaFichaAvaliacao"> | number | null
    descricao?: StringFilter<"PerguntaFichaAvaliacao"> | string
    nivel_esperado?: IntFilter<"PerguntaFichaAvaliacao"> | number
    createdAt?: DateTimeFilter<"PerguntaFichaAvaliacao"> | Date | string
    updatedAt?: DateTimeFilter<"PerguntaFichaAvaliacao"> | Date | string
    Competencia?: XOR<CompetenciaNullableRelationFilter, CompetenciaWhereInput> | null
    FichaAvaliacao?: XOR<FichaAvaliacaoNullableRelationFilter, FichaAvaliacaoWhereInput> | null
  }, "id">

  export type PerguntaFichaAvaliacaoOrderByWithAggregationInput = {
    id?: SortOrder
    competenciaId?: SortOrderInput | SortOrder
    fichaAvaliacaoId?: SortOrderInput | SortOrder
    descricao?: SortOrder
    nivel_esperado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PerguntaFichaAvaliacaoCountOrderByAggregateInput
    _avg?: PerguntaFichaAvaliacaoAvgOrderByAggregateInput
    _max?: PerguntaFichaAvaliacaoMaxOrderByAggregateInput
    _min?: PerguntaFichaAvaliacaoMinOrderByAggregateInput
    _sum?: PerguntaFichaAvaliacaoSumOrderByAggregateInput
  }

  export type PerguntaFichaAvaliacaoScalarWhereWithAggregatesInput = {
    AND?: PerguntaFichaAvaliacaoScalarWhereWithAggregatesInput | PerguntaFichaAvaliacaoScalarWhereWithAggregatesInput[]
    OR?: PerguntaFichaAvaliacaoScalarWhereWithAggregatesInput[]
    NOT?: PerguntaFichaAvaliacaoScalarWhereWithAggregatesInput | PerguntaFichaAvaliacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PerguntaFichaAvaliacao"> | number
    competenciaId?: IntNullableWithAggregatesFilter<"PerguntaFichaAvaliacao"> | number | null
    fichaAvaliacaoId?: IntNullableWithAggregatesFilter<"PerguntaFichaAvaliacao"> | number | null
    descricao?: StringWithAggregatesFilter<"PerguntaFichaAvaliacao"> | string
    nivel_esperado?: IntWithAggregatesFilter<"PerguntaFichaAvaliacao"> | number
    createdAt?: DateTimeWithAggregatesFilter<"PerguntaFichaAvaliacao"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PerguntaFichaAvaliacao"> | Date | string
  }

  export type AvaliacaoWhereInput = {
    AND?: AvaliacaoWhereInput | AvaliacaoWhereInput[]
    OR?: AvaliacaoWhereInput[]
    NOT?: AvaliacaoWhereInput | AvaliacaoWhereInput[]
    id?: IntFilter<"Avaliacao"> | number
    id_funcionario_avaliador?: IntNullableFilter<"Avaliacao"> | number | null
    id_fichaAvaliacao?: IntNullableFilter<"Avaliacao"> | number | null
    id_departamento?: IntNullableFilter<"Avaliacao"> | number | null
    Tipo_Avaliacao?: EnumTipoAvaliacaoFilter<"Avaliacao"> | $Enums.TipoAvaliacao
    status?: EnumStatusFilter<"Avaliacao"> | $Enums.Status
    data?: DateTimeFilter<"Avaliacao"> | Date | string
    comentario?: StringNullableFilter<"Avaliacao"> | string | null
    createdAt?: DateTimeFilter<"Avaliacao"> | Date | string
    updatedAt?: DateTimeFilter<"Avaliacao"> | Date | string
    Funcionario?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
    FichaAvaliacao?: XOR<FichaAvaliacaoNullableRelationFilter, FichaAvaliacaoWhereInput> | null
    Departamento?: XOR<DepartamentoNullableRelationFilter, DepartamentoWhereInput> | null
  }

  export type AvaliacaoOrderByWithRelationInput = {
    id?: SortOrder
    id_funcionario_avaliador?: SortOrderInput | SortOrder
    id_fichaAvaliacao?: SortOrderInput | SortOrder
    id_departamento?: SortOrderInput | SortOrder
    Tipo_Avaliacao?: SortOrder
    status?: SortOrder
    data?: SortOrder
    comentario?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Funcionario?: FuncionarioOrderByWithRelationInput
    FichaAvaliacao?: FichaAvaliacaoOrderByWithRelationInput
    Departamento?: DepartamentoOrderByWithRelationInput
  }

  export type AvaliacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AvaliacaoWhereInput | AvaliacaoWhereInput[]
    OR?: AvaliacaoWhereInput[]
    NOT?: AvaliacaoWhereInput | AvaliacaoWhereInput[]
    id_funcionario_avaliador?: IntNullableFilter<"Avaliacao"> | number | null
    id_fichaAvaliacao?: IntNullableFilter<"Avaliacao"> | number | null
    id_departamento?: IntNullableFilter<"Avaliacao"> | number | null
    Tipo_Avaliacao?: EnumTipoAvaliacaoFilter<"Avaliacao"> | $Enums.TipoAvaliacao
    status?: EnumStatusFilter<"Avaliacao"> | $Enums.Status
    data?: DateTimeFilter<"Avaliacao"> | Date | string
    comentario?: StringNullableFilter<"Avaliacao"> | string | null
    createdAt?: DateTimeFilter<"Avaliacao"> | Date | string
    updatedAt?: DateTimeFilter<"Avaliacao"> | Date | string
    Funcionario?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
    FichaAvaliacao?: XOR<FichaAvaliacaoNullableRelationFilter, FichaAvaliacaoWhereInput> | null
    Departamento?: XOR<DepartamentoNullableRelationFilter, DepartamentoWhereInput> | null
  }, "id">

  export type AvaliacaoOrderByWithAggregationInput = {
    id?: SortOrder
    id_funcionario_avaliador?: SortOrderInput | SortOrder
    id_fichaAvaliacao?: SortOrderInput | SortOrder
    id_departamento?: SortOrderInput | SortOrder
    Tipo_Avaliacao?: SortOrder
    status?: SortOrder
    data?: SortOrder
    comentario?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AvaliacaoCountOrderByAggregateInput
    _avg?: AvaliacaoAvgOrderByAggregateInput
    _max?: AvaliacaoMaxOrderByAggregateInput
    _min?: AvaliacaoMinOrderByAggregateInput
    _sum?: AvaliacaoSumOrderByAggregateInput
  }

  export type AvaliacaoScalarWhereWithAggregatesInput = {
    AND?: AvaliacaoScalarWhereWithAggregatesInput | AvaliacaoScalarWhereWithAggregatesInput[]
    OR?: AvaliacaoScalarWhereWithAggregatesInput[]
    NOT?: AvaliacaoScalarWhereWithAggregatesInput | AvaliacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Avaliacao"> | number
    id_funcionario_avaliador?: IntNullableWithAggregatesFilter<"Avaliacao"> | number | null
    id_fichaAvaliacao?: IntNullableWithAggregatesFilter<"Avaliacao"> | number | null
    id_departamento?: IntNullableWithAggregatesFilter<"Avaliacao"> | number | null
    Tipo_Avaliacao?: EnumTipoAvaliacaoWithAggregatesFilter<"Avaliacao"> | $Enums.TipoAvaliacao
    status?: EnumStatusWithAggregatesFilter<"Avaliacao"> | $Enums.Status
    data?: DateTimeWithAggregatesFilter<"Avaliacao"> | Date | string
    comentario?: StringNullableWithAggregatesFilter<"Avaliacao"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Avaliacao"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Avaliacao"> | Date | string
  }

  export type CarreiraCreateInput = {
    nome_carreira: string
    regime: $Enums.Regime
    createdAt?: Date | string
    updatedAt?: Date | string
    subcarreira?: SubCarreiraCreateNestedManyWithoutCarreiraInput
    cateroria?: CategoriaRHCreateNestedManyWithoutCarreiraInput
  }

  export type CarreiraUncheckedCreateInput = {
    id?: number
    nome_carreira: string
    regime: $Enums.Regime
    createdAt?: Date | string
    updatedAt?: Date | string
    subcarreira?: SubCarreiraUncheckedCreateNestedManyWithoutCarreiraInput
    cateroria?: CategoriaRHUncheckedCreateNestedManyWithoutCarreiraInput
  }

  export type CarreiraUpdateInput = {
    nome_carreira?: StringFieldUpdateOperationsInput | string
    regime?: EnumRegimeFieldUpdateOperationsInput | $Enums.Regime
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subcarreira?: SubCarreiraUpdateManyWithoutCarreiraNestedInput
    cateroria?: CategoriaRHUpdateManyWithoutCarreiraNestedInput
  }

  export type CarreiraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_carreira?: StringFieldUpdateOperationsInput | string
    regime?: EnumRegimeFieldUpdateOperationsInput | $Enums.Regime
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subcarreira?: SubCarreiraUncheckedUpdateManyWithoutCarreiraNestedInput
    cateroria?: CategoriaRHUncheckedUpdateManyWithoutCarreiraNestedInput
  }

  export type CarreiraCreateManyInput = {
    id?: number
    nome_carreira: string
    regime: $Enums.Regime
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CarreiraUpdateManyMutationInput = {
    nome_carreira?: StringFieldUpdateOperationsInput | string
    regime?: EnumRegimeFieldUpdateOperationsInput | $Enums.Regime
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CarreiraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_carreira?: StringFieldUpdateOperationsInput | string
    regime?: EnumRegimeFieldUpdateOperationsInput | $Enums.Regime
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubCarreiraCreateInput = {
    nome_SubCarreira: string
    createdAt?: Date | string
    updatedAt?: Date | string
    Carreira?: CarreiraCreateNestedOneWithoutSubcarreiraInput
    categoria?: CategoriaRHCreateNestedManyWithoutSubCarreiraInput
  }

  export type SubCarreiraUncheckedCreateInput = {
    id?: number
    nome_SubCarreira: string
    Id_carreira?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    categoria?: CategoriaRHUncheckedCreateNestedManyWithoutSubCarreiraInput
  }

  export type SubCarreiraUpdateInput = {
    nome_SubCarreira?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Carreira?: CarreiraUpdateOneWithoutSubcarreiraNestedInput
    categoria?: CategoriaRHUpdateManyWithoutSubCarreiraNestedInput
  }

  export type SubCarreiraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_SubCarreira?: StringFieldUpdateOperationsInput | string
    Id_carreira?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: CategoriaRHUncheckedUpdateManyWithoutSubCarreiraNestedInput
  }

  export type SubCarreiraCreateManyInput = {
    id?: number
    nome_SubCarreira: string
    Id_carreira?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubCarreiraUpdateManyMutationInput = {
    nome_SubCarreira?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubCarreiraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_SubCarreira?: StringFieldUpdateOperationsInput | string
    Id_carreira?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoriaRHCreateInput = {
    nome_categoria: string
    salario_base: number
    createdAt?: Date | string
    updatedAt?: Date | string
    Carreira?: CarreiraCreateNestedOneWithoutCateroriaInput
    SubCarreira?: SubCarreiraCreateNestedOneWithoutCategoriaInput
    funcionario?: FuncionarioCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaRHUncheckedCreateInput = {
    id?: number
    nome_categoria: string
    salario_base: number
    Id_carreira?: number | null
    Id_subCarreira?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    funcionario?: FuncionarioUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaRHUpdateInput = {
    nome_categoria?: StringFieldUpdateOperationsInput | string
    salario_base?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Carreira?: CarreiraUpdateOneWithoutCateroriaNestedInput
    SubCarreira?: SubCarreiraUpdateOneWithoutCategoriaNestedInput
    funcionario?: FuncionarioUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaRHUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_categoria?: StringFieldUpdateOperationsInput | string
    salario_base?: FloatFieldUpdateOperationsInput | number
    Id_carreira?: NullableIntFieldUpdateOperationsInput | number | null
    Id_subCarreira?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario?: FuncionarioUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaRHCreateManyInput = {
    id?: number
    nome_categoria: string
    salario_base: number
    Id_carreira?: number | null
    Id_subCarreira?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoriaRHUpdateManyMutationInput = {
    nome_categoria?: StringFieldUpdateOperationsInput | string
    salario_base?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoriaRHUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_categoria?: StringFieldUpdateOperationsInput | string
    salario_base?: FloatFieldUpdateOperationsInput | number
    Id_carreira?: NullableIntFieldUpdateOperationsInput | number | null
    Id_subCarreira?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncaoCreateInput = {
    nome_funcao: string
    createdAt?: Date | string
    updatedAt?: Date | string
    funcionario?: FuncionarioCreateNestedManyWithoutFuncaoInput
  }

  export type FuncaoUncheckedCreateInput = {
    id?: number
    nome_funcao: string
    createdAt?: Date | string
    updatedAt?: Date | string
    funcionario?: FuncionarioUncheckedCreateNestedManyWithoutFuncaoInput
  }

  export type FuncaoUpdateInput = {
    nome_funcao?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario?: FuncionarioUpdateManyWithoutFuncaoNestedInput
  }

  export type FuncaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_funcao?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario?: FuncionarioUncheckedUpdateManyWithoutFuncaoNestedInput
  }

  export type FuncaoCreateManyInput = {
    id?: number
    nome_funcao: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FuncaoUpdateManyMutationInput = {
    nome_funcao?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_funcao?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BancoCreateInput = {
    nome_banco: string
    codigo: string
    sigla: string
    createdAt?: Date | string
    updatedAt?: Date | string
    funcionario?: FuncionarioCreateNestedManyWithoutBancoInput
  }

  export type BancoUncheckedCreateInput = {
    id?: number
    nome_banco: string
    codigo: string
    sigla: string
    createdAt?: Date | string
    updatedAt?: Date | string
    funcionario?: FuncionarioUncheckedCreateNestedManyWithoutBancoInput
  }

  export type BancoUpdateInput = {
    nome_banco?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    sigla?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario?: FuncionarioUpdateManyWithoutBancoNestedInput
  }

  export type BancoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_banco?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    sigla?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario?: FuncionarioUncheckedUpdateManyWithoutBancoNestedInput
  }

  export type BancoCreateManyInput = {
    id?: number
    nome_banco: string
    codigo: string
    sigla: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BancoUpdateManyMutationInput = {
    nome_banco?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    sigla?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BancoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_banco?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    sigla?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioCreateInput = {
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    num_conta?: string | null
    iban?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Funcao?: FuncaoCreateNestedOneWithoutFuncionarioInput
    Categoria?: CategoriaRHCreateNestedOneWithoutFuncionarioInput
    dadosprofissionais?: DadosProfissionaisCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoCreateNestedManyWithoutFuncionarioInput
    Banco?: BancoCreateNestedOneWithoutFuncionarioInput
    avaliacao?: AvaliacaoCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioUncheckedCreateInput = {
    id?: number
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    id_funcao?: number | null
    id_categoria?: number | null
    num_conta?: string | null
    iban?: string | null
    Id_banco?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesUncheckedCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralUncheckedCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedCreateNestedManyWithoutFuncionarioInput
    avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioUpdateInput = {
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Funcao?: FuncaoUpdateOneWithoutFuncionarioNestedInput
    Categoria?: CategoriaRHUpdateOneWithoutFuncionarioNestedInput
    dadosprofissionais?: DadosProfissionaisUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUpdateManyWithoutFuncionarioNestedInput
    Banco?: BancoUpdateOneWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    id_funcao?: NullableIntFieldUpdateOperationsInput | number | null
    id_categoria?: NullableIntFieldUpdateOperationsInput | number | null
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    Id_banco?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUncheckedUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUncheckedUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUncheckedUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUncheckedUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedUpdateManyWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUncheckedUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioCreateManyInput = {
    id?: number
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    id_funcao?: number | null
    id_categoria?: number | null
    num_conta?: string | null
    iban?: string | null
    Id_banco?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FuncionarioUpdateManyMutationInput = {
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    id_funcao?: NullableIntFieldUpdateOperationsInput | number | null
    id_categoria?: NullableIntFieldUpdateOperationsInput | number | null
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    Id_banco?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DadosProfissionaisCreateInput = {
    data_admissao: Date | string
    numero_despacho?: string | null
    data_despacho: Date | string
    contrato: $Enums.Contrato
    createdAt?: Date | string
    updatedAt?: Date | string
    Funcionario?: FuncionarioCreateNestedOneWithoutDadosprofissionaisInput
  }

  export type DadosProfissionaisUncheckedCreateInput = {
    id?: number
    data_admissao: Date | string
    numero_despacho?: string | null
    data_despacho: Date | string
    contrato: $Enums.Contrato
    Id_funcionario?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DadosProfissionaisUpdateInput = {
    data_admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    numero_despacho?: NullableStringFieldUpdateOperationsInput | string | null
    data_despacho?: DateTimeFieldUpdateOperationsInput | Date | string
    contrato?: EnumContratoFieldUpdateOperationsInput | $Enums.Contrato
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Funcionario?: FuncionarioUpdateOneWithoutDadosprofissionaisNestedInput
  }

  export type DadosProfissionaisUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    numero_despacho?: NullableStringFieldUpdateOperationsInput | string | null
    data_despacho?: DateTimeFieldUpdateOperationsInput | Date | string
    contrato?: EnumContratoFieldUpdateOperationsInput | $Enums.Contrato
    Id_funcionario?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DadosProfissionaisCreateManyInput = {
    id?: number
    data_admissao: Date | string
    numero_despacho?: string | null
    data_despacho: Date | string
    contrato: $Enums.Contrato
    Id_funcionario?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DadosProfissionaisUpdateManyMutationInput = {
    data_admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    numero_despacho?: NullableStringFieldUpdateOperationsInput | string | null
    data_despacho?: DateTimeFieldUpdateOperationsInput | Date | string
    contrato?: EnumContratoFieldUpdateOperationsInput | $Enums.Contrato
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DadosProfissionaisUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    numero_despacho?: NullableStringFieldUpdateOperationsInput | string | null
    data_despacho?: DateTimeFieldUpdateOperationsInput | Date | string
    contrato?: EnumContratoFieldUpdateOperationsInput | $Enums.Contrato
    Id_funcionario?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormacoesCreateInput = {
    ano_inicio: Date | string
    ano_termino: Date | string
    formacao: string
    pais: string
    instituicao: string
    createdAt?: Date | string
    updatedAt?: Date | string
    Funcionario?: FuncionarioCreateNestedOneWithoutFormacoesInput
  }

  export type FormacoesUncheckedCreateInput = {
    id?: number
    ano_inicio: Date | string
    ano_termino: Date | string
    formacao: string
    pais: string
    instituicao: string
    Id_funcionario?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FormacoesUpdateInput = {
    ano_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    ano_termino?: DateTimeFieldUpdateOperationsInput | Date | string
    formacao?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    instituicao?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Funcionario?: FuncionarioUpdateOneWithoutFormacoesNestedInput
  }

  export type FormacoesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ano_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    ano_termino?: DateTimeFieldUpdateOperationsInput | Date | string
    formacao?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    instituicao?: StringFieldUpdateOperationsInput | string
    Id_funcionario?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormacoesCreateManyInput = {
    id?: number
    ano_inicio: Date | string
    ano_termino: Date | string
    formacao: string
    pais: string
    instituicao: string
    Id_funcionario?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FormacoesUpdateManyMutationInput = {
    ano_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    ano_termino?: DateTimeFieldUpdateOperationsInput | Date | string
    formacao?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    instituicao?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormacoesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ano_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    ano_termino?: DateTimeFieldUpdateOperationsInput | Date | string
    formacao?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    instituicao?: StringFieldUpdateOperationsInput | string
    Id_funcionario?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PublicacoesCreateInput = {
    titulo: string
    entidade: string
    ano: Date | string
    tipo: $Enums.Tipo
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PublicacoesUncheckedCreateInput = {
    id?: number
    titulo: string
    entidade: string
    ano: Date | string
    tipo: $Enums.Tipo
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PublicacoesUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    ano?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoFieldUpdateOperationsInput | $Enums.Tipo
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PublicacoesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    ano?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoFieldUpdateOperationsInput | $Enums.Tipo
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PublicacoesCreateManyInput = {
    id?: number
    titulo: string
    entidade: string
    ano: Date | string
    tipo: $Enums.Tipo
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PublicacoesUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    ano?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoFieldUpdateOperationsInput | $Enums.Tipo
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PublicacoesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    ano?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoFieldUpdateOperationsInput | $Enums.Tipo
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExperiencialLaboralCreateInput = {
    ano_inicio: Date | string
    ano_termino: Date | string
    funcao: string
    instituicao: string
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Funcionario?: FuncionarioCreateNestedOneWithoutEsperiencialaboralInput
  }

  export type ExperiencialLaboralUncheckedCreateInput = {
    id?: number
    ano_inicio: Date | string
    ano_termino: Date | string
    funcao: string
    instituicao: string
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Id_funcionario?: number | null
  }

  export type ExperiencialLaboralUpdateInput = {
    ano_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    ano_termino?: DateTimeFieldUpdateOperationsInput | Date | string
    funcao?: StringFieldUpdateOperationsInput | string
    instituicao?: StringFieldUpdateOperationsInput | string
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Funcionario?: FuncionarioUpdateOneWithoutEsperiencialaboralNestedInput
  }

  export type ExperiencialLaboralUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ano_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    ano_termino?: DateTimeFieldUpdateOperationsInput | Date | string
    funcao?: StringFieldUpdateOperationsInput | string
    instituicao?: StringFieldUpdateOperationsInput | string
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Id_funcionario?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ExperiencialLaboralCreateManyInput = {
    id?: number
    ano_inicio: Date | string
    ano_termino: Date | string
    funcao: string
    instituicao: string
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Id_funcionario?: number | null
  }

  export type ExperiencialLaboralUpdateManyMutationInput = {
    ano_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    ano_termino?: DateTimeFieldUpdateOperationsInput | Date | string
    funcao?: StringFieldUpdateOperationsInput | string
    instituicao?: StringFieldUpdateOperationsInput | string
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExperiencialLaboralUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ano_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    ano_termino?: DateTimeFieldUpdateOperationsInput | Date | string
    funcao?: StringFieldUpdateOperationsInput | string
    instituicao?: StringFieldUpdateOperationsInput | string
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Id_funcionario?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DepartamentoCreateInput = {
    nome_departamento: string
    createdAt?: Date | string
    updatedAt?: Date | string
    funcionario_chefe?: FuncionarioCreateNestedOneWithoutDepartamentosComoChefeInput
    funcionario_supervisor?: FuncionarioCreateNestedOneWithoutDepartamentosComoSupervisorInput
    avaliacao?: AvaliacaoCreateNestedManyWithoutDepartamentoInput
    funcionariodepartamento?: FuncionarioDepartamentoCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoUncheckedCreateInput = {
    id?: number
    nome_departamento: string
    Id_funcionario_chefe?: number | null
    Id_funcionario_supervisor?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutDepartamentoInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoUpdateInput = {
    nome_departamento?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario_chefe?: FuncionarioUpdateOneWithoutDepartamentosComoChefeNestedInput
    funcionario_supervisor?: FuncionarioUpdateOneWithoutDepartamentosComoSupervisorNestedInput
    avaliacao?: AvaliacaoUpdateManyWithoutDepartamentoNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_departamento?: StringFieldUpdateOperationsInput | string
    Id_funcionario_chefe?: NullableIntFieldUpdateOperationsInput | number | null
    Id_funcionario_supervisor?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliacao?: AvaliacaoUncheckedUpdateManyWithoutDepartamentoNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoCreateManyInput = {
    id?: number
    nome_departamento: string
    Id_funcionario_chefe?: number | null
    Id_funcionario_supervisor?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DepartamentoUpdateManyMutationInput = {
    nome_departamento?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DepartamentoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_departamento?: StringFieldUpdateOperationsInput | string
    Id_funcionario_chefe?: NullableIntFieldUpdateOperationsInput | number | null
    Id_funcionario_supervisor?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioDepartamentoCreateInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    Departamento?: DepartamentoCreateNestedOneWithoutFuncionariodepartamentoInput
    Funcionario?: FuncionarioCreateNestedOneWithoutFuncionariodepartamentoInput
  }

  export type FuncionarioDepartamentoUncheckedCreateInput = {
    id?: number
    Id_departamento?: number | null
    Id_funcionario?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FuncionarioDepartamentoUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Departamento?: DepartamentoUpdateOneWithoutFuncionariodepartamentoNestedInput
    Funcionario?: FuncionarioUpdateOneWithoutFuncionariodepartamentoNestedInput
  }

  export type FuncionarioDepartamentoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    Id_departamento?: NullableIntFieldUpdateOperationsInput | number | null
    Id_funcionario?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioDepartamentoCreateManyInput = {
    id?: number
    Id_departamento?: number | null
    Id_funcionario?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FuncionarioDepartamentoUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioDepartamentoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    Id_departamento?: NullableIntFieldUpdateOperationsInput | number | null
    Id_funcionario?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FichaAvaliacaoCreateInput = {
    nome_ficha: string
    objetivo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoCreateNestedManyWithoutFichaAvaliacaoInput
    avaliacao?: AvaliacaoCreateNestedManyWithoutFichaAvaliacaoInput
  }

  export type FichaAvaliacaoUncheckedCreateInput = {
    id?: number
    nome_ficha: string
    objetivo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoUncheckedCreateNestedManyWithoutFichaAvaliacaoInput
    avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutFichaAvaliacaoInput
  }

  export type FichaAvaliacaoUpdateInput = {
    nome_ficha?: StringFieldUpdateOperationsInput | string
    objetivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoUpdateManyWithoutFichaAvaliacaoNestedInput
    avaliacao?: AvaliacaoUpdateManyWithoutFichaAvaliacaoNestedInput
  }

  export type FichaAvaliacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_ficha?: StringFieldUpdateOperationsInput | string
    objetivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoUncheckedUpdateManyWithoutFichaAvaliacaoNestedInput
    avaliacao?: AvaliacaoUncheckedUpdateManyWithoutFichaAvaliacaoNestedInput
  }

  export type FichaAvaliacaoCreateManyInput = {
    id?: number
    nome_ficha: string
    objetivo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FichaAvaliacaoUpdateManyMutationInput = {
    nome_ficha?: StringFieldUpdateOperationsInput | string
    objetivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FichaAvaliacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_ficha?: StringFieldUpdateOperationsInput | string
    objetivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompetenciaCreateInput = {
    nome_competencia: string
    criterio: $Enums.Criterio
    createdAt?: Date | string
    updatedAt?: Date | string
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoCreateNestedManyWithoutCompetenciaInput
  }

  export type CompetenciaUncheckedCreateInput = {
    id?: number
    nome_competencia: string
    criterio: $Enums.Criterio
    createdAt?: Date | string
    updatedAt?: Date | string
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoUncheckedCreateNestedManyWithoutCompetenciaInput
  }

  export type CompetenciaUpdateInput = {
    nome_competencia?: StringFieldUpdateOperationsInput | string
    criterio?: EnumCriterioFieldUpdateOperationsInput | $Enums.Criterio
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoUpdateManyWithoutCompetenciaNestedInput
  }

  export type CompetenciaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_competencia?: StringFieldUpdateOperationsInput | string
    criterio?: EnumCriterioFieldUpdateOperationsInput | $Enums.Criterio
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoUncheckedUpdateManyWithoutCompetenciaNestedInput
  }

  export type CompetenciaCreateManyInput = {
    id?: number
    nome_competencia: string
    criterio: $Enums.Criterio
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CompetenciaUpdateManyMutationInput = {
    nome_competencia?: StringFieldUpdateOperationsInput | string
    criterio?: EnumCriterioFieldUpdateOperationsInput | $Enums.Criterio
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompetenciaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_competencia?: StringFieldUpdateOperationsInput | string
    criterio?: EnumCriterioFieldUpdateOperationsInput | $Enums.Criterio
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PerguntaFichaAvaliacaoCreateInput = {
    descricao: string
    nivel_esperado: number
    createdAt?: Date | string
    updatedAt?: Date | string
    Competencia?: CompetenciaCreateNestedOneWithoutPerguntafichaavaliacaoInput
    FichaAvaliacao?: FichaAvaliacaoCreateNestedOneWithoutPerguntafichaavaliacaoInput
  }

  export type PerguntaFichaAvaliacaoUncheckedCreateInput = {
    id?: number
    competenciaId?: number | null
    fichaAvaliacaoId?: number | null
    descricao: string
    nivel_esperado: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PerguntaFichaAvaliacaoUpdateInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    nivel_esperado?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Competencia?: CompetenciaUpdateOneWithoutPerguntafichaavaliacaoNestedInput
    FichaAvaliacao?: FichaAvaliacaoUpdateOneWithoutPerguntafichaavaliacaoNestedInput
  }

  export type PerguntaFichaAvaliacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    competenciaId?: NullableIntFieldUpdateOperationsInput | number | null
    fichaAvaliacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    descricao?: StringFieldUpdateOperationsInput | string
    nivel_esperado?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PerguntaFichaAvaliacaoCreateManyInput = {
    id?: number
    competenciaId?: number | null
    fichaAvaliacaoId?: number | null
    descricao: string
    nivel_esperado: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PerguntaFichaAvaliacaoUpdateManyMutationInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    nivel_esperado?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PerguntaFichaAvaliacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    competenciaId?: NullableIntFieldUpdateOperationsInput | number | null
    fichaAvaliacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    descricao?: StringFieldUpdateOperationsInput | string
    nivel_esperado?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AvaliacaoCreateInput = {
    Tipo_Avaliacao: $Enums.TipoAvaliacao
    status: $Enums.Status
    data?: Date | string
    comentario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Funcionario?: FuncionarioCreateNestedOneWithoutAvaliacaoInput
    FichaAvaliacao?: FichaAvaliacaoCreateNestedOneWithoutAvaliacaoInput
    Departamento?: DepartamentoCreateNestedOneWithoutAvaliacaoInput
  }

  export type AvaliacaoUncheckedCreateInput = {
    id?: number
    id_funcionario_avaliador?: number | null
    id_fichaAvaliacao?: number | null
    id_departamento?: number | null
    Tipo_Avaliacao: $Enums.TipoAvaliacao
    status: $Enums.Status
    data?: Date | string
    comentario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AvaliacaoUpdateInput = {
    Tipo_Avaliacao?: EnumTipoAvaliacaoFieldUpdateOperationsInput | $Enums.TipoAvaliacao
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Funcionario?: FuncionarioUpdateOneWithoutAvaliacaoNestedInput
    FichaAvaliacao?: FichaAvaliacaoUpdateOneWithoutAvaliacaoNestedInput
    Departamento?: DepartamentoUpdateOneWithoutAvaliacaoNestedInput
  }

  export type AvaliacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_funcionario_avaliador?: NullableIntFieldUpdateOperationsInput | number | null
    id_fichaAvaliacao?: NullableIntFieldUpdateOperationsInput | number | null
    id_departamento?: NullableIntFieldUpdateOperationsInput | number | null
    Tipo_Avaliacao?: EnumTipoAvaliacaoFieldUpdateOperationsInput | $Enums.TipoAvaliacao
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AvaliacaoCreateManyInput = {
    id?: number
    id_funcionario_avaliador?: number | null
    id_fichaAvaliacao?: number | null
    id_departamento?: number | null
    Tipo_Avaliacao: $Enums.TipoAvaliacao
    status: $Enums.Status
    data?: Date | string
    comentario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AvaliacaoUpdateManyMutationInput = {
    Tipo_Avaliacao?: EnumTipoAvaliacaoFieldUpdateOperationsInput | $Enums.TipoAvaliacao
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AvaliacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_funcionario_avaliador?: NullableIntFieldUpdateOperationsInput | number | null
    id_fichaAvaliacao?: NullableIntFieldUpdateOperationsInput | number | null
    id_departamento?: NullableIntFieldUpdateOperationsInput | number | null
    Tipo_Avaliacao?: EnumTipoAvaliacaoFieldUpdateOperationsInput | $Enums.TipoAvaliacao
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type EnumRegimeFilter<$PrismaModel = never> = {
    equals?: $Enums.Regime | EnumRegimeFieldRefInput<$PrismaModel>
    in?: $Enums.Regime[] | ListEnumRegimeFieldRefInput<$PrismaModel>
    notIn?: $Enums.Regime[] | ListEnumRegimeFieldRefInput<$PrismaModel>
    not?: NestedEnumRegimeFilter<$PrismaModel> | $Enums.Regime
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type SubCarreiraListRelationFilter = {
    every?: SubCarreiraWhereInput
    some?: SubCarreiraWhereInput
    none?: SubCarreiraWhereInput
  }

  export type CategoriaRHListRelationFilter = {
    every?: CategoriaRHWhereInput
    some?: CategoriaRHWhereInput
    none?: CategoriaRHWhereInput
  }

  export type SubCarreiraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoriaRHOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CarreiraCountOrderByAggregateInput = {
    id?: SortOrder
    nome_carreira?: SortOrder
    regime?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CarreiraAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CarreiraMaxOrderByAggregateInput = {
    id?: SortOrder
    nome_carreira?: SortOrder
    regime?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CarreiraMinOrderByAggregateInput = {
    id?: SortOrder
    nome_carreira?: SortOrder
    regime?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CarreiraSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type EnumRegimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Regime | EnumRegimeFieldRefInput<$PrismaModel>
    in?: $Enums.Regime[] | ListEnumRegimeFieldRefInput<$PrismaModel>
    notIn?: $Enums.Regime[] | ListEnumRegimeFieldRefInput<$PrismaModel>
    not?: NestedEnumRegimeWithAggregatesFilter<$PrismaModel> | $Enums.Regime
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRegimeFilter<$PrismaModel>
    _max?: NestedEnumRegimeFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type CarreiraNullableRelationFilter = {
    is?: CarreiraWhereInput | null
    isNot?: CarreiraWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type SubCarreiraCountOrderByAggregateInput = {
    id?: SortOrder
    nome_SubCarreira?: SortOrder
    Id_carreira?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubCarreiraAvgOrderByAggregateInput = {
    id?: SortOrder
    Id_carreira?: SortOrder
  }

  export type SubCarreiraMaxOrderByAggregateInput = {
    id?: SortOrder
    nome_SubCarreira?: SortOrder
    Id_carreira?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubCarreiraMinOrderByAggregateInput = {
    id?: SortOrder
    nome_SubCarreira?: SortOrder
    Id_carreira?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubCarreiraSumOrderByAggregateInput = {
    id?: SortOrder
    Id_carreira?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type SubCarreiraNullableRelationFilter = {
    is?: SubCarreiraWhereInput | null
    isNot?: SubCarreiraWhereInput | null
  }

  export type FuncionarioListRelationFilter = {
    every?: FuncionarioWhereInput
    some?: FuncionarioWhereInput
    none?: FuncionarioWhereInput
  }

  export type FuncionarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoriaRHCountOrderByAggregateInput = {
    id?: SortOrder
    nome_categoria?: SortOrder
    salario_base?: SortOrder
    Id_carreira?: SortOrder
    Id_subCarreira?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoriaRHAvgOrderByAggregateInput = {
    id?: SortOrder
    salario_base?: SortOrder
    Id_carreira?: SortOrder
    Id_subCarreira?: SortOrder
  }

  export type CategoriaRHMaxOrderByAggregateInput = {
    id?: SortOrder
    nome_categoria?: SortOrder
    salario_base?: SortOrder
    Id_carreira?: SortOrder
    Id_subCarreira?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoriaRHMinOrderByAggregateInput = {
    id?: SortOrder
    nome_categoria?: SortOrder
    salario_base?: SortOrder
    Id_carreira?: SortOrder
    Id_subCarreira?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoriaRHSumOrderByAggregateInput = {
    id?: SortOrder
    salario_base?: SortOrder
    Id_carreira?: SortOrder
    Id_subCarreira?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type FuncaoCountOrderByAggregateInput = {
    id?: SortOrder
    nome_funcao?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FuncaoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type FuncaoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome_funcao?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FuncaoMinOrderByAggregateInput = {
    id?: SortOrder
    nome_funcao?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FuncaoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BancoCountOrderByAggregateInput = {
    id?: SortOrder
    nome_banco?: SortOrder
    codigo?: SortOrder
    sigla?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BancoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BancoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome_banco?: SortOrder
    codigo?: SortOrder
    sigla?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BancoMinOrderByAggregateInput = {
    id?: SortOrder
    nome_banco?: SortOrder
    codigo?: SortOrder
    sigla?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BancoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumGeneroFilter<$PrismaModel = never> = {
    equals?: $Enums.Genero | EnumGeneroFieldRefInput<$PrismaModel>
    in?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    notIn?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    not?: NestedEnumGeneroFilter<$PrismaModel> | $Enums.Genero
  }

  export type EnumIdentificacaoFilter<$PrismaModel = never> = {
    equals?: $Enums.Identificacao | EnumIdentificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.Identificacao[] | ListEnumIdentificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.Identificacao[] | ListEnumIdentificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumIdentificacaoFilter<$PrismaModel> | $Enums.Identificacao
  }

  export type EnumNIVEL_ACADEMICOFilter<$PrismaModel = never> = {
    equals?: $Enums.NIVEL_ACADEMICO | EnumNIVEL_ACADEMICOFieldRefInput<$PrismaModel>
    in?: $Enums.NIVEL_ACADEMICO[] | ListEnumNIVEL_ACADEMICOFieldRefInput<$PrismaModel>
    notIn?: $Enums.NIVEL_ACADEMICO[] | ListEnumNIVEL_ACADEMICOFieldRefInput<$PrismaModel>
    not?: NestedEnumNIVEL_ACADEMICOFilter<$PrismaModel> | $Enums.NIVEL_ACADEMICO
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type FuncaoNullableRelationFilter = {
    is?: FuncaoWhereInput | null
    isNot?: FuncaoWhereInput | null
  }

  export type CategoriaRHNullableRelationFilter = {
    is?: CategoriaRHWhereInput | null
    isNot?: CategoriaRHWhereInput | null
  }

  export type DadosProfissionaisListRelationFilter = {
    every?: DadosProfissionaisWhereInput
    some?: DadosProfissionaisWhereInput
    none?: DadosProfissionaisWhereInput
  }

  export type FormacoesListRelationFilter = {
    every?: FormacoesWhereInput
    some?: FormacoesWhereInput
    none?: FormacoesWhereInput
  }

  export type ExperiencialLaboralListRelationFilter = {
    every?: ExperiencialLaboralWhereInput
    some?: ExperiencialLaboralWhereInput
    none?: ExperiencialLaboralWhereInput
  }

  export type DepartamentoListRelationFilter = {
    every?: DepartamentoWhereInput
    some?: DepartamentoWhereInput
    none?: DepartamentoWhereInput
  }

  export type FuncionarioDepartamentoListRelationFilter = {
    every?: FuncionarioDepartamentoWhereInput
    some?: FuncionarioDepartamentoWhereInput
    none?: FuncionarioDepartamentoWhereInput
  }

  export type BancoNullableRelationFilter = {
    is?: BancoWhereInput | null
    isNot?: BancoWhereInput | null
  }

  export type AvaliacaoListRelationFilter = {
    every?: AvaliacaoWhereInput
    some?: AvaliacaoWhereInput
    none?: AvaliacaoWhereInput
  }

  export type DadosProfissionaisOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FormacoesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ExperiencialLaboralOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DepartamentoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FuncionarioDepartamentoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AvaliacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FuncionarioCountOrderByAggregateInput = {
    id?: SortOrder
    nome_completo?: SortOrder
    nome_pai?: SortOrder
    nome_mae?: SortOrder
    nascimento?: SortOrder
    email?: SortOrder
    genero?: SortOrder
    tipo_identificacao?: SortOrder
    num_identificacao?: SortOrder
    nivel_academico?: SortOrder
    avatar?: SortOrder
    telefone1?: SortOrder
    telefone2?: SortOrder
    linkedin?: SortOrder
    whatsApp?: SortOrder
    instagram?: SortOrder
    bairro?: SortOrder
    rua?: SortOrder
    id_funcao?: SortOrder
    id_categoria?: SortOrder
    num_conta?: SortOrder
    iban?: SortOrder
    Id_banco?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FuncionarioAvgOrderByAggregateInput = {
    id?: SortOrder
    id_funcao?: SortOrder
    id_categoria?: SortOrder
    Id_banco?: SortOrder
  }

  export type FuncionarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nome_completo?: SortOrder
    nome_pai?: SortOrder
    nome_mae?: SortOrder
    nascimento?: SortOrder
    email?: SortOrder
    genero?: SortOrder
    tipo_identificacao?: SortOrder
    num_identificacao?: SortOrder
    nivel_academico?: SortOrder
    avatar?: SortOrder
    telefone1?: SortOrder
    telefone2?: SortOrder
    linkedin?: SortOrder
    whatsApp?: SortOrder
    instagram?: SortOrder
    bairro?: SortOrder
    rua?: SortOrder
    id_funcao?: SortOrder
    id_categoria?: SortOrder
    num_conta?: SortOrder
    iban?: SortOrder
    Id_banco?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FuncionarioMinOrderByAggregateInput = {
    id?: SortOrder
    nome_completo?: SortOrder
    nome_pai?: SortOrder
    nome_mae?: SortOrder
    nascimento?: SortOrder
    email?: SortOrder
    genero?: SortOrder
    tipo_identificacao?: SortOrder
    num_identificacao?: SortOrder
    nivel_academico?: SortOrder
    avatar?: SortOrder
    telefone1?: SortOrder
    telefone2?: SortOrder
    linkedin?: SortOrder
    whatsApp?: SortOrder
    instagram?: SortOrder
    bairro?: SortOrder
    rua?: SortOrder
    id_funcao?: SortOrder
    id_categoria?: SortOrder
    num_conta?: SortOrder
    iban?: SortOrder
    Id_banco?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FuncionarioSumOrderByAggregateInput = {
    id?: SortOrder
    id_funcao?: SortOrder
    id_categoria?: SortOrder
    Id_banco?: SortOrder
  }

  export type EnumGeneroWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Genero | EnumGeneroFieldRefInput<$PrismaModel>
    in?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    notIn?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    not?: NestedEnumGeneroWithAggregatesFilter<$PrismaModel> | $Enums.Genero
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGeneroFilter<$PrismaModel>
    _max?: NestedEnumGeneroFilter<$PrismaModel>
  }

  export type EnumIdentificacaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Identificacao | EnumIdentificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.Identificacao[] | ListEnumIdentificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.Identificacao[] | ListEnumIdentificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumIdentificacaoWithAggregatesFilter<$PrismaModel> | $Enums.Identificacao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumIdentificacaoFilter<$PrismaModel>
    _max?: NestedEnumIdentificacaoFilter<$PrismaModel>
  }

  export type EnumNIVEL_ACADEMICOWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NIVEL_ACADEMICO | EnumNIVEL_ACADEMICOFieldRefInput<$PrismaModel>
    in?: $Enums.NIVEL_ACADEMICO[] | ListEnumNIVEL_ACADEMICOFieldRefInput<$PrismaModel>
    notIn?: $Enums.NIVEL_ACADEMICO[] | ListEnumNIVEL_ACADEMICOFieldRefInput<$PrismaModel>
    not?: NestedEnumNIVEL_ACADEMICOWithAggregatesFilter<$PrismaModel> | $Enums.NIVEL_ACADEMICO
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNIVEL_ACADEMICOFilter<$PrismaModel>
    _max?: NestedEnumNIVEL_ACADEMICOFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumContratoFilter<$PrismaModel = never> = {
    equals?: $Enums.Contrato | EnumContratoFieldRefInput<$PrismaModel>
    in?: $Enums.Contrato[] | ListEnumContratoFieldRefInput<$PrismaModel>
    notIn?: $Enums.Contrato[] | ListEnumContratoFieldRefInput<$PrismaModel>
    not?: NestedEnumContratoFilter<$PrismaModel> | $Enums.Contrato
  }

  export type FuncionarioNullableRelationFilter = {
    is?: FuncionarioWhereInput | null
    isNot?: FuncionarioWhereInput | null
  }

  export type DadosProfissionaisCountOrderByAggregateInput = {
    id?: SortOrder
    data_admissao?: SortOrder
    numero_despacho?: SortOrder
    data_despacho?: SortOrder
    contrato?: SortOrder
    Id_funcionario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DadosProfissionaisAvgOrderByAggregateInput = {
    id?: SortOrder
    Id_funcionario?: SortOrder
  }

  export type DadosProfissionaisMaxOrderByAggregateInput = {
    id?: SortOrder
    data_admissao?: SortOrder
    numero_despacho?: SortOrder
    data_despacho?: SortOrder
    contrato?: SortOrder
    Id_funcionario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DadosProfissionaisMinOrderByAggregateInput = {
    id?: SortOrder
    data_admissao?: SortOrder
    numero_despacho?: SortOrder
    data_despacho?: SortOrder
    contrato?: SortOrder
    Id_funcionario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DadosProfissionaisSumOrderByAggregateInput = {
    id?: SortOrder
    Id_funcionario?: SortOrder
  }

  export type EnumContratoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Contrato | EnumContratoFieldRefInput<$PrismaModel>
    in?: $Enums.Contrato[] | ListEnumContratoFieldRefInput<$PrismaModel>
    notIn?: $Enums.Contrato[] | ListEnumContratoFieldRefInput<$PrismaModel>
    not?: NestedEnumContratoWithAggregatesFilter<$PrismaModel> | $Enums.Contrato
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumContratoFilter<$PrismaModel>
    _max?: NestedEnumContratoFilter<$PrismaModel>
  }

  export type FormacoesCountOrderByAggregateInput = {
    id?: SortOrder
    ano_inicio?: SortOrder
    ano_termino?: SortOrder
    formacao?: SortOrder
    pais?: SortOrder
    instituicao?: SortOrder
    Id_funcionario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FormacoesAvgOrderByAggregateInput = {
    id?: SortOrder
    Id_funcionario?: SortOrder
  }

  export type FormacoesMaxOrderByAggregateInput = {
    id?: SortOrder
    ano_inicio?: SortOrder
    ano_termino?: SortOrder
    formacao?: SortOrder
    pais?: SortOrder
    instituicao?: SortOrder
    Id_funcionario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FormacoesMinOrderByAggregateInput = {
    id?: SortOrder
    ano_inicio?: SortOrder
    ano_termino?: SortOrder
    formacao?: SortOrder
    pais?: SortOrder
    instituicao?: SortOrder
    Id_funcionario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FormacoesSumOrderByAggregateInput = {
    id?: SortOrder
    Id_funcionario?: SortOrder
  }

  export type EnumTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.Tipo | EnumTipoFieldRefInput<$PrismaModel>
    in?: $Enums.Tipo[] | ListEnumTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.Tipo[] | ListEnumTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoFilter<$PrismaModel> | $Enums.Tipo
  }

  export type PublicacoesCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    entidade?: SortOrder
    ano?: SortOrder
    tipo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PublicacoesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PublicacoesMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    entidade?: SortOrder
    ano?: SortOrder
    tipo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PublicacoesMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    entidade?: SortOrder
    ano?: SortOrder
    tipo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PublicacoesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Tipo | EnumTipoFieldRefInput<$PrismaModel>
    in?: $Enums.Tipo[] | ListEnumTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.Tipo[] | ListEnumTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoWithAggregatesFilter<$PrismaModel> | $Enums.Tipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoFilter<$PrismaModel>
    _max?: NestedEnumTipoFilter<$PrismaModel>
  }

  export type ExperiencialLaboralCountOrderByAggregateInput = {
    id?: SortOrder
    ano_inicio?: SortOrder
    ano_termino?: SortOrder
    funcao?: SortOrder
    instituicao?: SortOrder
    pais?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Id_funcionario?: SortOrder
  }

  export type ExperiencialLaboralAvgOrderByAggregateInput = {
    id?: SortOrder
    Id_funcionario?: SortOrder
  }

  export type ExperiencialLaboralMaxOrderByAggregateInput = {
    id?: SortOrder
    ano_inicio?: SortOrder
    ano_termino?: SortOrder
    funcao?: SortOrder
    instituicao?: SortOrder
    pais?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Id_funcionario?: SortOrder
  }

  export type ExperiencialLaboralMinOrderByAggregateInput = {
    id?: SortOrder
    ano_inicio?: SortOrder
    ano_termino?: SortOrder
    funcao?: SortOrder
    instituicao?: SortOrder
    pais?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Id_funcionario?: SortOrder
  }

  export type ExperiencialLaboralSumOrderByAggregateInput = {
    id?: SortOrder
    Id_funcionario?: SortOrder
  }

  export type DepartamentoCountOrderByAggregateInput = {
    id?: SortOrder
    nome_departamento?: SortOrder
    Id_funcionario_chefe?: SortOrder
    Id_funcionario_supervisor?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DepartamentoAvgOrderByAggregateInput = {
    id?: SortOrder
    Id_funcionario_chefe?: SortOrder
    Id_funcionario_supervisor?: SortOrder
  }

  export type DepartamentoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome_departamento?: SortOrder
    Id_funcionario_chefe?: SortOrder
    Id_funcionario_supervisor?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DepartamentoMinOrderByAggregateInput = {
    id?: SortOrder
    nome_departamento?: SortOrder
    Id_funcionario_chefe?: SortOrder
    Id_funcionario_supervisor?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DepartamentoSumOrderByAggregateInput = {
    id?: SortOrder
    Id_funcionario_chefe?: SortOrder
    Id_funcionario_supervisor?: SortOrder
  }

  export type DepartamentoNullableRelationFilter = {
    is?: DepartamentoWhereInput | null
    isNot?: DepartamentoWhereInput | null
  }

  export type FuncionarioDepartamentoCountOrderByAggregateInput = {
    id?: SortOrder
    Id_departamento?: SortOrder
    Id_funcionario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FuncionarioDepartamentoAvgOrderByAggregateInput = {
    id?: SortOrder
    Id_departamento?: SortOrder
    Id_funcionario?: SortOrder
  }

  export type FuncionarioDepartamentoMaxOrderByAggregateInput = {
    id?: SortOrder
    Id_departamento?: SortOrder
    Id_funcionario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FuncionarioDepartamentoMinOrderByAggregateInput = {
    id?: SortOrder
    Id_departamento?: SortOrder
    Id_funcionario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FuncionarioDepartamentoSumOrderByAggregateInput = {
    id?: SortOrder
    Id_departamento?: SortOrder
    Id_funcionario?: SortOrder
  }

  export type PerguntaFichaAvaliacaoListRelationFilter = {
    every?: PerguntaFichaAvaliacaoWhereInput
    some?: PerguntaFichaAvaliacaoWhereInput
    none?: PerguntaFichaAvaliacaoWhereInput
  }

  export type PerguntaFichaAvaliacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FichaAvaliacaoCountOrderByAggregateInput = {
    id?: SortOrder
    nome_ficha?: SortOrder
    objetivo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FichaAvaliacaoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type FichaAvaliacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome_ficha?: SortOrder
    objetivo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FichaAvaliacaoMinOrderByAggregateInput = {
    id?: SortOrder
    nome_ficha?: SortOrder
    objetivo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FichaAvaliacaoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumCriterioFilter<$PrismaModel = never> = {
    equals?: $Enums.Criterio | EnumCriterioFieldRefInput<$PrismaModel>
    in?: $Enums.Criterio[] | ListEnumCriterioFieldRefInput<$PrismaModel>
    notIn?: $Enums.Criterio[] | ListEnumCriterioFieldRefInput<$PrismaModel>
    not?: NestedEnumCriterioFilter<$PrismaModel> | $Enums.Criterio
  }

  export type CompetenciaCountOrderByAggregateInput = {
    id?: SortOrder
    nome_competencia?: SortOrder
    criterio?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CompetenciaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CompetenciaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome_competencia?: SortOrder
    criterio?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CompetenciaMinOrderByAggregateInput = {
    id?: SortOrder
    nome_competencia?: SortOrder
    criterio?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CompetenciaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumCriterioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Criterio | EnumCriterioFieldRefInput<$PrismaModel>
    in?: $Enums.Criterio[] | ListEnumCriterioFieldRefInput<$PrismaModel>
    notIn?: $Enums.Criterio[] | ListEnumCriterioFieldRefInput<$PrismaModel>
    not?: NestedEnumCriterioWithAggregatesFilter<$PrismaModel> | $Enums.Criterio
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCriterioFilter<$PrismaModel>
    _max?: NestedEnumCriterioFilter<$PrismaModel>
  }

  export type CompetenciaNullableRelationFilter = {
    is?: CompetenciaWhereInput | null
    isNot?: CompetenciaWhereInput | null
  }

  export type FichaAvaliacaoNullableRelationFilter = {
    is?: FichaAvaliacaoWhereInput | null
    isNot?: FichaAvaliacaoWhereInput | null
  }

  export type PerguntaFichaAvaliacaoCountOrderByAggregateInput = {
    id?: SortOrder
    competenciaId?: SortOrder
    fichaAvaliacaoId?: SortOrder
    descricao?: SortOrder
    nivel_esperado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PerguntaFichaAvaliacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    competenciaId?: SortOrder
    fichaAvaliacaoId?: SortOrder
    nivel_esperado?: SortOrder
  }

  export type PerguntaFichaAvaliacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    competenciaId?: SortOrder
    fichaAvaliacaoId?: SortOrder
    descricao?: SortOrder
    nivel_esperado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PerguntaFichaAvaliacaoMinOrderByAggregateInput = {
    id?: SortOrder
    competenciaId?: SortOrder
    fichaAvaliacaoId?: SortOrder
    descricao?: SortOrder
    nivel_esperado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PerguntaFichaAvaliacaoSumOrderByAggregateInput = {
    id?: SortOrder
    competenciaId?: SortOrder
    fichaAvaliacaoId?: SortOrder
    nivel_esperado?: SortOrder
  }

  export type EnumTipoAvaliacaoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoAvaliacao | EnumTipoAvaliacaoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoAvaliacao[] | ListEnumTipoAvaliacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoAvaliacao[] | ListEnumTipoAvaliacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoAvaliacaoFilter<$PrismaModel> | $Enums.TipoAvaliacao
  }

  export type EnumStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.Status | EnumStatusFieldRefInput<$PrismaModel>
    in?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusFilter<$PrismaModel> | $Enums.Status
  }

  export type AvaliacaoCountOrderByAggregateInput = {
    id?: SortOrder
    id_funcionario_avaliador?: SortOrder
    id_fichaAvaliacao?: SortOrder
    id_departamento?: SortOrder
    Tipo_Avaliacao?: SortOrder
    status?: SortOrder
    data?: SortOrder
    comentario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AvaliacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    id_funcionario_avaliador?: SortOrder
    id_fichaAvaliacao?: SortOrder
    id_departamento?: SortOrder
  }

  export type AvaliacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    id_funcionario_avaliador?: SortOrder
    id_fichaAvaliacao?: SortOrder
    id_departamento?: SortOrder
    Tipo_Avaliacao?: SortOrder
    status?: SortOrder
    data?: SortOrder
    comentario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AvaliacaoMinOrderByAggregateInput = {
    id?: SortOrder
    id_funcionario_avaliador?: SortOrder
    id_fichaAvaliacao?: SortOrder
    id_departamento?: SortOrder
    Tipo_Avaliacao?: SortOrder
    status?: SortOrder
    data?: SortOrder
    comentario?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AvaliacaoSumOrderByAggregateInput = {
    id?: SortOrder
    id_funcionario_avaliador?: SortOrder
    id_fichaAvaliacao?: SortOrder
    id_departamento?: SortOrder
  }

  export type EnumTipoAvaliacaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoAvaliacao | EnumTipoAvaliacaoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoAvaliacao[] | ListEnumTipoAvaliacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoAvaliacao[] | ListEnumTipoAvaliacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoAvaliacaoWithAggregatesFilter<$PrismaModel> | $Enums.TipoAvaliacao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoAvaliacaoFilter<$PrismaModel>
    _max?: NestedEnumTipoAvaliacaoFilter<$PrismaModel>
  }

  export type EnumStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Status | EnumStatusFieldRefInput<$PrismaModel>
    in?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusWithAggregatesFilter<$PrismaModel> | $Enums.Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusFilter<$PrismaModel>
    _max?: NestedEnumStatusFilter<$PrismaModel>
  }

  export type SubCarreiraCreateNestedManyWithoutCarreiraInput = {
    create?: XOR<SubCarreiraCreateWithoutCarreiraInput, SubCarreiraUncheckedCreateWithoutCarreiraInput> | SubCarreiraCreateWithoutCarreiraInput[] | SubCarreiraUncheckedCreateWithoutCarreiraInput[]
    connectOrCreate?: SubCarreiraCreateOrConnectWithoutCarreiraInput | SubCarreiraCreateOrConnectWithoutCarreiraInput[]
    createMany?: SubCarreiraCreateManyCarreiraInputEnvelope
    connect?: SubCarreiraWhereUniqueInput | SubCarreiraWhereUniqueInput[]
  }

  export type CategoriaRHCreateNestedManyWithoutCarreiraInput = {
    create?: XOR<CategoriaRHCreateWithoutCarreiraInput, CategoriaRHUncheckedCreateWithoutCarreiraInput> | CategoriaRHCreateWithoutCarreiraInput[] | CategoriaRHUncheckedCreateWithoutCarreiraInput[]
    connectOrCreate?: CategoriaRHCreateOrConnectWithoutCarreiraInput | CategoriaRHCreateOrConnectWithoutCarreiraInput[]
    createMany?: CategoriaRHCreateManyCarreiraInputEnvelope
    connect?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
  }

  export type SubCarreiraUncheckedCreateNestedManyWithoutCarreiraInput = {
    create?: XOR<SubCarreiraCreateWithoutCarreiraInput, SubCarreiraUncheckedCreateWithoutCarreiraInput> | SubCarreiraCreateWithoutCarreiraInput[] | SubCarreiraUncheckedCreateWithoutCarreiraInput[]
    connectOrCreate?: SubCarreiraCreateOrConnectWithoutCarreiraInput | SubCarreiraCreateOrConnectWithoutCarreiraInput[]
    createMany?: SubCarreiraCreateManyCarreiraInputEnvelope
    connect?: SubCarreiraWhereUniqueInput | SubCarreiraWhereUniqueInput[]
  }

  export type CategoriaRHUncheckedCreateNestedManyWithoutCarreiraInput = {
    create?: XOR<CategoriaRHCreateWithoutCarreiraInput, CategoriaRHUncheckedCreateWithoutCarreiraInput> | CategoriaRHCreateWithoutCarreiraInput[] | CategoriaRHUncheckedCreateWithoutCarreiraInput[]
    connectOrCreate?: CategoriaRHCreateOrConnectWithoutCarreiraInput | CategoriaRHCreateOrConnectWithoutCarreiraInput[]
    createMany?: CategoriaRHCreateManyCarreiraInputEnvelope
    connect?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type EnumRegimeFieldUpdateOperationsInput = {
    set?: $Enums.Regime
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type SubCarreiraUpdateManyWithoutCarreiraNestedInput = {
    create?: XOR<SubCarreiraCreateWithoutCarreiraInput, SubCarreiraUncheckedCreateWithoutCarreiraInput> | SubCarreiraCreateWithoutCarreiraInput[] | SubCarreiraUncheckedCreateWithoutCarreiraInput[]
    connectOrCreate?: SubCarreiraCreateOrConnectWithoutCarreiraInput | SubCarreiraCreateOrConnectWithoutCarreiraInput[]
    upsert?: SubCarreiraUpsertWithWhereUniqueWithoutCarreiraInput | SubCarreiraUpsertWithWhereUniqueWithoutCarreiraInput[]
    createMany?: SubCarreiraCreateManyCarreiraInputEnvelope
    set?: SubCarreiraWhereUniqueInput | SubCarreiraWhereUniqueInput[]
    disconnect?: SubCarreiraWhereUniqueInput | SubCarreiraWhereUniqueInput[]
    delete?: SubCarreiraWhereUniqueInput | SubCarreiraWhereUniqueInput[]
    connect?: SubCarreiraWhereUniqueInput | SubCarreiraWhereUniqueInput[]
    update?: SubCarreiraUpdateWithWhereUniqueWithoutCarreiraInput | SubCarreiraUpdateWithWhereUniqueWithoutCarreiraInput[]
    updateMany?: SubCarreiraUpdateManyWithWhereWithoutCarreiraInput | SubCarreiraUpdateManyWithWhereWithoutCarreiraInput[]
    deleteMany?: SubCarreiraScalarWhereInput | SubCarreiraScalarWhereInput[]
  }

  export type CategoriaRHUpdateManyWithoutCarreiraNestedInput = {
    create?: XOR<CategoriaRHCreateWithoutCarreiraInput, CategoriaRHUncheckedCreateWithoutCarreiraInput> | CategoriaRHCreateWithoutCarreiraInput[] | CategoriaRHUncheckedCreateWithoutCarreiraInput[]
    connectOrCreate?: CategoriaRHCreateOrConnectWithoutCarreiraInput | CategoriaRHCreateOrConnectWithoutCarreiraInput[]
    upsert?: CategoriaRHUpsertWithWhereUniqueWithoutCarreiraInput | CategoriaRHUpsertWithWhereUniqueWithoutCarreiraInput[]
    createMany?: CategoriaRHCreateManyCarreiraInputEnvelope
    set?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
    disconnect?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
    delete?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
    connect?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
    update?: CategoriaRHUpdateWithWhereUniqueWithoutCarreiraInput | CategoriaRHUpdateWithWhereUniqueWithoutCarreiraInput[]
    updateMany?: CategoriaRHUpdateManyWithWhereWithoutCarreiraInput | CategoriaRHUpdateManyWithWhereWithoutCarreiraInput[]
    deleteMany?: CategoriaRHScalarWhereInput | CategoriaRHScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type SubCarreiraUncheckedUpdateManyWithoutCarreiraNestedInput = {
    create?: XOR<SubCarreiraCreateWithoutCarreiraInput, SubCarreiraUncheckedCreateWithoutCarreiraInput> | SubCarreiraCreateWithoutCarreiraInput[] | SubCarreiraUncheckedCreateWithoutCarreiraInput[]
    connectOrCreate?: SubCarreiraCreateOrConnectWithoutCarreiraInput | SubCarreiraCreateOrConnectWithoutCarreiraInput[]
    upsert?: SubCarreiraUpsertWithWhereUniqueWithoutCarreiraInput | SubCarreiraUpsertWithWhereUniqueWithoutCarreiraInput[]
    createMany?: SubCarreiraCreateManyCarreiraInputEnvelope
    set?: SubCarreiraWhereUniqueInput | SubCarreiraWhereUniqueInput[]
    disconnect?: SubCarreiraWhereUniqueInput | SubCarreiraWhereUniqueInput[]
    delete?: SubCarreiraWhereUniqueInput | SubCarreiraWhereUniqueInput[]
    connect?: SubCarreiraWhereUniqueInput | SubCarreiraWhereUniqueInput[]
    update?: SubCarreiraUpdateWithWhereUniqueWithoutCarreiraInput | SubCarreiraUpdateWithWhereUniqueWithoutCarreiraInput[]
    updateMany?: SubCarreiraUpdateManyWithWhereWithoutCarreiraInput | SubCarreiraUpdateManyWithWhereWithoutCarreiraInput[]
    deleteMany?: SubCarreiraScalarWhereInput | SubCarreiraScalarWhereInput[]
  }

  export type CategoriaRHUncheckedUpdateManyWithoutCarreiraNestedInput = {
    create?: XOR<CategoriaRHCreateWithoutCarreiraInput, CategoriaRHUncheckedCreateWithoutCarreiraInput> | CategoriaRHCreateWithoutCarreiraInput[] | CategoriaRHUncheckedCreateWithoutCarreiraInput[]
    connectOrCreate?: CategoriaRHCreateOrConnectWithoutCarreiraInput | CategoriaRHCreateOrConnectWithoutCarreiraInput[]
    upsert?: CategoriaRHUpsertWithWhereUniqueWithoutCarreiraInput | CategoriaRHUpsertWithWhereUniqueWithoutCarreiraInput[]
    createMany?: CategoriaRHCreateManyCarreiraInputEnvelope
    set?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
    disconnect?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
    delete?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
    connect?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
    update?: CategoriaRHUpdateWithWhereUniqueWithoutCarreiraInput | CategoriaRHUpdateWithWhereUniqueWithoutCarreiraInput[]
    updateMany?: CategoriaRHUpdateManyWithWhereWithoutCarreiraInput | CategoriaRHUpdateManyWithWhereWithoutCarreiraInput[]
    deleteMany?: CategoriaRHScalarWhereInput | CategoriaRHScalarWhereInput[]
  }

  export type CarreiraCreateNestedOneWithoutSubcarreiraInput = {
    create?: XOR<CarreiraCreateWithoutSubcarreiraInput, CarreiraUncheckedCreateWithoutSubcarreiraInput>
    connectOrCreate?: CarreiraCreateOrConnectWithoutSubcarreiraInput
    connect?: CarreiraWhereUniqueInput
  }

  export type CategoriaRHCreateNestedManyWithoutSubCarreiraInput = {
    create?: XOR<CategoriaRHCreateWithoutSubCarreiraInput, CategoriaRHUncheckedCreateWithoutSubCarreiraInput> | CategoriaRHCreateWithoutSubCarreiraInput[] | CategoriaRHUncheckedCreateWithoutSubCarreiraInput[]
    connectOrCreate?: CategoriaRHCreateOrConnectWithoutSubCarreiraInput | CategoriaRHCreateOrConnectWithoutSubCarreiraInput[]
    createMany?: CategoriaRHCreateManySubCarreiraInputEnvelope
    connect?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
  }

  export type CategoriaRHUncheckedCreateNestedManyWithoutSubCarreiraInput = {
    create?: XOR<CategoriaRHCreateWithoutSubCarreiraInput, CategoriaRHUncheckedCreateWithoutSubCarreiraInput> | CategoriaRHCreateWithoutSubCarreiraInput[] | CategoriaRHUncheckedCreateWithoutSubCarreiraInput[]
    connectOrCreate?: CategoriaRHCreateOrConnectWithoutSubCarreiraInput | CategoriaRHCreateOrConnectWithoutSubCarreiraInput[]
    createMany?: CategoriaRHCreateManySubCarreiraInputEnvelope
    connect?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
  }

  export type CarreiraUpdateOneWithoutSubcarreiraNestedInput = {
    create?: XOR<CarreiraCreateWithoutSubcarreiraInput, CarreiraUncheckedCreateWithoutSubcarreiraInput>
    connectOrCreate?: CarreiraCreateOrConnectWithoutSubcarreiraInput
    upsert?: CarreiraUpsertWithoutSubcarreiraInput
    disconnect?: CarreiraWhereInput | boolean
    delete?: CarreiraWhereInput | boolean
    connect?: CarreiraWhereUniqueInput
    update?: XOR<XOR<CarreiraUpdateToOneWithWhereWithoutSubcarreiraInput, CarreiraUpdateWithoutSubcarreiraInput>, CarreiraUncheckedUpdateWithoutSubcarreiraInput>
  }

  export type CategoriaRHUpdateManyWithoutSubCarreiraNestedInput = {
    create?: XOR<CategoriaRHCreateWithoutSubCarreiraInput, CategoriaRHUncheckedCreateWithoutSubCarreiraInput> | CategoriaRHCreateWithoutSubCarreiraInput[] | CategoriaRHUncheckedCreateWithoutSubCarreiraInput[]
    connectOrCreate?: CategoriaRHCreateOrConnectWithoutSubCarreiraInput | CategoriaRHCreateOrConnectWithoutSubCarreiraInput[]
    upsert?: CategoriaRHUpsertWithWhereUniqueWithoutSubCarreiraInput | CategoriaRHUpsertWithWhereUniqueWithoutSubCarreiraInput[]
    createMany?: CategoriaRHCreateManySubCarreiraInputEnvelope
    set?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
    disconnect?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
    delete?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
    connect?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
    update?: CategoriaRHUpdateWithWhereUniqueWithoutSubCarreiraInput | CategoriaRHUpdateWithWhereUniqueWithoutSubCarreiraInput[]
    updateMany?: CategoriaRHUpdateManyWithWhereWithoutSubCarreiraInput | CategoriaRHUpdateManyWithWhereWithoutSubCarreiraInput[]
    deleteMany?: CategoriaRHScalarWhereInput | CategoriaRHScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CategoriaRHUncheckedUpdateManyWithoutSubCarreiraNestedInput = {
    create?: XOR<CategoriaRHCreateWithoutSubCarreiraInput, CategoriaRHUncheckedCreateWithoutSubCarreiraInput> | CategoriaRHCreateWithoutSubCarreiraInput[] | CategoriaRHUncheckedCreateWithoutSubCarreiraInput[]
    connectOrCreate?: CategoriaRHCreateOrConnectWithoutSubCarreiraInput | CategoriaRHCreateOrConnectWithoutSubCarreiraInput[]
    upsert?: CategoriaRHUpsertWithWhereUniqueWithoutSubCarreiraInput | CategoriaRHUpsertWithWhereUniqueWithoutSubCarreiraInput[]
    createMany?: CategoriaRHCreateManySubCarreiraInputEnvelope
    set?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
    disconnect?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
    delete?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
    connect?: CategoriaRHWhereUniqueInput | CategoriaRHWhereUniqueInput[]
    update?: CategoriaRHUpdateWithWhereUniqueWithoutSubCarreiraInput | CategoriaRHUpdateWithWhereUniqueWithoutSubCarreiraInput[]
    updateMany?: CategoriaRHUpdateManyWithWhereWithoutSubCarreiraInput | CategoriaRHUpdateManyWithWhereWithoutSubCarreiraInput[]
    deleteMany?: CategoriaRHScalarWhereInput | CategoriaRHScalarWhereInput[]
  }

  export type CarreiraCreateNestedOneWithoutCateroriaInput = {
    create?: XOR<CarreiraCreateWithoutCateroriaInput, CarreiraUncheckedCreateWithoutCateroriaInput>
    connectOrCreate?: CarreiraCreateOrConnectWithoutCateroriaInput
    connect?: CarreiraWhereUniqueInput
  }

  export type SubCarreiraCreateNestedOneWithoutCategoriaInput = {
    create?: XOR<SubCarreiraCreateWithoutCategoriaInput, SubCarreiraUncheckedCreateWithoutCategoriaInput>
    connectOrCreate?: SubCarreiraCreateOrConnectWithoutCategoriaInput
    connect?: SubCarreiraWhereUniqueInput
  }

  export type FuncionarioCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<FuncionarioCreateWithoutCategoriaInput, FuncionarioUncheckedCreateWithoutCategoriaInput> | FuncionarioCreateWithoutCategoriaInput[] | FuncionarioUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutCategoriaInput | FuncionarioCreateOrConnectWithoutCategoriaInput[]
    createMany?: FuncionarioCreateManyCategoriaInputEnvelope
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
  }

  export type FuncionarioUncheckedCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<FuncionarioCreateWithoutCategoriaInput, FuncionarioUncheckedCreateWithoutCategoriaInput> | FuncionarioCreateWithoutCategoriaInput[] | FuncionarioUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutCategoriaInput | FuncionarioCreateOrConnectWithoutCategoriaInput[]
    createMany?: FuncionarioCreateManyCategoriaInputEnvelope
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CarreiraUpdateOneWithoutCateroriaNestedInput = {
    create?: XOR<CarreiraCreateWithoutCateroriaInput, CarreiraUncheckedCreateWithoutCateroriaInput>
    connectOrCreate?: CarreiraCreateOrConnectWithoutCateroriaInput
    upsert?: CarreiraUpsertWithoutCateroriaInput
    disconnect?: CarreiraWhereInput | boolean
    delete?: CarreiraWhereInput | boolean
    connect?: CarreiraWhereUniqueInput
    update?: XOR<XOR<CarreiraUpdateToOneWithWhereWithoutCateroriaInput, CarreiraUpdateWithoutCateroriaInput>, CarreiraUncheckedUpdateWithoutCateroriaInput>
  }

  export type SubCarreiraUpdateOneWithoutCategoriaNestedInput = {
    create?: XOR<SubCarreiraCreateWithoutCategoriaInput, SubCarreiraUncheckedCreateWithoutCategoriaInput>
    connectOrCreate?: SubCarreiraCreateOrConnectWithoutCategoriaInput
    upsert?: SubCarreiraUpsertWithoutCategoriaInput
    disconnect?: SubCarreiraWhereInput | boolean
    delete?: SubCarreiraWhereInput | boolean
    connect?: SubCarreiraWhereUniqueInput
    update?: XOR<XOR<SubCarreiraUpdateToOneWithWhereWithoutCategoriaInput, SubCarreiraUpdateWithoutCategoriaInput>, SubCarreiraUncheckedUpdateWithoutCategoriaInput>
  }

  export type FuncionarioUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<FuncionarioCreateWithoutCategoriaInput, FuncionarioUncheckedCreateWithoutCategoriaInput> | FuncionarioCreateWithoutCategoriaInput[] | FuncionarioUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutCategoriaInput | FuncionarioCreateOrConnectWithoutCategoriaInput[]
    upsert?: FuncionarioUpsertWithWhereUniqueWithoutCategoriaInput | FuncionarioUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: FuncionarioCreateManyCategoriaInputEnvelope
    set?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    disconnect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    delete?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    update?: FuncionarioUpdateWithWhereUniqueWithoutCategoriaInput | FuncionarioUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: FuncionarioUpdateManyWithWhereWithoutCategoriaInput | FuncionarioUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: FuncionarioScalarWhereInput | FuncionarioScalarWhereInput[]
  }

  export type FuncionarioUncheckedUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<FuncionarioCreateWithoutCategoriaInput, FuncionarioUncheckedCreateWithoutCategoriaInput> | FuncionarioCreateWithoutCategoriaInput[] | FuncionarioUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutCategoriaInput | FuncionarioCreateOrConnectWithoutCategoriaInput[]
    upsert?: FuncionarioUpsertWithWhereUniqueWithoutCategoriaInput | FuncionarioUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: FuncionarioCreateManyCategoriaInputEnvelope
    set?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    disconnect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    delete?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    update?: FuncionarioUpdateWithWhereUniqueWithoutCategoriaInput | FuncionarioUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: FuncionarioUpdateManyWithWhereWithoutCategoriaInput | FuncionarioUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: FuncionarioScalarWhereInput | FuncionarioScalarWhereInput[]
  }

  export type FuncionarioCreateNestedManyWithoutFuncaoInput = {
    create?: XOR<FuncionarioCreateWithoutFuncaoInput, FuncionarioUncheckedCreateWithoutFuncaoInput> | FuncionarioCreateWithoutFuncaoInput[] | FuncionarioUncheckedCreateWithoutFuncaoInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutFuncaoInput | FuncionarioCreateOrConnectWithoutFuncaoInput[]
    createMany?: FuncionarioCreateManyFuncaoInputEnvelope
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
  }

  export type FuncionarioUncheckedCreateNestedManyWithoutFuncaoInput = {
    create?: XOR<FuncionarioCreateWithoutFuncaoInput, FuncionarioUncheckedCreateWithoutFuncaoInput> | FuncionarioCreateWithoutFuncaoInput[] | FuncionarioUncheckedCreateWithoutFuncaoInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutFuncaoInput | FuncionarioCreateOrConnectWithoutFuncaoInput[]
    createMany?: FuncionarioCreateManyFuncaoInputEnvelope
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
  }

  export type FuncionarioUpdateManyWithoutFuncaoNestedInput = {
    create?: XOR<FuncionarioCreateWithoutFuncaoInput, FuncionarioUncheckedCreateWithoutFuncaoInput> | FuncionarioCreateWithoutFuncaoInput[] | FuncionarioUncheckedCreateWithoutFuncaoInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutFuncaoInput | FuncionarioCreateOrConnectWithoutFuncaoInput[]
    upsert?: FuncionarioUpsertWithWhereUniqueWithoutFuncaoInput | FuncionarioUpsertWithWhereUniqueWithoutFuncaoInput[]
    createMany?: FuncionarioCreateManyFuncaoInputEnvelope
    set?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    disconnect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    delete?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    update?: FuncionarioUpdateWithWhereUniqueWithoutFuncaoInput | FuncionarioUpdateWithWhereUniqueWithoutFuncaoInput[]
    updateMany?: FuncionarioUpdateManyWithWhereWithoutFuncaoInput | FuncionarioUpdateManyWithWhereWithoutFuncaoInput[]
    deleteMany?: FuncionarioScalarWhereInput | FuncionarioScalarWhereInput[]
  }

  export type FuncionarioUncheckedUpdateManyWithoutFuncaoNestedInput = {
    create?: XOR<FuncionarioCreateWithoutFuncaoInput, FuncionarioUncheckedCreateWithoutFuncaoInput> | FuncionarioCreateWithoutFuncaoInput[] | FuncionarioUncheckedCreateWithoutFuncaoInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutFuncaoInput | FuncionarioCreateOrConnectWithoutFuncaoInput[]
    upsert?: FuncionarioUpsertWithWhereUniqueWithoutFuncaoInput | FuncionarioUpsertWithWhereUniqueWithoutFuncaoInput[]
    createMany?: FuncionarioCreateManyFuncaoInputEnvelope
    set?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    disconnect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    delete?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    update?: FuncionarioUpdateWithWhereUniqueWithoutFuncaoInput | FuncionarioUpdateWithWhereUniqueWithoutFuncaoInput[]
    updateMany?: FuncionarioUpdateManyWithWhereWithoutFuncaoInput | FuncionarioUpdateManyWithWhereWithoutFuncaoInput[]
    deleteMany?: FuncionarioScalarWhereInput | FuncionarioScalarWhereInput[]
  }

  export type FuncionarioCreateNestedManyWithoutBancoInput = {
    create?: XOR<FuncionarioCreateWithoutBancoInput, FuncionarioUncheckedCreateWithoutBancoInput> | FuncionarioCreateWithoutBancoInput[] | FuncionarioUncheckedCreateWithoutBancoInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutBancoInput | FuncionarioCreateOrConnectWithoutBancoInput[]
    createMany?: FuncionarioCreateManyBancoInputEnvelope
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
  }

  export type FuncionarioUncheckedCreateNestedManyWithoutBancoInput = {
    create?: XOR<FuncionarioCreateWithoutBancoInput, FuncionarioUncheckedCreateWithoutBancoInput> | FuncionarioCreateWithoutBancoInput[] | FuncionarioUncheckedCreateWithoutBancoInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutBancoInput | FuncionarioCreateOrConnectWithoutBancoInput[]
    createMany?: FuncionarioCreateManyBancoInputEnvelope
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
  }

  export type FuncionarioUpdateManyWithoutBancoNestedInput = {
    create?: XOR<FuncionarioCreateWithoutBancoInput, FuncionarioUncheckedCreateWithoutBancoInput> | FuncionarioCreateWithoutBancoInput[] | FuncionarioUncheckedCreateWithoutBancoInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutBancoInput | FuncionarioCreateOrConnectWithoutBancoInput[]
    upsert?: FuncionarioUpsertWithWhereUniqueWithoutBancoInput | FuncionarioUpsertWithWhereUniqueWithoutBancoInput[]
    createMany?: FuncionarioCreateManyBancoInputEnvelope
    set?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    disconnect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    delete?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    update?: FuncionarioUpdateWithWhereUniqueWithoutBancoInput | FuncionarioUpdateWithWhereUniqueWithoutBancoInput[]
    updateMany?: FuncionarioUpdateManyWithWhereWithoutBancoInput | FuncionarioUpdateManyWithWhereWithoutBancoInput[]
    deleteMany?: FuncionarioScalarWhereInput | FuncionarioScalarWhereInput[]
  }

  export type FuncionarioUncheckedUpdateManyWithoutBancoNestedInput = {
    create?: XOR<FuncionarioCreateWithoutBancoInput, FuncionarioUncheckedCreateWithoutBancoInput> | FuncionarioCreateWithoutBancoInput[] | FuncionarioUncheckedCreateWithoutBancoInput[]
    connectOrCreate?: FuncionarioCreateOrConnectWithoutBancoInput | FuncionarioCreateOrConnectWithoutBancoInput[]
    upsert?: FuncionarioUpsertWithWhereUniqueWithoutBancoInput | FuncionarioUpsertWithWhereUniqueWithoutBancoInput[]
    createMany?: FuncionarioCreateManyBancoInputEnvelope
    set?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    disconnect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    delete?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    connect?: FuncionarioWhereUniqueInput | FuncionarioWhereUniqueInput[]
    update?: FuncionarioUpdateWithWhereUniqueWithoutBancoInput | FuncionarioUpdateWithWhereUniqueWithoutBancoInput[]
    updateMany?: FuncionarioUpdateManyWithWhereWithoutBancoInput | FuncionarioUpdateManyWithWhereWithoutBancoInput[]
    deleteMany?: FuncionarioScalarWhereInput | FuncionarioScalarWhereInput[]
  }

  export type FuncaoCreateNestedOneWithoutFuncionarioInput = {
    create?: XOR<FuncaoCreateWithoutFuncionarioInput, FuncaoUncheckedCreateWithoutFuncionarioInput>
    connectOrCreate?: FuncaoCreateOrConnectWithoutFuncionarioInput
    connect?: FuncaoWhereUniqueInput
  }

  export type CategoriaRHCreateNestedOneWithoutFuncionarioInput = {
    create?: XOR<CategoriaRHCreateWithoutFuncionarioInput, CategoriaRHUncheckedCreateWithoutFuncionarioInput>
    connectOrCreate?: CategoriaRHCreateOrConnectWithoutFuncionarioInput
    connect?: CategoriaRHWhereUniqueInput
  }

  export type DadosProfissionaisCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<DadosProfissionaisCreateWithoutFuncionarioInput, DadosProfissionaisUncheckedCreateWithoutFuncionarioInput> | DadosProfissionaisCreateWithoutFuncionarioInput[] | DadosProfissionaisUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: DadosProfissionaisCreateOrConnectWithoutFuncionarioInput | DadosProfissionaisCreateOrConnectWithoutFuncionarioInput[]
    createMany?: DadosProfissionaisCreateManyFuncionarioInputEnvelope
    connect?: DadosProfissionaisWhereUniqueInput | DadosProfissionaisWhereUniqueInput[]
  }

  export type FormacoesCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<FormacoesCreateWithoutFuncionarioInput, FormacoesUncheckedCreateWithoutFuncionarioInput> | FormacoesCreateWithoutFuncionarioInput[] | FormacoesUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: FormacoesCreateOrConnectWithoutFuncionarioInput | FormacoesCreateOrConnectWithoutFuncionarioInput[]
    createMany?: FormacoesCreateManyFuncionarioInputEnvelope
    connect?: FormacoesWhereUniqueInput | FormacoesWhereUniqueInput[]
  }

  export type ExperiencialLaboralCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<ExperiencialLaboralCreateWithoutFuncionarioInput, ExperiencialLaboralUncheckedCreateWithoutFuncionarioInput> | ExperiencialLaboralCreateWithoutFuncionarioInput[] | ExperiencialLaboralUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: ExperiencialLaboralCreateOrConnectWithoutFuncionarioInput | ExperiencialLaboralCreateOrConnectWithoutFuncionarioInput[]
    createMany?: ExperiencialLaboralCreateManyFuncionarioInputEnvelope
    connect?: ExperiencialLaboralWhereUniqueInput | ExperiencialLaboralWhereUniqueInput[]
  }

  export type DepartamentoCreateNestedManyWithoutFuncionario_chefeInput = {
    create?: XOR<DepartamentoCreateWithoutFuncionario_chefeInput, DepartamentoUncheckedCreateWithoutFuncionario_chefeInput> | DepartamentoCreateWithoutFuncionario_chefeInput[] | DepartamentoUncheckedCreateWithoutFuncionario_chefeInput[]
    connectOrCreate?: DepartamentoCreateOrConnectWithoutFuncionario_chefeInput | DepartamentoCreateOrConnectWithoutFuncionario_chefeInput[]
    createMany?: DepartamentoCreateManyFuncionario_chefeInputEnvelope
    connect?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
  }

  export type DepartamentoCreateNestedManyWithoutFuncionario_supervisorInput = {
    create?: XOR<DepartamentoCreateWithoutFuncionario_supervisorInput, DepartamentoUncheckedCreateWithoutFuncionario_supervisorInput> | DepartamentoCreateWithoutFuncionario_supervisorInput[] | DepartamentoUncheckedCreateWithoutFuncionario_supervisorInput[]
    connectOrCreate?: DepartamentoCreateOrConnectWithoutFuncionario_supervisorInput | DepartamentoCreateOrConnectWithoutFuncionario_supervisorInput[]
    createMany?: DepartamentoCreateManyFuncionario_supervisorInputEnvelope
    connect?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
  }

  export type FuncionarioDepartamentoCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<FuncionarioDepartamentoCreateWithoutFuncionarioInput, FuncionarioDepartamentoUncheckedCreateWithoutFuncionarioInput> | FuncionarioDepartamentoCreateWithoutFuncionarioInput[] | FuncionarioDepartamentoUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: FuncionarioDepartamentoCreateOrConnectWithoutFuncionarioInput | FuncionarioDepartamentoCreateOrConnectWithoutFuncionarioInput[]
    createMany?: FuncionarioDepartamentoCreateManyFuncionarioInputEnvelope
    connect?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
  }

  export type BancoCreateNestedOneWithoutFuncionarioInput = {
    create?: XOR<BancoCreateWithoutFuncionarioInput, BancoUncheckedCreateWithoutFuncionarioInput>
    connectOrCreate?: BancoCreateOrConnectWithoutFuncionarioInput
    connect?: BancoWhereUniqueInput
  }

  export type AvaliacaoCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<AvaliacaoCreateWithoutFuncionarioInput, AvaliacaoUncheckedCreateWithoutFuncionarioInput> | AvaliacaoCreateWithoutFuncionarioInput[] | AvaliacaoUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutFuncionarioInput | AvaliacaoCreateOrConnectWithoutFuncionarioInput[]
    createMany?: AvaliacaoCreateManyFuncionarioInputEnvelope
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
  }

  export type DadosProfissionaisUncheckedCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<DadosProfissionaisCreateWithoutFuncionarioInput, DadosProfissionaisUncheckedCreateWithoutFuncionarioInput> | DadosProfissionaisCreateWithoutFuncionarioInput[] | DadosProfissionaisUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: DadosProfissionaisCreateOrConnectWithoutFuncionarioInput | DadosProfissionaisCreateOrConnectWithoutFuncionarioInput[]
    createMany?: DadosProfissionaisCreateManyFuncionarioInputEnvelope
    connect?: DadosProfissionaisWhereUniqueInput | DadosProfissionaisWhereUniqueInput[]
  }

  export type FormacoesUncheckedCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<FormacoesCreateWithoutFuncionarioInput, FormacoesUncheckedCreateWithoutFuncionarioInput> | FormacoesCreateWithoutFuncionarioInput[] | FormacoesUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: FormacoesCreateOrConnectWithoutFuncionarioInput | FormacoesCreateOrConnectWithoutFuncionarioInput[]
    createMany?: FormacoesCreateManyFuncionarioInputEnvelope
    connect?: FormacoesWhereUniqueInput | FormacoesWhereUniqueInput[]
  }

  export type ExperiencialLaboralUncheckedCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<ExperiencialLaboralCreateWithoutFuncionarioInput, ExperiencialLaboralUncheckedCreateWithoutFuncionarioInput> | ExperiencialLaboralCreateWithoutFuncionarioInput[] | ExperiencialLaboralUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: ExperiencialLaboralCreateOrConnectWithoutFuncionarioInput | ExperiencialLaboralCreateOrConnectWithoutFuncionarioInput[]
    createMany?: ExperiencialLaboralCreateManyFuncionarioInputEnvelope
    connect?: ExperiencialLaboralWhereUniqueInput | ExperiencialLaboralWhereUniqueInput[]
  }

  export type DepartamentoUncheckedCreateNestedManyWithoutFuncionario_chefeInput = {
    create?: XOR<DepartamentoCreateWithoutFuncionario_chefeInput, DepartamentoUncheckedCreateWithoutFuncionario_chefeInput> | DepartamentoCreateWithoutFuncionario_chefeInput[] | DepartamentoUncheckedCreateWithoutFuncionario_chefeInput[]
    connectOrCreate?: DepartamentoCreateOrConnectWithoutFuncionario_chefeInput | DepartamentoCreateOrConnectWithoutFuncionario_chefeInput[]
    createMany?: DepartamentoCreateManyFuncionario_chefeInputEnvelope
    connect?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
  }

  export type DepartamentoUncheckedCreateNestedManyWithoutFuncionario_supervisorInput = {
    create?: XOR<DepartamentoCreateWithoutFuncionario_supervisorInput, DepartamentoUncheckedCreateWithoutFuncionario_supervisorInput> | DepartamentoCreateWithoutFuncionario_supervisorInput[] | DepartamentoUncheckedCreateWithoutFuncionario_supervisorInput[]
    connectOrCreate?: DepartamentoCreateOrConnectWithoutFuncionario_supervisorInput | DepartamentoCreateOrConnectWithoutFuncionario_supervisorInput[]
    createMany?: DepartamentoCreateManyFuncionario_supervisorInputEnvelope
    connect?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
  }

  export type FuncionarioDepartamentoUncheckedCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<FuncionarioDepartamentoCreateWithoutFuncionarioInput, FuncionarioDepartamentoUncheckedCreateWithoutFuncionarioInput> | FuncionarioDepartamentoCreateWithoutFuncionarioInput[] | FuncionarioDepartamentoUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: FuncionarioDepartamentoCreateOrConnectWithoutFuncionarioInput | FuncionarioDepartamentoCreateOrConnectWithoutFuncionarioInput[]
    createMany?: FuncionarioDepartamentoCreateManyFuncionarioInputEnvelope
    connect?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
  }

  export type AvaliacaoUncheckedCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<AvaliacaoCreateWithoutFuncionarioInput, AvaliacaoUncheckedCreateWithoutFuncionarioInput> | AvaliacaoCreateWithoutFuncionarioInput[] | AvaliacaoUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutFuncionarioInput | AvaliacaoCreateOrConnectWithoutFuncionarioInput[]
    createMany?: AvaliacaoCreateManyFuncionarioInputEnvelope
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
  }

  export type EnumGeneroFieldUpdateOperationsInput = {
    set?: $Enums.Genero
  }

  export type EnumIdentificacaoFieldUpdateOperationsInput = {
    set?: $Enums.Identificacao
  }

  export type EnumNIVEL_ACADEMICOFieldUpdateOperationsInput = {
    set?: $Enums.NIVEL_ACADEMICO
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type FuncaoUpdateOneWithoutFuncionarioNestedInput = {
    create?: XOR<FuncaoCreateWithoutFuncionarioInput, FuncaoUncheckedCreateWithoutFuncionarioInput>
    connectOrCreate?: FuncaoCreateOrConnectWithoutFuncionarioInput
    upsert?: FuncaoUpsertWithoutFuncionarioInput
    disconnect?: FuncaoWhereInput | boolean
    delete?: FuncaoWhereInput | boolean
    connect?: FuncaoWhereUniqueInput
    update?: XOR<XOR<FuncaoUpdateToOneWithWhereWithoutFuncionarioInput, FuncaoUpdateWithoutFuncionarioInput>, FuncaoUncheckedUpdateWithoutFuncionarioInput>
  }

  export type CategoriaRHUpdateOneWithoutFuncionarioNestedInput = {
    create?: XOR<CategoriaRHCreateWithoutFuncionarioInput, CategoriaRHUncheckedCreateWithoutFuncionarioInput>
    connectOrCreate?: CategoriaRHCreateOrConnectWithoutFuncionarioInput
    upsert?: CategoriaRHUpsertWithoutFuncionarioInput
    disconnect?: CategoriaRHWhereInput | boolean
    delete?: CategoriaRHWhereInput | boolean
    connect?: CategoriaRHWhereUniqueInput
    update?: XOR<XOR<CategoriaRHUpdateToOneWithWhereWithoutFuncionarioInput, CategoriaRHUpdateWithoutFuncionarioInput>, CategoriaRHUncheckedUpdateWithoutFuncionarioInput>
  }

  export type DadosProfissionaisUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<DadosProfissionaisCreateWithoutFuncionarioInput, DadosProfissionaisUncheckedCreateWithoutFuncionarioInput> | DadosProfissionaisCreateWithoutFuncionarioInput[] | DadosProfissionaisUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: DadosProfissionaisCreateOrConnectWithoutFuncionarioInput | DadosProfissionaisCreateOrConnectWithoutFuncionarioInput[]
    upsert?: DadosProfissionaisUpsertWithWhereUniqueWithoutFuncionarioInput | DadosProfissionaisUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: DadosProfissionaisCreateManyFuncionarioInputEnvelope
    set?: DadosProfissionaisWhereUniqueInput | DadosProfissionaisWhereUniqueInput[]
    disconnect?: DadosProfissionaisWhereUniqueInput | DadosProfissionaisWhereUniqueInput[]
    delete?: DadosProfissionaisWhereUniqueInput | DadosProfissionaisWhereUniqueInput[]
    connect?: DadosProfissionaisWhereUniqueInput | DadosProfissionaisWhereUniqueInput[]
    update?: DadosProfissionaisUpdateWithWhereUniqueWithoutFuncionarioInput | DadosProfissionaisUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: DadosProfissionaisUpdateManyWithWhereWithoutFuncionarioInput | DadosProfissionaisUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: DadosProfissionaisScalarWhereInput | DadosProfissionaisScalarWhereInput[]
  }

  export type FormacoesUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<FormacoesCreateWithoutFuncionarioInput, FormacoesUncheckedCreateWithoutFuncionarioInput> | FormacoesCreateWithoutFuncionarioInput[] | FormacoesUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: FormacoesCreateOrConnectWithoutFuncionarioInput | FormacoesCreateOrConnectWithoutFuncionarioInput[]
    upsert?: FormacoesUpsertWithWhereUniqueWithoutFuncionarioInput | FormacoesUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: FormacoesCreateManyFuncionarioInputEnvelope
    set?: FormacoesWhereUniqueInput | FormacoesWhereUniqueInput[]
    disconnect?: FormacoesWhereUniqueInput | FormacoesWhereUniqueInput[]
    delete?: FormacoesWhereUniqueInput | FormacoesWhereUniqueInput[]
    connect?: FormacoesWhereUniqueInput | FormacoesWhereUniqueInput[]
    update?: FormacoesUpdateWithWhereUniqueWithoutFuncionarioInput | FormacoesUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: FormacoesUpdateManyWithWhereWithoutFuncionarioInput | FormacoesUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: FormacoesScalarWhereInput | FormacoesScalarWhereInput[]
  }

  export type ExperiencialLaboralUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<ExperiencialLaboralCreateWithoutFuncionarioInput, ExperiencialLaboralUncheckedCreateWithoutFuncionarioInput> | ExperiencialLaboralCreateWithoutFuncionarioInput[] | ExperiencialLaboralUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: ExperiencialLaboralCreateOrConnectWithoutFuncionarioInput | ExperiencialLaboralCreateOrConnectWithoutFuncionarioInput[]
    upsert?: ExperiencialLaboralUpsertWithWhereUniqueWithoutFuncionarioInput | ExperiencialLaboralUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: ExperiencialLaboralCreateManyFuncionarioInputEnvelope
    set?: ExperiencialLaboralWhereUniqueInput | ExperiencialLaboralWhereUniqueInput[]
    disconnect?: ExperiencialLaboralWhereUniqueInput | ExperiencialLaboralWhereUniqueInput[]
    delete?: ExperiencialLaboralWhereUniqueInput | ExperiencialLaboralWhereUniqueInput[]
    connect?: ExperiencialLaboralWhereUniqueInput | ExperiencialLaboralWhereUniqueInput[]
    update?: ExperiencialLaboralUpdateWithWhereUniqueWithoutFuncionarioInput | ExperiencialLaboralUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: ExperiencialLaboralUpdateManyWithWhereWithoutFuncionarioInput | ExperiencialLaboralUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: ExperiencialLaboralScalarWhereInput | ExperiencialLaboralScalarWhereInput[]
  }

  export type DepartamentoUpdateManyWithoutFuncionario_chefeNestedInput = {
    create?: XOR<DepartamentoCreateWithoutFuncionario_chefeInput, DepartamentoUncheckedCreateWithoutFuncionario_chefeInput> | DepartamentoCreateWithoutFuncionario_chefeInput[] | DepartamentoUncheckedCreateWithoutFuncionario_chefeInput[]
    connectOrCreate?: DepartamentoCreateOrConnectWithoutFuncionario_chefeInput | DepartamentoCreateOrConnectWithoutFuncionario_chefeInput[]
    upsert?: DepartamentoUpsertWithWhereUniqueWithoutFuncionario_chefeInput | DepartamentoUpsertWithWhereUniqueWithoutFuncionario_chefeInput[]
    createMany?: DepartamentoCreateManyFuncionario_chefeInputEnvelope
    set?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
    disconnect?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
    delete?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
    connect?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
    update?: DepartamentoUpdateWithWhereUniqueWithoutFuncionario_chefeInput | DepartamentoUpdateWithWhereUniqueWithoutFuncionario_chefeInput[]
    updateMany?: DepartamentoUpdateManyWithWhereWithoutFuncionario_chefeInput | DepartamentoUpdateManyWithWhereWithoutFuncionario_chefeInput[]
    deleteMany?: DepartamentoScalarWhereInput | DepartamentoScalarWhereInput[]
  }

  export type DepartamentoUpdateManyWithoutFuncionario_supervisorNestedInput = {
    create?: XOR<DepartamentoCreateWithoutFuncionario_supervisorInput, DepartamentoUncheckedCreateWithoutFuncionario_supervisorInput> | DepartamentoCreateWithoutFuncionario_supervisorInput[] | DepartamentoUncheckedCreateWithoutFuncionario_supervisorInput[]
    connectOrCreate?: DepartamentoCreateOrConnectWithoutFuncionario_supervisorInput | DepartamentoCreateOrConnectWithoutFuncionario_supervisorInput[]
    upsert?: DepartamentoUpsertWithWhereUniqueWithoutFuncionario_supervisorInput | DepartamentoUpsertWithWhereUniqueWithoutFuncionario_supervisorInput[]
    createMany?: DepartamentoCreateManyFuncionario_supervisorInputEnvelope
    set?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
    disconnect?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
    delete?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
    connect?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
    update?: DepartamentoUpdateWithWhereUniqueWithoutFuncionario_supervisorInput | DepartamentoUpdateWithWhereUniqueWithoutFuncionario_supervisorInput[]
    updateMany?: DepartamentoUpdateManyWithWhereWithoutFuncionario_supervisorInput | DepartamentoUpdateManyWithWhereWithoutFuncionario_supervisorInput[]
    deleteMany?: DepartamentoScalarWhereInput | DepartamentoScalarWhereInput[]
  }

  export type FuncionarioDepartamentoUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<FuncionarioDepartamentoCreateWithoutFuncionarioInput, FuncionarioDepartamentoUncheckedCreateWithoutFuncionarioInput> | FuncionarioDepartamentoCreateWithoutFuncionarioInput[] | FuncionarioDepartamentoUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: FuncionarioDepartamentoCreateOrConnectWithoutFuncionarioInput | FuncionarioDepartamentoCreateOrConnectWithoutFuncionarioInput[]
    upsert?: FuncionarioDepartamentoUpsertWithWhereUniqueWithoutFuncionarioInput | FuncionarioDepartamentoUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: FuncionarioDepartamentoCreateManyFuncionarioInputEnvelope
    set?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
    disconnect?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
    delete?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
    connect?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
    update?: FuncionarioDepartamentoUpdateWithWhereUniqueWithoutFuncionarioInput | FuncionarioDepartamentoUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: FuncionarioDepartamentoUpdateManyWithWhereWithoutFuncionarioInput | FuncionarioDepartamentoUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: FuncionarioDepartamentoScalarWhereInput | FuncionarioDepartamentoScalarWhereInput[]
  }

  export type BancoUpdateOneWithoutFuncionarioNestedInput = {
    create?: XOR<BancoCreateWithoutFuncionarioInput, BancoUncheckedCreateWithoutFuncionarioInput>
    connectOrCreate?: BancoCreateOrConnectWithoutFuncionarioInput
    upsert?: BancoUpsertWithoutFuncionarioInput
    disconnect?: BancoWhereInput | boolean
    delete?: BancoWhereInput | boolean
    connect?: BancoWhereUniqueInput
    update?: XOR<XOR<BancoUpdateToOneWithWhereWithoutFuncionarioInput, BancoUpdateWithoutFuncionarioInput>, BancoUncheckedUpdateWithoutFuncionarioInput>
  }

  export type AvaliacaoUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<AvaliacaoCreateWithoutFuncionarioInput, AvaliacaoUncheckedCreateWithoutFuncionarioInput> | AvaliacaoCreateWithoutFuncionarioInput[] | AvaliacaoUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutFuncionarioInput | AvaliacaoCreateOrConnectWithoutFuncionarioInput[]
    upsert?: AvaliacaoUpsertWithWhereUniqueWithoutFuncionarioInput | AvaliacaoUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: AvaliacaoCreateManyFuncionarioInputEnvelope
    set?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    disconnect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    delete?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    update?: AvaliacaoUpdateWithWhereUniqueWithoutFuncionarioInput | AvaliacaoUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: AvaliacaoUpdateManyWithWhereWithoutFuncionarioInput | AvaliacaoUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
  }

  export type DadosProfissionaisUncheckedUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<DadosProfissionaisCreateWithoutFuncionarioInput, DadosProfissionaisUncheckedCreateWithoutFuncionarioInput> | DadosProfissionaisCreateWithoutFuncionarioInput[] | DadosProfissionaisUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: DadosProfissionaisCreateOrConnectWithoutFuncionarioInput | DadosProfissionaisCreateOrConnectWithoutFuncionarioInput[]
    upsert?: DadosProfissionaisUpsertWithWhereUniqueWithoutFuncionarioInput | DadosProfissionaisUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: DadosProfissionaisCreateManyFuncionarioInputEnvelope
    set?: DadosProfissionaisWhereUniqueInput | DadosProfissionaisWhereUniqueInput[]
    disconnect?: DadosProfissionaisWhereUniqueInput | DadosProfissionaisWhereUniqueInput[]
    delete?: DadosProfissionaisWhereUniqueInput | DadosProfissionaisWhereUniqueInput[]
    connect?: DadosProfissionaisWhereUniqueInput | DadosProfissionaisWhereUniqueInput[]
    update?: DadosProfissionaisUpdateWithWhereUniqueWithoutFuncionarioInput | DadosProfissionaisUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: DadosProfissionaisUpdateManyWithWhereWithoutFuncionarioInput | DadosProfissionaisUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: DadosProfissionaisScalarWhereInput | DadosProfissionaisScalarWhereInput[]
  }

  export type FormacoesUncheckedUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<FormacoesCreateWithoutFuncionarioInput, FormacoesUncheckedCreateWithoutFuncionarioInput> | FormacoesCreateWithoutFuncionarioInput[] | FormacoesUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: FormacoesCreateOrConnectWithoutFuncionarioInput | FormacoesCreateOrConnectWithoutFuncionarioInput[]
    upsert?: FormacoesUpsertWithWhereUniqueWithoutFuncionarioInput | FormacoesUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: FormacoesCreateManyFuncionarioInputEnvelope
    set?: FormacoesWhereUniqueInput | FormacoesWhereUniqueInput[]
    disconnect?: FormacoesWhereUniqueInput | FormacoesWhereUniqueInput[]
    delete?: FormacoesWhereUniqueInput | FormacoesWhereUniqueInput[]
    connect?: FormacoesWhereUniqueInput | FormacoesWhereUniqueInput[]
    update?: FormacoesUpdateWithWhereUniqueWithoutFuncionarioInput | FormacoesUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: FormacoesUpdateManyWithWhereWithoutFuncionarioInput | FormacoesUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: FormacoesScalarWhereInput | FormacoesScalarWhereInput[]
  }

  export type ExperiencialLaboralUncheckedUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<ExperiencialLaboralCreateWithoutFuncionarioInput, ExperiencialLaboralUncheckedCreateWithoutFuncionarioInput> | ExperiencialLaboralCreateWithoutFuncionarioInput[] | ExperiencialLaboralUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: ExperiencialLaboralCreateOrConnectWithoutFuncionarioInput | ExperiencialLaboralCreateOrConnectWithoutFuncionarioInput[]
    upsert?: ExperiencialLaboralUpsertWithWhereUniqueWithoutFuncionarioInput | ExperiencialLaboralUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: ExperiencialLaboralCreateManyFuncionarioInputEnvelope
    set?: ExperiencialLaboralWhereUniqueInput | ExperiencialLaboralWhereUniqueInput[]
    disconnect?: ExperiencialLaboralWhereUniqueInput | ExperiencialLaboralWhereUniqueInput[]
    delete?: ExperiencialLaboralWhereUniqueInput | ExperiencialLaboralWhereUniqueInput[]
    connect?: ExperiencialLaboralWhereUniqueInput | ExperiencialLaboralWhereUniqueInput[]
    update?: ExperiencialLaboralUpdateWithWhereUniqueWithoutFuncionarioInput | ExperiencialLaboralUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: ExperiencialLaboralUpdateManyWithWhereWithoutFuncionarioInput | ExperiencialLaboralUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: ExperiencialLaboralScalarWhereInput | ExperiencialLaboralScalarWhereInput[]
  }

  export type DepartamentoUncheckedUpdateManyWithoutFuncionario_chefeNestedInput = {
    create?: XOR<DepartamentoCreateWithoutFuncionario_chefeInput, DepartamentoUncheckedCreateWithoutFuncionario_chefeInput> | DepartamentoCreateWithoutFuncionario_chefeInput[] | DepartamentoUncheckedCreateWithoutFuncionario_chefeInput[]
    connectOrCreate?: DepartamentoCreateOrConnectWithoutFuncionario_chefeInput | DepartamentoCreateOrConnectWithoutFuncionario_chefeInput[]
    upsert?: DepartamentoUpsertWithWhereUniqueWithoutFuncionario_chefeInput | DepartamentoUpsertWithWhereUniqueWithoutFuncionario_chefeInput[]
    createMany?: DepartamentoCreateManyFuncionario_chefeInputEnvelope
    set?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
    disconnect?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
    delete?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
    connect?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
    update?: DepartamentoUpdateWithWhereUniqueWithoutFuncionario_chefeInput | DepartamentoUpdateWithWhereUniqueWithoutFuncionario_chefeInput[]
    updateMany?: DepartamentoUpdateManyWithWhereWithoutFuncionario_chefeInput | DepartamentoUpdateManyWithWhereWithoutFuncionario_chefeInput[]
    deleteMany?: DepartamentoScalarWhereInput | DepartamentoScalarWhereInput[]
  }

  export type DepartamentoUncheckedUpdateManyWithoutFuncionario_supervisorNestedInput = {
    create?: XOR<DepartamentoCreateWithoutFuncionario_supervisorInput, DepartamentoUncheckedCreateWithoutFuncionario_supervisorInput> | DepartamentoCreateWithoutFuncionario_supervisorInput[] | DepartamentoUncheckedCreateWithoutFuncionario_supervisorInput[]
    connectOrCreate?: DepartamentoCreateOrConnectWithoutFuncionario_supervisorInput | DepartamentoCreateOrConnectWithoutFuncionario_supervisorInput[]
    upsert?: DepartamentoUpsertWithWhereUniqueWithoutFuncionario_supervisorInput | DepartamentoUpsertWithWhereUniqueWithoutFuncionario_supervisorInput[]
    createMany?: DepartamentoCreateManyFuncionario_supervisorInputEnvelope
    set?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
    disconnect?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
    delete?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
    connect?: DepartamentoWhereUniqueInput | DepartamentoWhereUniqueInput[]
    update?: DepartamentoUpdateWithWhereUniqueWithoutFuncionario_supervisorInput | DepartamentoUpdateWithWhereUniqueWithoutFuncionario_supervisorInput[]
    updateMany?: DepartamentoUpdateManyWithWhereWithoutFuncionario_supervisorInput | DepartamentoUpdateManyWithWhereWithoutFuncionario_supervisorInput[]
    deleteMany?: DepartamentoScalarWhereInput | DepartamentoScalarWhereInput[]
  }

  export type FuncionarioDepartamentoUncheckedUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<FuncionarioDepartamentoCreateWithoutFuncionarioInput, FuncionarioDepartamentoUncheckedCreateWithoutFuncionarioInput> | FuncionarioDepartamentoCreateWithoutFuncionarioInput[] | FuncionarioDepartamentoUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: FuncionarioDepartamentoCreateOrConnectWithoutFuncionarioInput | FuncionarioDepartamentoCreateOrConnectWithoutFuncionarioInput[]
    upsert?: FuncionarioDepartamentoUpsertWithWhereUniqueWithoutFuncionarioInput | FuncionarioDepartamentoUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: FuncionarioDepartamentoCreateManyFuncionarioInputEnvelope
    set?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
    disconnect?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
    delete?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
    connect?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
    update?: FuncionarioDepartamentoUpdateWithWhereUniqueWithoutFuncionarioInput | FuncionarioDepartamentoUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: FuncionarioDepartamentoUpdateManyWithWhereWithoutFuncionarioInput | FuncionarioDepartamentoUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: FuncionarioDepartamentoScalarWhereInput | FuncionarioDepartamentoScalarWhereInput[]
  }

  export type AvaliacaoUncheckedUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<AvaliacaoCreateWithoutFuncionarioInput, AvaliacaoUncheckedCreateWithoutFuncionarioInput> | AvaliacaoCreateWithoutFuncionarioInput[] | AvaliacaoUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutFuncionarioInput | AvaliacaoCreateOrConnectWithoutFuncionarioInput[]
    upsert?: AvaliacaoUpsertWithWhereUniqueWithoutFuncionarioInput | AvaliacaoUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: AvaliacaoCreateManyFuncionarioInputEnvelope
    set?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    disconnect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    delete?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    update?: AvaliacaoUpdateWithWhereUniqueWithoutFuncionarioInput | AvaliacaoUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: AvaliacaoUpdateManyWithWhereWithoutFuncionarioInput | AvaliacaoUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
  }

  export type FuncionarioCreateNestedOneWithoutDadosprofissionaisInput = {
    create?: XOR<FuncionarioCreateWithoutDadosprofissionaisInput, FuncionarioUncheckedCreateWithoutDadosprofissionaisInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutDadosprofissionaisInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type EnumContratoFieldUpdateOperationsInput = {
    set?: $Enums.Contrato
  }

  export type FuncionarioUpdateOneWithoutDadosprofissionaisNestedInput = {
    create?: XOR<FuncionarioCreateWithoutDadosprofissionaisInput, FuncionarioUncheckedCreateWithoutDadosprofissionaisInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutDadosprofissionaisInput
    upsert?: FuncionarioUpsertWithoutDadosprofissionaisInput
    disconnect?: FuncionarioWhereInput | boolean
    delete?: FuncionarioWhereInput | boolean
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutDadosprofissionaisInput, FuncionarioUpdateWithoutDadosprofissionaisInput>, FuncionarioUncheckedUpdateWithoutDadosprofissionaisInput>
  }

  export type FuncionarioCreateNestedOneWithoutFormacoesInput = {
    create?: XOR<FuncionarioCreateWithoutFormacoesInput, FuncionarioUncheckedCreateWithoutFormacoesInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutFormacoesInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type FuncionarioUpdateOneWithoutFormacoesNestedInput = {
    create?: XOR<FuncionarioCreateWithoutFormacoesInput, FuncionarioUncheckedCreateWithoutFormacoesInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutFormacoesInput
    upsert?: FuncionarioUpsertWithoutFormacoesInput
    disconnect?: FuncionarioWhereInput | boolean
    delete?: FuncionarioWhereInput | boolean
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutFormacoesInput, FuncionarioUpdateWithoutFormacoesInput>, FuncionarioUncheckedUpdateWithoutFormacoesInput>
  }

  export type EnumTipoFieldUpdateOperationsInput = {
    set?: $Enums.Tipo
  }

  export type FuncionarioCreateNestedOneWithoutEsperiencialaboralInput = {
    create?: XOR<FuncionarioCreateWithoutEsperiencialaboralInput, FuncionarioUncheckedCreateWithoutEsperiencialaboralInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutEsperiencialaboralInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type FuncionarioUpdateOneWithoutEsperiencialaboralNestedInput = {
    create?: XOR<FuncionarioCreateWithoutEsperiencialaboralInput, FuncionarioUncheckedCreateWithoutEsperiencialaboralInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutEsperiencialaboralInput
    upsert?: FuncionarioUpsertWithoutEsperiencialaboralInput
    disconnect?: FuncionarioWhereInput | boolean
    delete?: FuncionarioWhereInput | boolean
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutEsperiencialaboralInput, FuncionarioUpdateWithoutEsperiencialaboralInput>, FuncionarioUncheckedUpdateWithoutEsperiencialaboralInput>
  }

  export type FuncionarioCreateNestedOneWithoutDepartamentosComoChefeInput = {
    create?: XOR<FuncionarioCreateWithoutDepartamentosComoChefeInput, FuncionarioUncheckedCreateWithoutDepartamentosComoChefeInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutDepartamentosComoChefeInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type FuncionarioCreateNestedOneWithoutDepartamentosComoSupervisorInput = {
    create?: XOR<FuncionarioCreateWithoutDepartamentosComoSupervisorInput, FuncionarioUncheckedCreateWithoutDepartamentosComoSupervisorInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutDepartamentosComoSupervisorInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type AvaliacaoCreateNestedManyWithoutDepartamentoInput = {
    create?: XOR<AvaliacaoCreateWithoutDepartamentoInput, AvaliacaoUncheckedCreateWithoutDepartamentoInput> | AvaliacaoCreateWithoutDepartamentoInput[] | AvaliacaoUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutDepartamentoInput | AvaliacaoCreateOrConnectWithoutDepartamentoInput[]
    createMany?: AvaliacaoCreateManyDepartamentoInputEnvelope
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
  }

  export type FuncionarioDepartamentoCreateNestedManyWithoutDepartamentoInput = {
    create?: XOR<FuncionarioDepartamentoCreateWithoutDepartamentoInput, FuncionarioDepartamentoUncheckedCreateWithoutDepartamentoInput> | FuncionarioDepartamentoCreateWithoutDepartamentoInput[] | FuncionarioDepartamentoUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: FuncionarioDepartamentoCreateOrConnectWithoutDepartamentoInput | FuncionarioDepartamentoCreateOrConnectWithoutDepartamentoInput[]
    createMany?: FuncionarioDepartamentoCreateManyDepartamentoInputEnvelope
    connect?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
  }

  export type AvaliacaoUncheckedCreateNestedManyWithoutDepartamentoInput = {
    create?: XOR<AvaliacaoCreateWithoutDepartamentoInput, AvaliacaoUncheckedCreateWithoutDepartamentoInput> | AvaliacaoCreateWithoutDepartamentoInput[] | AvaliacaoUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutDepartamentoInput | AvaliacaoCreateOrConnectWithoutDepartamentoInput[]
    createMany?: AvaliacaoCreateManyDepartamentoInputEnvelope
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
  }

  export type FuncionarioDepartamentoUncheckedCreateNestedManyWithoutDepartamentoInput = {
    create?: XOR<FuncionarioDepartamentoCreateWithoutDepartamentoInput, FuncionarioDepartamentoUncheckedCreateWithoutDepartamentoInput> | FuncionarioDepartamentoCreateWithoutDepartamentoInput[] | FuncionarioDepartamentoUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: FuncionarioDepartamentoCreateOrConnectWithoutDepartamentoInput | FuncionarioDepartamentoCreateOrConnectWithoutDepartamentoInput[]
    createMany?: FuncionarioDepartamentoCreateManyDepartamentoInputEnvelope
    connect?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
  }

  export type FuncionarioUpdateOneWithoutDepartamentosComoChefeNestedInput = {
    create?: XOR<FuncionarioCreateWithoutDepartamentosComoChefeInput, FuncionarioUncheckedCreateWithoutDepartamentosComoChefeInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutDepartamentosComoChefeInput
    upsert?: FuncionarioUpsertWithoutDepartamentosComoChefeInput
    disconnect?: FuncionarioWhereInput | boolean
    delete?: FuncionarioWhereInput | boolean
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutDepartamentosComoChefeInput, FuncionarioUpdateWithoutDepartamentosComoChefeInput>, FuncionarioUncheckedUpdateWithoutDepartamentosComoChefeInput>
  }

  export type FuncionarioUpdateOneWithoutDepartamentosComoSupervisorNestedInput = {
    create?: XOR<FuncionarioCreateWithoutDepartamentosComoSupervisorInput, FuncionarioUncheckedCreateWithoutDepartamentosComoSupervisorInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutDepartamentosComoSupervisorInput
    upsert?: FuncionarioUpsertWithoutDepartamentosComoSupervisorInput
    disconnect?: FuncionarioWhereInput | boolean
    delete?: FuncionarioWhereInput | boolean
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutDepartamentosComoSupervisorInput, FuncionarioUpdateWithoutDepartamentosComoSupervisorInput>, FuncionarioUncheckedUpdateWithoutDepartamentosComoSupervisorInput>
  }

  export type AvaliacaoUpdateManyWithoutDepartamentoNestedInput = {
    create?: XOR<AvaliacaoCreateWithoutDepartamentoInput, AvaliacaoUncheckedCreateWithoutDepartamentoInput> | AvaliacaoCreateWithoutDepartamentoInput[] | AvaliacaoUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutDepartamentoInput | AvaliacaoCreateOrConnectWithoutDepartamentoInput[]
    upsert?: AvaliacaoUpsertWithWhereUniqueWithoutDepartamentoInput | AvaliacaoUpsertWithWhereUniqueWithoutDepartamentoInput[]
    createMany?: AvaliacaoCreateManyDepartamentoInputEnvelope
    set?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    disconnect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    delete?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    update?: AvaliacaoUpdateWithWhereUniqueWithoutDepartamentoInput | AvaliacaoUpdateWithWhereUniqueWithoutDepartamentoInput[]
    updateMany?: AvaliacaoUpdateManyWithWhereWithoutDepartamentoInput | AvaliacaoUpdateManyWithWhereWithoutDepartamentoInput[]
    deleteMany?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
  }

  export type FuncionarioDepartamentoUpdateManyWithoutDepartamentoNestedInput = {
    create?: XOR<FuncionarioDepartamentoCreateWithoutDepartamentoInput, FuncionarioDepartamentoUncheckedCreateWithoutDepartamentoInput> | FuncionarioDepartamentoCreateWithoutDepartamentoInput[] | FuncionarioDepartamentoUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: FuncionarioDepartamentoCreateOrConnectWithoutDepartamentoInput | FuncionarioDepartamentoCreateOrConnectWithoutDepartamentoInput[]
    upsert?: FuncionarioDepartamentoUpsertWithWhereUniqueWithoutDepartamentoInput | FuncionarioDepartamentoUpsertWithWhereUniqueWithoutDepartamentoInput[]
    createMany?: FuncionarioDepartamentoCreateManyDepartamentoInputEnvelope
    set?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
    disconnect?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
    delete?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
    connect?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
    update?: FuncionarioDepartamentoUpdateWithWhereUniqueWithoutDepartamentoInput | FuncionarioDepartamentoUpdateWithWhereUniqueWithoutDepartamentoInput[]
    updateMany?: FuncionarioDepartamentoUpdateManyWithWhereWithoutDepartamentoInput | FuncionarioDepartamentoUpdateManyWithWhereWithoutDepartamentoInput[]
    deleteMany?: FuncionarioDepartamentoScalarWhereInput | FuncionarioDepartamentoScalarWhereInput[]
  }

  export type AvaliacaoUncheckedUpdateManyWithoutDepartamentoNestedInput = {
    create?: XOR<AvaliacaoCreateWithoutDepartamentoInput, AvaliacaoUncheckedCreateWithoutDepartamentoInput> | AvaliacaoCreateWithoutDepartamentoInput[] | AvaliacaoUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutDepartamentoInput | AvaliacaoCreateOrConnectWithoutDepartamentoInput[]
    upsert?: AvaliacaoUpsertWithWhereUniqueWithoutDepartamentoInput | AvaliacaoUpsertWithWhereUniqueWithoutDepartamentoInput[]
    createMany?: AvaliacaoCreateManyDepartamentoInputEnvelope
    set?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    disconnect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    delete?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    update?: AvaliacaoUpdateWithWhereUniqueWithoutDepartamentoInput | AvaliacaoUpdateWithWhereUniqueWithoutDepartamentoInput[]
    updateMany?: AvaliacaoUpdateManyWithWhereWithoutDepartamentoInput | AvaliacaoUpdateManyWithWhereWithoutDepartamentoInput[]
    deleteMany?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
  }

  export type FuncionarioDepartamentoUncheckedUpdateManyWithoutDepartamentoNestedInput = {
    create?: XOR<FuncionarioDepartamentoCreateWithoutDepartamentoInput, FuncionarioDepartamentoUncheckedCreateWithoutDepartamentoInput> | FuncionarioDepartamentoCreateWithoutDepartamentoInput[] | FuncionarioDepartamentoUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: FuncionarioDepartamentoCreateOrConnectWithoutDepartamentoInput | FuncionarioDepartamentoCreateOrConnectWithoutDepartamentoInput[]
    upsert?: FuncionarioDepartamentoUpsertWithWhereUniqueWithoutDepartamentoInput | FuncionarioDepartamentoUpsertWithWhereUniqueWithoutDepartamentoInput[]
    createMany?: FuncionarioDepartamentoCreateManyDepartamentoInputEnvelope
    set?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
    disconnect?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
    delete?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
    connect?: FuncionarioDepartamentoWhereUniqueInput | FuncionarioDepartamentoWhereUniqueInput[]
    update?: FuncionarioDepartamentoUpdateWithWhereUniqueWithoutDepartamentoInput | FuncionarioDepartamentoUpdateWithWhereUniqueWithoutDepartamentoInput[]
    updateMany?: FuncionarioDepartamentoUpdateManyWithWhereWithoutDepartamentoInput | FuncionarioDepartamentoUpdateManyWithWhereWithoutDepartamentoInput[]
    deleteMany?: FuncionarioDepartamentoScalarWhereInput | FuncionarioDepartamentoScalarWhereInput[]
  }

  export type DepartamentoCreateNestedOneWithoutFuncionariodepartamentoInput = {
    create?: XOR<DepartamentoCreateWithoutFuncionariodepartamentoInput, DepartamentoUncheckedCreateWithoutFuncionariodepartamentoInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutFuncionariodepartamentoInput
    connect?: DepartamentoWhereUniqueInput
  }

  export type FuncionarioCreateNestedOneWithoutFuncionariodepartamentoInput = {
    create?: XOR<FuncionarioCreateWithoutFuncionariodepartamentoInput, FuncionarioUncheckedCreateWithoutFuncionariodepartamentoInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutFuncionariodepartamentoInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type DepartamentoUpdateOneWithoutFuncionariodepartamentoNestedInput = {
    create?: XOR<DepartamentoCreateWithoutFuncionariodepartamentoInput, DepartamentoUncheckedCreateWithoutFuncionariodepartamentoInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutFuncionariodepartamentoInput
    upsert?: DepartamentoUpsertWithoutFuncionariodepartamentoInput
    disconnect?: DepartamentoWhereInput | boolean
    delete?: DepartamentoWhereInput | boolean
    connect?: DepartamentoWhereUniqueInput
    update?: XOR<XOR<DepartamentoUpdateToOneWithWhereWithoutFuncionariodepartamentoInput, DepartamentoUpdateWithoutFuncionariodepartamentoInput>, DepartamentoUncheckedUpdateWithoutFuncionariodepartamentoInput>
  }

  export type FuncionarioUpdateOneWithoutFuncionariodepartamentoNestedInput = {
    create?: XOR<FuncionarioCreateWithoutFuncionariodepartamentoInput, FuncionarioUncheckedCreateWithoutFuncionariodepartamentoInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutFuncionariodepartamentoInput
    upsert?: FuncionarioUpsertWithoutFuncionariodepartamentoInput
    disconnect?: FuncionarioWhereInput | boolean
    delete?: FuncionarioWhereInput | boolean
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutFuncionariodepartamentoInput, FuncionarioUpdateWithoutFuncionariodepartamentoInput>, FuncionarioUncheckedUpdateWithoutFuncionariodepartamentoInput>
  }

  export type PerguntaFichaAvaliacaoCreateNestedManyWithoutFichaAvaliacaoInput = {
    create?: XOR<PerguntaFichaAvaliacaoCreateWithoutFichaAvaliacaoInput, PerguntaFichaAvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput> | PerguntaFichaAvaliacaoCreateWithoutFichaAvaliacaoInput[] | PerguntaFichaAvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput[]
    connectOrCreate?: PerguntaFichaAvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput | PerguntaFichaAvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput[]
    createMany?: PerguntaFichaAvaliacaoCreateManyFichaAvaliacaoInputEnvelope
    connect?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
  }

  export type AvaliacaoCreateNestedManyWithoutFichaAvaliacaoInput = {
    create?: XOR<AvaliacaoCreateWithoutFichaAvaliacaoInput, AvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput> | AvaliacaoCreateWithoutFichaAvaliacaoInput[] | AvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput | AvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput[]
    createMany?: AvaliacaoCreateManyFichaAvaliacaoInputEnvelope
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
  }

  export type PerguntaFichaAvaliacaoUncheckedCreateNestedManyWithoutFichaAvaliacaoInput = {
    create?: XOR<PerguntaFichaAvaliacaoCreateWithoutFichaAvaliacaoInput, PerguntaFichaAvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput> | PerguntaFichaAvaliacaoCreateWithoutFichaAvaliacaoInput[] | PerguntaFichaAvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput[]
    connectOrCreate?: PerguntaFichaAvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput | PerguntaFichaAvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput[]
    createMany?: PerguntaFichaAvaliacaoCreateManyFichaAvaliacaoInputEnvelope
    connect?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
  }

  export type AvaliacaoUncheckedCreateNestedManyWithoutFichaAvaliacaoInput = {
    create?: XOR<AvaliacaoCreateWithoutFichaAvaliacaoInput, AvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput> | AvaliacaoCreateWithoutFichaAvaliacaoInput[] | AvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput | AvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput[]
    createMany?: AvaliacaoCreateManyFichaAvaliacaoInputEnvelope
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
  }

  export type PerguntaFichaAvaliacaoUpdateManyWithoutFichaAvaliacaoNestedInput = {
    create?: XOR<PerguntaFichaAvaliacaoCreateWithoutFichaAvaliacaoInput, PerguntaFichaAvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput> | PerguntaFichaAvaliacaoCreateWithoutFichaAvaliacaoInput[] | PerguntaFichaAvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput[]
    connectOrCreate?: PerguntaFichaAvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput | PerguntaFichaAvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput[]
    upsert?: PerguntaFichaAvaliacaoUpsertWithWhereUniqueWithoutFichaAvaliacaoInput | PerguntaFichaAvaliacaoUpsertWithWhereUniqueWithoutFichaAvaliacaoInput[]
    createMany?: PerguntaFichaAvaliacaoCreateManyFichaAvaliacaoInputEnvelope
    set?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
    disconnect?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
    delete?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
    connect?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
    update?: PerguntaFichaAvaliacaoUpdateWithWhereUniqueWithoutFichaAvaliacaoInput | PerguntaFichaAvaliacaoUpdateWithWhereUniqueWithoutFichaAvaliacaoInput[]
    updateMany?: PerguntaFichaAvaliacaoUpdateManyWithWhereWithoutFichaAvaliacaoInput | PerguntaFichaAvaliacaoUpdateManyWithWhereWithoutFichaAvaliacaoInput[]
    deleteMany?: PerguntaFichaAvaliacaoScalarWhereInput | PerguntaFichaAvaliacaoScalarWhereInput[]
  }

  export type AvaliacaoUpdateManyWithoutFichaAvaliacaoNestedInput = {
    create?: XOR<AvaliacaoCreateWithoutFichaAvaliacaoInput, AvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput> | AvaliacaoCreateWithoutFichaAvaliacaoInput[] | AvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput | AvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput[]
    upsert?: AvaliacaoUpsertWithWhereUniqueWithoutFichaAvaliacaoInput | AvaliacaoUpsertWithWhereUniqueWithoutFichaAvaliacaoInput[]
    createMany?: AvaliacaoCreateManyFichaAvaliacaoInputEnvelope
    set?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    disconnect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    delete?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    update?: AvaliacaoUpdateWithWhereUniqueWithoutFichaAvaliacaoInput | AvaliacaoUpdateWithWhereUniqueWithoutFichaAvaliacaoInput[]
    updateMany?: AvaliacaoUpdateManyWithWhereWithoutFichaAvaliacaoInput | AvaliacaoUpdateManyWithWhereWithoutFichaAvaliacaoInput[]
    deleteMany?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
  }

  export type PerguntaFichaAvaliacaoUncheckedUpdateManyWithoutFichaAvaliacaoNestedInput = {
    create?: XOR<PerguntaFichaAvaliacaoCreateWithoutFichaAvaliacaoInput, PerguntaFichaAvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput> | PerguntaFichaAvaliacaoCreateWithoutFichaAvaliacaoInput[] | PerguntaFichaAvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput[]
    connectOrCreate?: PerguntaFichaAvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput | PerguntaFichaAvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput[]
    upsert?: PerguntaFichaAvaliacaoUpsertWithWhereUniqueWithoutFichaAvaliacaoInput | PerguntaFichaAvaliacaoUpsertWithWhereUniqueWithoutFichaAvaliacaoInput[]
    createMany?: PerguntaFichaAvaliacaoCreateManyFichaAvaliacaoInputEnvelope
    set?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
    disconnect?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
    delete?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
    connect?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
    update?: PerguntaFichaAvaliacaoUpdateWithWhereUniqueWithoutFichaAvaliacaoInput | PerguntaFichaAvaliacaoUpdateWithWhereUniqueWithoutFichaAvaliacaoInput[]
    updateMany?: PerguntaFichaAvaliacaoUpdateManyWithWhereWithoutFichaAvaliacaoInput | PerguntaFichaAvaliacaoUpdateManyWithWhereWithoutFichaAvaliacaoInput[]
    deleteMany?: PerguntaFichaAvaliacaoScalarWhereInput | PerguntaFichaAvaliacaoScalarWhereInput[]
  }

  export type AvaliacaoUncheckedUpdateManyWithoutFichaAvaliacaoNestedInput = {
    create?: XOR<AvaliacaoCreateWithoutFichaAvaliacaoInput, AvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput> | AvaliacaoCreateWithoutFichaAvaliacaoInput[] | AvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput | AvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput[]
    upsert?: AvaliacaoUpsertWithWhereUniqueWithoutFichaAvaliacaoInput | AvaliacaoUpsertWithWhereUniqueWithoutFichaAvaliacaoInput[]
    createMany?: AvaliacaoCreateManyFichaAvaliacaoInputEnvelope
    set?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    disconnect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    delete?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    update?: AvaliacaoUpdateWithWhereUniqueWithoutFichaAvaliacaoInput | AvaliacaoUpdateWithWhereUniqueWithoutFichaAvaliacaoInput[]
    updateMany?: AvaliacaoUpdateManyWithWhereWithoutFichaAvaliacaoInput | AvaliacaoUpdateManyWithWhereWithoutFichaAvaliacaoInput[]
    deleteMany?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
  }

  export type PerguntaFichaAvaliacaoCreateNestedManyWithoutCompetenciaInput = {
    create?: XOR<PerguntaFichaAvaliacaoCreateWithoutCompetenciaInput, PerguntaFichaAvaliacaoUncheckedCreateWithoutCompetenciaInput> | PerguntaFichaAvaliacaoCreateWithoutCompetenciaInput[] | PerguntaFichaAvaliacaoUncheckedCreateWithoutCompetenciaInput[]
    connectOrCreate?: PerguntaFichaAvaliacaoCreateOrConnectWithoutCompetenciaInput | PerguntaFichaAvaliacaoCreateOrConnectWithoutCompetenciaInput[]
    createMany?: PerguntaFichaAvaliacaoCreateManyCompetenciaInputEnvelope
    connect?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
  }

  export type PerguntaFichaAvaliacaoUncheckedCreateNestedManyWithoutCompetenciaInput = {
    create?: XOR<PerguntaFichaAvaliacaoCreateWithoutCompetenciaInput, PerguntaFichaAvaliacaoUncheckedCreateWithoutCompetenciaInput> | PerguntaFichaAvaliacaoCreateWithoutCompetenciaInput[] | PerguntaFichaAvaliacaoUncheckedCreateWithoutCompetenciaInput[]
    connectOrCreate?: PerguntaFichaAvaliacaoCreateOrConnectWithoutCompetenciaInput | PerguntaFichaAvaliacaoCreateOrConnectWithoutCompetenciaInput[]
    createMany?: PerguntaFichaAvaliacaoCreateManyCompetenciaInputEnvelope
    connect?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
  }

  export type EnumCriterioFieldUpdateOperationsInput = {
    set?: $Enums.Criterio
  }

  export type PerguntaFichaAvaliacaoUpdateManyWithoutCompetenciaNestedInput = {
    create?: XOR<PerguntaFichaAvaliacaoCreateWithoutCompetenciaInput, PerguntaFichaAvaliacaoUncheckedCreateWithoutCompetenciaInput> | PerguntaFichaAvaliacaoCreateWithoutCompetenciaInput[] | PerguntaFichaAvaliacaoUncheckedCreateWithoutCompetenciaInput[]
    connectOrCreate?: PerguntaFichaAvaliacaoCreateOrConnectWithoutCompetenciaInput | PerguntaFichaAvaliacaoCreateOrConnectWithoutCompetenciaInput[]
    upsert?: PerguntaFichaAvaliacaoUpsertWithWhereUniqueWithoutCompetenciaInput | PerguntaFichaAvaliacaoUpsertWithWhereUniqueWithoutCompetenciaInput[]
    createMany?: PerguntaFichaAvaliacaoCreateManyCompetenciaInputEnvelope
    set?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
    disconnect?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
    delete?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
    connect?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
    update?: PerguntaFichaAvaliacaoUpdateWithWhereUniqueWithoutCompetenciaInput | PerguntaFichaAvaliacaoUpdateWithWhereUniqueWithoutCompetenciaInput[]
    updateMany?: PerguntaFichaAvaliacaoUpdateManyWithWhereWithoutCompetenciaInput | PerguntaFichaAvaliacaoUpdateManyWithWhereWithoutCompetenciaInput[]
    deleteMany?: PerguntaFichaAvaliacaoScalarWhereInput | PerguntaFichaAvaliacaoScalarWhereInput[]
  }

  export type PerguntaFichaAvaliacaoUncheckedUpdateManyWithoutCompetenciaNestedInput = {
    create?: XOR<PerguntaFichaAvaliacaoCreateWithoutCompetenciaInput, PerguntaFichaAvaliacaoUncheckedCreateWithoutCompetenciaInput> | PerguntaFichaAvaliacaoCreateWithoutCompetenciaInput[] | PerguntaFichaAvaliacaoUncheckedCreateWithoutCompetenciaInput[]
    connectOrCreate?: PerguntaFichaAvaliacaoCreateOrConnectWithoutCompetenciaInput | PerguntaFichaAvaliacaoCreateOrConnectWithoutCompetenciaInput[]
    upsert?: PerguntaFichaAvaliacaoUpsertWithWhereUniqueWithoutCompetenciaInput | PerguntaFichaAvaliacaoUpsertWithWhereUniqueWithoutCompetenciaInput[]
    createMany?: PerguntaFichaAvaliacaoCreateManyCompetenciaInputEnvelope
    set?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
    disconnect?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
    delete?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
    connect?: PerguntaFichaAvaliacaoWhereUniqueInput | PerguntaFichaAvaliacaoWhereUniqueInput[]
    update?: PerguntaFichaAvaliacaoUpdateWithWhereUniqueWithoutCompetenciaInput | PerguntaFichaAvaliacaoUpdateWithWhereUniqueWithoutCompetenciaInput[]
    updateMany?: PerguntaFichaAvaliacaoUpdateManyWithWhereWithoutCompetenciaInput | PerguntaFichaAvaliacaoUpdateManyWithWhereWithoutCompetenciaInput[]
    deleteMany?: PerguntaFichaAvaliacaoScalarWhereInput | PerguntaFichaAvaliacaoScalarWhereInput[]
  }

  export type CompetenciaCreateNestedOneWithoutPerguntafichaavaliacaoInput = {
    create?: XOR<CompetenciaCreateWithoutPerguntafichaavaliacaoInput, CompetenciaUncheckedCreateWithoutPerguntafichaavaliacaoInput>
    connectOrCreate?: CompetenciaCreateOrConnectWithoutPerguntafichaavaliacaoInput
    connect?: CompetenciaWhereUniqueInput
  }

  export type FichaAvaliacaoCreateNestedOneWithoutPerguntafichaavaliacaoInput = {
    create?: XOR<FichaAvaliacaoCreateWithoutPerguntafichaavaliacaoInput, FichaAvaliacaoUncheckedCreateWithoutPerguntafichaavaliacaoInput>
    connectOrCreate?: FichaAvaliacaoCreateOrConnectWithoutPerguntafichaavaliacaoInput
    connect?: FichaAvaliacaoWhereUniqueInput
  }

  export type CompetenciaUpdateOneWithoutPerguntafichaavaliacaoNestedInput = {
    create?: XOR<CompetenciaCreateWithoutPerguntafichaavaliacaoInput, CompetenciaUncheckedCreateWithoutPerguntafichaavaliacaoInput>
    connectOrCreate?: CompetenciaCreateOrConnectWithoutPerguntafichaavaliacaoInput
    upsert?: CompetenciaUpsertWithoutPerguntafichaavaliacaoInput
    disconnect?: CompetenciaWhereInput | boolean
    delete?: CompetenciaWhereInput | boolean
    connect?: CompetenciaWhereUniqueInput
    update?: XOR<XOR<CompetenciaUpdateToOneWithWhereWithoutPerguntafichaavaliacaoInput, CompetenciaUpdateWithoutPerguntafichaavaliacaoInput>, CompetenciaUncheckedUpdateWithoutPerguntafichaavaliacaoInput>
  }

  export type FichaAvaliacaoUpdateOneWithoutPerguntafichaavaliacaoNestedInput = {
    create?: XOR<FichaAvaliacaoCreateWithoutPerguntafichaavaliacaoInput, FichaAvaliacaoUncheckedCreateWithoutPerguntafichaavaliacaoInput>
    connectOrCreate?: FichaAvaliacaoCreateOrConnectWithoutPerguntafichaavaliacaoInput
    upsert?: FichaAvaliacaoUpsertWithoutPerguntafichaavaliacaoInput
    disconnect?: FichaAvaliacaoWhereInput | boolean
    delete?: FichaAvaliacaoWhereInput | boolean
    connect?: FichaAvaliacaoWhereUniqueInput
    update?: XOR<XOR<FichaAvaliacaoUpdateToOneWithWhereWithoutPerguntafichaavaliacaoInput, FichaAvaliacaoUpdateWithoutPerguntafichaavaliacaoInput>, FichaAvaliacaoUncheckedUpdateWithoutPerguntafichaavaliacaoInput>
  }

  export type FuncionarioCreateNestedOneWithoutAvaliacaoInput = {
    create?: XOR<FuncionarioCreateWithoutAvaliacaoInput, FuncionarioUncheckedCreateWithoutAvaliacaoInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutAvaliacaoInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type FichaAvaliacaoCreateNestedOneWithoutAvaliacaoInput = {
    create?: XOR<FichaAvaliacaoCreateWithoutAvaliacaoInput, FichaAvaliacaoUncheckedCreateWithoutAvaliacaoInput>
    connectOrCreate?: FichaAvaliacaoCreateOrConnectWithoutAvaliacaoInput
    connect?: FichaAvaliacaoWhereUniqueInput
  }

  export type DepartamentoCreateNestedOneWithoutAvaliacaoInput = {
    create?: XOR<DepartamentoCreateWithoutAvaliacaoInput, DepartamentoUncheckedCreateWithoutAvaliacaoInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutAvaliacaoInput
    connect?: DepartamentoWhereUniqueInput
  }

  export type EnumTipoAvaliacaoFieldUpdateOperationsInput = {
    set?: $Enums.TipoAvaliacao
  }

  export type EnumStatusFieldUpdateOperationsInput = {
    set?: $Enums.Status
  }

  export type FuncionarioUpdateOneWithoutAvaliacaoNestedInput = {
    create?: XOR<FuncionarioCreateWithoutAvaliacaoInput, FuncionarioUncheckedCreateWithoutAvaliacaoInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutAvaliacaoInput
    upsert?: FuncionarioUpsertWithoutAvaliacaoInput
    disconnect?: FuncionarioWhereInput | boolean
    delete?: FuncionarioWhereInput | boolean
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutAvaliacaoInput, FuncionarioUpdateWithoutAvaliacaoInput>, FuncionarioUncheckedUpdateWithoutAvaliacaoInput>
  }

  export type FichaAvaliacaoUpdateOneWithoutAvaliacaoNestedInput = {
    create?: XOR<FichaAvaliacaoCreateWithoutAvaliacaoInput, FichaAvaliacaoUncheckedCreateWithoutAvaliacaoInput>
    connectOrCreate?: FichaAvaliacaoCreateOrConnectWithoutAvaliacaoInput
    upsert?: FichaAvaliacaoUpsertWithoutAvaliacaoInput
    disconnect?: FichaAvaliacaoWhereInput | boolean
    delete?: FichaAvaliacaoWhereInput | boolean
    connect?: FichaAvaliacaoWhereUniqueInput
    update?: XOR<XOR<FichaAvaliacaoUpdateToOneWithWhereWithoutAvaliacaoInput, FichaAvaliacaoUpdateWithoutAvaliacaoInput>, FichaAvaliacaoUncheckedUpdateWithoutAvaliacaoInput>
  }

  export type DepartamentoUpdateOneWithoutAvaliacaoNestedInput = {
    create?: XOR<DepartamentoCreateWithoutAvaliacaoInput, DepartamentoUncheckedCreateWithoutAvaliacaoInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutAvaliacaoInput
    upsert?: DepartamentoUpsertWithoutAvaliacaoInput
    disconnect?: DepartamentoWhereInput | boolean
    delete?: DepartamentoWhereInput | boolean
    connect?: DepartamentoWhereUniqueInput
    update?: XOR<XOR<DepartamentoUpdateToOneWithWhereWithoutAvaliacaoInput, DepartamentoUpdateWithoutAvaliacaoInput>, DepartamentoUncheckedUpdateWithoutAvaliacaoInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedEnumRegimeFilter<$PrismaModel = never> = {
    equals?: $Enums.Regime | EnumRegimeFieldRefInput<$PrismaModel>
    in?: $Enums.Regime[] | ListEnumRegimeFieldRefInput<$PrismaModel>
    notIn?: $Enums.Regime[] | ListEnumRegimeFieldRefInput<$PrismaModel>
    not?: NestedEnumRegimeFilter<$PrismaModel> | $Enums.Regime
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedEnumRegimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Regime | EnumRegimeFieldRefInput<$PrismaModel>
    in?: $Enums.Regime[] | ListEnumRegimeFieldRefInput<$PrismaModel>
    notIn?: $Enums.Regime[] | ListEnumRegimeFieldRefInput<$PrismaModel>
    not?: NestedEnumRegimeWithAggregatesFilter<$PrismaModel> | $Enums.Regime
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRegimeFilter<$PrismaModel>
    _max?: NestedEnumRegimeFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumGeneroFilter<$PrismaModel = never> = {
    equals?: $Enums.Genero | EnumGeneroFieldRefInput<$PrismaModel>
    in?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    notIn?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    not?: NestedEnumGeneroFilter<$PrismaModel> | $Enums.Genero
  }

  export type NestedEnumIdentificacaoFilter<$PrismaModel = never> = {
    equals?: $Enums.Identificacao | EnumIdentificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.Identificacao[] | ListEnumIdentificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.Identificacao[] | ListEnumIdentificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumIdentificacaoFilter<$PrismaModel> | $Enums.Identificacao
  }

  export type NestedEnumNIVEL_ACADEMICOFilter<$PrismaModel = never> = {
    equals?: $Enums.NIVEL_ACADEMICO | EnumNIVEL_ACADEMICOFieldRefInput<$PrismaModel>
    in?: $Enums.NIVEL_ACADEMICO[] | ListEnumNIVEL_ACADEMICOFieldRefInput<$PrismaModel>
    notIn?: $Enums.NIVEL_ACADEMICO[] | ListEnumNIVEL_ACADEMICOFieldRefInput<$PrismaModel>
    not?: NestedEnumNIVEL_ACADEMICOFilter<$PrismaModel> | $Enums.NIVEL_ACADEMICO
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedEnumGeneroWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Genero | EnumGeneroFieldRefInput<$PrismaModel>
    in?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    notIn?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    not?: NestedEnumGeneroWithAggregatesFilter<$PrismaModel> | $Enums.Genero
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGeneroFilter<$PrismaModel>
    _max?: NestedEnumGeneroFilter<$PrismaModel>
  }

  export type NestedEnumIdentificacaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Identificacao | EnumIdentificacaoFieldRefInput<$PrismaModel>
    in?: $Enums.Identificacao[] | ListEnumIdentificacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.Identificacao[] | ListEnumIdentificacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumIdentificacaoWithAggregatesFilter<$PrismaModel> | $Enums.Identificacao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumIdentificacaoFilter<$PrismaModel>
    _max?: NestedEnumIdentificacaoFilter<$PrismaModel>
  }

  export type NestedEnumNIVEL_ACADEMICOWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NIVEL_ACADEMICO | EnumNIVEL_ACADEMICOFieldRefInput<$PrismaModel>
    in?: $Enums.NIVEL_ACADEMICO[] | ListEnumNIVEL_ACADEMICOFieldRefInput<$PrismaModel>
    notIn?: $Enums.NIVEL_ACADEMICO[] | ListEnumNIVEL_ACADEMICOFieldRefInput<$PrismaModel>
    not?: NestedEnumNIVEL_ACADEMICOWithAggregatesFilter<$PrismaModel> | $Enums.NIVEL_ACADEMICO
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNIVEL_ACADEMICOFilter<$PrismaModel>
    _max?: NestedEnumNIVEL_ACADEMICOFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedEnumContratoFilter<$PrismaModel = never> = {
    equals?: $Enums.Contrato | EnumContratoFieldRefInput<$PrismaModel>
    in?: $Enums.Contrato[] | ListEnumContratoFieldRefInput<$PrismaModel>
    notIn?: $Enums.Contrato[] | ListEnumContratoFieldRefInput<$PrismaModel>
    not?: NestedEnumContratoFilter<$PrismaModel> | $Enums.Contrato
  }

  export type NestedEnumContratoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Contrato | EnumContratoFieldRefInput<$PrismaModel>
    in?: $Enums.Contrato[] | ListEnumContratoFieldRefInput<$PrismaModel>
    notIn?: $Enums.Contrato[] | ListEnumContratoFieldRefInput<$PrismaModel>
    not?: NestedEnumContratoWithAggregatesFilter<$PrismaModel> | $Enums.Contrato
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumContratoFilter<$PrismaModel>
    _max?: NestedEnumContratoFilter<$PrismaModel>
  }

  export type NestedEnumTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.Tipo | EnumTipoFieldRefInput<$PrismaModel>
    in?: $Enums.Tipo[] | ListEnumTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.Tipo[] | ListEnumTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoFilter<$PrismaModel> | $Enums.Tipo
  }

  export type NestedEnumTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Tipo | EnumTipoFieldRefInput<$PrismaModel>
    in?: $Enums.Tipo[] | ListEnumTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.Tipo[] | ListEnumTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoWithAggregatesFilter<$PrismaModel> | $Enums.Tipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoFilter<$PrismaModel>
    _max?: NestedEnumTipoFilter<$PrismaModel>
  }

  export type NestedEnumCriterioFilter<$PrismaModel = never> = {
    equals?: $Enums.Criterio | EnumCriterioFieldRefInput<$PrismaModel>
    in?: $Enums.Criterio[] | ListEnumCriterioFieldRefInput<$PrismaModel>
    notIn?: $Enums.Criterio[] | ListEnumCriterioFieldRefInput<$PrismaModel>
    not?: NestedEnumCriterioFilter<$PrismaModel> | $Enums.Criterio
  }

  export type NestedEnumCriterioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Criterio | EnumCriterioFieldRefInput<$PrismaModel>
    in?: $Enums.Criterio[] | ListEnumCriterioFieldRefInput<$PrismaModel>
    notIn?: $Enums.Criterio[] | ListEnumCriterioFieldRefInput<$PrismaModel>
    not?: NestedEnumCriterioWithAggregatesFilter<$PrismaModel> | $Enums.Criterio
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCriterioFilter<$PrismaModel>
    _max?: NestedEnumCriterioFilter<$PrismaModel>
  }

  export type NestedEnumTipoAvaliacaoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoAvaliacao | EnumTipoAvaliacaoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoAvaliacao[] | ListEnumTipoAvaliacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoAvaliacao[] | ListEnumTipoAvaliacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoAvaliacaoFilter<$PrismaModel> | $Enums.TipoAvaliacao
  }

  export type NestedEnumStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.Status | EnumStatusFieldRefInput<$PrismaModel>
    in?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusFilter<$PrismaModel> | $Enums.Status
  }

  export type NestedEnumTipoAvaliacaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoAvaliacao | EnumTipoAvaliacaoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoAvaliacao[] | ListEnumTipoAvaliacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoAvaliacao[] | ListEnumTipoAvaliacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoAvaliacaoWithAggregatesFilter<$PrismaModel> | $Enums.TipoAvaliacao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoAvaliacaoFilter<$PrismaModel>
    _max?: NestedEnumTipoAvaliacaoFilter<$PrismaModel>
  }

  export type NestedEnumStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Status | EnumStatusFieldRefInput<$PrismaModel>
    in?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusWithAggregatesFilter<$PrismaModel> | $Enums.Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusFilter<$PrismaModel>
    _max?: NestedEnumStatusFilter<$PrismaModel>
  }

  export type SubCarreiraCreateWithoutCarreiraInput = {
    nome_SubCarreira: string
    createdAt?: Date | string
    updatedAt?: Date | string
    categoria?: CategoriaRHCreateNestedManyWithoutSubCarreiraInput
  }

  export type SubCarreiraUncheckedCreateWithoutCarreiraInput = {
    id?: number
    nome_SubCarreira: string
    createdAt?: Date | string
    updatedAt?: Date | string
    categoria?: CategoriaRHUncheckedCreateNestedManyWithoutSubCarreiraInput
  }

  export type SubCarreiraCreateOrConnectWithoutCarreiraInput = {
    where: SubCarreiraWhereUniqueInput
    create: XOR<SubCarreiraCreateWithoutCarreiraInput, SubCarreiraUncheckedCreateWithoutCarreiraInput>
  }

  export type SubCarreiraCreateManyCarreiraInputEnvelope = {
    data: SubCarreiraCreateManyCarreiraInput | SubCarreiraCreateManyCarreiraInput[]
    skipDuplicates?: boolean
  }

  export type CategoriaRHCreateWithoutCarreiraInput = {
    nome_categoria: string
    salario_base: number
    createdAt?: Date | string
    updatedAt?: Date | string
    SubCarreira?: SubCarreiraCreateNestedOneWithoutCategoriaInput
    funcionario?: FuncionarioCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaRHUncheckedCreateWithoutCarreiraInput = {
    id?: number
    nome_categoria: string
    salario_base: number
    Id_subCarreira?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    funcionario?: FuncionarioUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaRHCreateOrConnectWithoutCarreiraInput = {
    where: CategoriaRHWhereUniqueInput
    create: XOR<CategoriaRHCreateWithoutCarreiraInput, CategoriaRHUncheckedCreateWithoutCarreiraInput>
  }

  export type CategoriaRHCreateManyCarreiraInputEnvelope = {
    data: CategoriaRHCreateManyCarreiraInput | CategoriaRHCreateManyCarreiraInput[]
    skipDuplicates?: boolean
  }

  export type SubCarreiraUpsertWithWhereUniqueWithoutCarreiraInput = {
    where: SubCarreiraWhereUniqueInput
    update: XOR<SubCarreiraUpdateWithoutCarreiraInput, SubCarreiraUncheckedUpdateWithoutCarreiraInput>
    create: XOR<SubCarreiraCreateWithoutCarreiraInput, SubCarreiraUncheckedCreateWithoutCarreiraInput>
  }

  export type SubCarreiraUpdateWithWhereUniqueWithoutCarreiraInput = {
    where: SubCarreiraWhereUniqueInput
    data: XOR<SubCarreiraUpdateWithoutCarreiraInput, SubCarreiraUncheckedUpdateWithoutCarreiraInput>
  }

  export type SubCarreiraUpdateManyWithWhereWithoutCarreiraInput = {
    where: SubCarreiraScalarWhereInput
    data: XOR<SubCarreiraUpdateManyMutationInput, SubCarreiraUncheckedUpdateManyWithoutCarreiraInput>
  }

  export type SubCarreiraScalarWhereInput = {
    AND?: SubCarreiraScalarWhereInput | SubCarreiraScalarWhereInput[]
    OR?: SubCarreiraScalarWhereInput[]
    NOT?: SubCarreiraScalarWhereInput | SubCarreiraScalarWhereInput[]
    id?: IntFilter<"SubCarreira"> | number
    nome_SubCarreira?: StringFilter<"SubCarreira"> | string
    Id_carreira?: IntNullableFilter<"SubCarreira"> | number | null
    createdAt?: DateTimeFilter<"SubCarreira"> | Date | string
    updatedAt?: DateTimeFilter<"SubCarreira"> | Date | string
  }

  export type CategoriaRHUpsertWithWhereUniqueWithoutCarreiraInput = {
    where: CategoriaRHWhereUniqueInput
    update: XOR<CategoriaRHUpdateWithoutCarreiraInput, CategoriaRHUncheckedUpdateWithoutCarreiraInput>
    create: XOR<CategoriaRHCreateWithoutCarreiraInput, CategoriaRHUncheckedCreateWithoutCarreiraInput>
  }

  export type CategoriaRHUpdateWithWhereUniqueWithoutCarreiraInput = {
    where: CategoriaRHWhereUniqueInput
    data: XOR<CategoriaRHUpdateWithoutCarreiraInput, CategoriaRHUncheckedUpdateWithoutCarreiraInput>
  }

  export type CategoriaRHUpdateManyWithWhereWithoutCarreiraInput = {
    where: CategoriaRHScalarWhereInput
    data: XOR<CategoriaRHUpdateManyMutationInput, CategoriaRHUncheckedUpdateManyWithoutCarreiraInput>
  }

  export type CategoriaRHScalarWhereInput = {
    AND?: CategoriaRHScalarWhereInput | CategoriaRHScalarWhereInput[]
    OR?: CategoriaRHScalarWhereInput[]
    NOT?: CategoriaRHScalarWhereInput | CategoriaRHScalarWhereInput[]
    id?: IntFilter<"CategoriaRH"> | number
    nome_categoria?: StringFilter<"CategoriaRH"> | string
    salario_base?: FloatFilter<"CategoriaRH"> | number
    Id_carreira?: IntNullableFilter<"CategoriaRH"> | number | null
    Id_subCarreira?: IntNullableFilter<"CategoriaRH"> | number | null
    createdAt?: DateTimeFilter<"CategoriaRH"> | Date | string
    updatedAt?: DateTimeFilter<"CategoriaRH"> | Date | string
  }

  export type CarreiraCreateWithoutSubcarreiraInput = {
    nome_carreira: string
    regime: $Enums.Regime
    createdAt?: Date | string
    updatedAt?: Date | string
    cateroria?: CategoriaRHCreateNestedManyWithoutCarreiraInput
  }

  export type CarreiraUncheckedCreateWithoutSubcarreiraInput = {
    id?: number
    nome_carreira: string
    regime: $Enums.Regime
    createdAt?: Date | string
    updatedAt?: Date | string
    cateroria?: CategoriaRHUncheckedCreateNestedManyWithoutCarreiraInput
  }

  export type CarreiraCreateOrConnectWithoutSubcarreiraInput = {
    where: CarreiraWhereUniqueInput
    create: XOR<CarreiraCreateWithoutSubcarreiraInput, CarreiraUncheckedCreateWithoutSubcarreiraInput>
  }

  export type CategoriaRHCreateWithoutSubCarreiraInput = {
    nome_categoria: string
    salario_base: number
    createdAt?: Date | string
    updatedAt?: Date | string
    Carreira?: CarreiraCreateNestedOneWithoutCateroriaInput
    funcionario?: FuncionarioCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaRHUncheckedCreateWithoutSubCarreiraInput = {
    id?: number
    nome_categoria: string
    salario_base: number
    Id_carreira?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    funcionario?: FuncionarioUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaRHCreateOrConnectWithoutSubCarreiraInput = {
    where: CategoriaRHWhereUniqueInput
    create: XOR<CategoriaRHCreateWithoutSubCarreiraInput, CategoriaRHUncheckedCreateWithoutSubCarreiraInput>
  }

  export type CategoriaRHCreateManySubCarreiraInputEnvelope = {
    data: CategoriaRHCreateManySubCarreiraInput | CategoriaRHCreateManySubCarreiraInput[]
    skipDuplicates?: boolean
  }

  export type CarreiraUpsertWithoutSubcarreiraInput = {
    update: XOR<CarreiraUpdateWithoutSubcarreiraInput, CarreiraUncheckedUpdateWithoutSubcarreiraInput>
    create: XOR<CarreiraCreateWithoutSubcarreiraInput, CarreiraUncheckedCreateWithoutSubcarreiraInput>
    where?: CarreiraWhereInput
  }

  export type CarreiraUpdateToOneWithWhereWithoutSubcarreiraInput = {
    where?: CarreiraWhereInput
    data: XOR<CarreiraUpdateWithoutSubcarreiraInput, CarreiraUncheckedUpdateWithoutSubcarreiraInput>
  }

  export type CarreiraUpdateWithoutSubcarreiraInput = {
    nome_carreira?: StringFieldUpdateOperationsInput | string
    regime?: EnumRegimeFieldUpdateOperationsInput | $Enums.Regime
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cateroria?: CategoriaRHUpdateManyWithoutCarreiraNestedInput
  }

  export type CarreiraUncheckedUpdateWithoutSubcarreiraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_carreira?: StringFieldUpdateOperationsInput | string
    regime?: EnumRegimeFieldUpdateOperationsInput | $Enums.Regime
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cateroria?: CategoriaRHUncheckedUpdateManyWithoutCarreiraNestedInput
  }

  export type CategoriaRHUpsertWithWhereUniqueWithoutSubCarreiraInput = {
    where: CategoriaRHWhereUniqueInput
    update: XOR<CategoriaRHUpdateWithoutSubCarreiraInput, CategoriaRHUncheckedUpdateWithoutSubCarreiraInput>
    create: XOR<CategoriaRHCreateWithoutSubCarreiraInput, CategoriaRHUncheckedCreateWithoutSubCarreiraInput>
  }

  export type CategoriaRHUpdateWithWhereUniqueWithoutSubCarreiraInput = {
    where: CategoriaRHWhereUniqueInput
    data: XOR<CategoriaRHUpdateWithoutSubCarreiraInput, CategoriaRHUncheckedUpdateWithoutSubCarreiraInput>
  }

  export type CategoriaRHUpdateManyWithWhereWithoutSubCarreiraInput = {
    where: CategoriaRHScalarWhereInput
    data: XOR<CategoriaRHUpdateManyMutationInput, CategoriaRHUncheckedUpdateManyWithoutSubCarreiraInput>
  }

  export type CarreiraCreateWithoutCateroriaInput = {
    nome_carreira: string
    regime: $Enums.Regime
    createdAt?: Date | string
    updatedAt?: Date | string
    subcarreira?: SubCarreiraCreateNestedManyWithoutCarreiraInput
  }

  export type CarreiraUncheckedCreateWithoutCateroriaInput = {
    id?: number
    nome_carreira: string
    regime: $Enums.Regime
    createdAt?: Date | string
    updatedAt?: Date | string
    subcarreira?: SubCarreiraUncheckedCreateNestedManyWithoutCarreiraInput
  }

  export type CarreiraCreateOrConnectWithoutCateroriaInput = {
    where: CarreiraWhereUniqueInput
    create: XOR<CarreiraCreateWithoutCateroriaInput, CarreiraUncheckedCreateWithoutCateroriaInput>
  }

  export type SubCarreiraCreateWithoutCategoriaInput = {
    nome_SubCarreira: string
    createdAt?: Date | string
    updatedAt?: Date | string
    Carreira?: CarreiraCreateNestedOneWithoutSubcarreiraInput
  }

  export type SubCarreiraUncheckedCreateWithoutCategoriaInput = {
    id?: number
    nome_SubCarreira: string
    Id_carreira?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubCarreiraCreateOrConnectWithoutCategoriaInput = {
    where: SubCarreiraWhereUniqueInput
    create: XOR<SubCarreiraCreateWithoutCategoriaInput, SubCarreiraUncheckedCreateWithoutCategoriaInput>
  }

  export type FuncionarioCreateWithoutCategoriaInput = {
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    num_conta?: string | null
    iban?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Funcao?: FuncaoCreateNestedOneWithoutFuncionarioInput
    dadosprofissionais?: DadosProfissionaisCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoCreateNestedManyWithoutFuncionarioInput
    Banco?: BancoCreateNestedOneWithoutFuncionarioInput
    avaliacao?: AvaliacaoCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioUncheckedCreateWithoutCategoriaInput = {
    id?: number
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    id_funcao?: number | null
    num_conta?: string | null
    iban?: string | null
    Id_banco?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesUncheckedCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralUncheckedCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedCreateNestedManyWithoutFuncionarioInput
    avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioCreateOrConnectWithoutCategoriaInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutCategoriaInput, FuncionarioUncheckedCreateWithoutCategoriaInput>
  }

  export type FuncionarioCreateManyCategoriaInputEnvelope = {
    data: FuncionarioCreateManyCategoriaInput | FuncionarioCreateManyCategoriaInput[]
    skipDuplicates?: boolean
  }

  export type CarreiraUpsertWithoutCateroriaInput = {
    update: XOR<CarreiraUpdateWithoutCateroriaInput, CarreiraUncheckedUpdateWithoutCateroriaInput>
    create: XOR<CarreiraCreateWithoutCateroriaInput, CarreiraUncheckedCreateWithoutCateroriaInput>
    where?: CarreiraWhereInput
  }

  export type CarreiraUpdateToOneWithWhereWithoutCateroriaInput = {
    where?: CarreiraWhereInput
    data: XOR<CarreiraUpdateWithoutCateroriaInput, CarreiraUncheckedUpdateWithoutCateroriaInput>
  }

  export type CarreiraUpdateWithoutCateroriaInput = {
    nome_carreira?: StringFieldUpdateOperationsInput | string
    regime?: EnumRegimeFieldUpdateOperationsInput | $Enums.Regime
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subcarreira?: SubCarreiraUpdateManyWithoutCarreiraNestedInput
  }

  export type CarreiraUncheckedUpdateWithoutCateroriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_carreira?: StringFieldUpdateOperationsInput | string
    regime?: EnumRegimeFieldUpdateOperationsInput | $Enums.Regime
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subcarreira?: SubCarreiraUncheckedUpdateManyWithoutCarreiraNestedInput
  }

  export type SubCarreiraUpsertWithoutCategoriaInput = {
    update: XOR<SubCarreiraUpdateWithoutCategoriaInput, SubCarreiraUncheckedUpdateWithoutCategoriaInput>
    create: XOR<SubCarreiraCreateWithoutCategoriaInput, SubCarreiraUncheckedCreateWithoutCategoriaInput>
    where?: SubCarreiraWhereInput
  }

  export type SubCarreiraUpdateToOneWithWhereWithoutCategoriaInput = {
    where?: SubCarreiraWhereInput
    data: XOR<SubCarreiraUpdateWithoutCategoriaInput, SubCarreiraUncheckedUpdateWithoutCategoriaInput>
  }

  export type SubCarreiraUpdateWithoutCategoriaInput = {
    nome_SubCarreira?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Carreira?: CarreiraUpdateOneWithoutSubcarreiraNestedInput
  }

  export type SubCarreiraUncheckedUpdateWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_SubCarreira?: StringFieldUpdateOperationsInput | string
    Id_carreira?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioUpsertWithWhereUniqueWithoutCategoriaInput = {
    where: FuncionarioWhereUniqueInput
    update: XOR<FuncionarioUpdateWithoutCategoriaInput, FuncionarioUncheckedUpdateWithoutCategoriaInput>
    create: XOR<FuncionarioCreateWithoutCategoriaInput, FuncionarioUncheckedCreateWithoutCategoriaInput>
  }

  export type FuncionarioUpdateWithWhereUniqueWithoutCategoriaInput = {
    where: FuncionarioWhereUniqueInput
    data: XOR<FuncionarioUpdateWithoutCategoriaInput, FuncionarioUncheckedUpdateWithoutCategoriaInput>
  }

  export type FuncionarioUpdateManyWithWhereWithoutCategoriaInput = {
    where: FuncionarioScalarWhereInput
    data: XOR<FuncionarioUpdateManyMutationInput, FuncionarioUncheckedUpdateManyWithoutCategoriaInput>
  }

  export type FuncionarioScalarWhereInput = {
    AND?: FuncionarioScalarWhereInput | FuncionarioScalarWhereInput[]
    OR?: FuncionarioScalarWhereInput[]
    NOT?: FuncionarioScalarWhereInput | FuncionarioScalarWhereInput[]
    id?: IntFilter<"Funcionario"> | number
    nome_completo?: StringFilter<"Funcionario"> | string
    nome_pai?: StringFilter<"Funcionario"> | string
    nome_mae?: StringFilter<"Funcionario"> | string
    nascimento?: DateTimeFilter<"Funcionario"> | Date | string
    email?: StringFilter<"Funcionario"> | string
    genero?: EnumGeneroFilter<"Funcionario"> | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFilter<"Funcionario"> | $Enums.Identificacao
    num_identificacao?: StringFilter<"Funcionario"> | string
    nivel_academico?: EnumNIVEL_ACADEMICOFilter<"Funcionario"> | $Enums.NIVEL_ACADEMICO
    avatar?: StringNullableFilter<"Funcionario"> | string | null
    telefone1?: StringFilter<"Funcionario"> | string
    telefone2?: StringNullableFilter<"Funcionario"> | string | null
    linkedin?: StringNullableFilter<"Funcionario"> | string | null
    whatsApp?: StringNullableFilter<"Funcionario"> | string | null
    instagram?: StringNullableFilter<"Funcionario"> | string | null
    bairro?: StringFilter<"Funcionario"> | string
    rua?: StringFilter<"Funcionario"> | string
    id_funcao?: IntNullableFilter<"Funcionario"> | number | null
    id_categoria?: IntNullableFilter<"Funcionario"> | number | null
    num_conta?: StringNullableFilter<"Funcionario"> | string | null
    iban?: StringNullableFilter<"Funcionario"> | string | null
    Id_banco?: IntNullableFilter<"Funcionario"> | number | null
    createdAt?: DateTimeFilter<"Funcionario"> | Date | string
    updatedAt?: DateTimeFilter<"Funcionario"> | Date | string
  }

  export type FuncionarioCreateWithoutFuncaoInput = {
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    num_conta?: string | null
    iban?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Categoria?: CategoriaRHCreateNestedOneWithoutFuncionarioInput
    dadosprofissionais?: DadosProfissionaisCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoCreateNestedManyWithoutFuncionarioInput
    Banco?: BancoCreateNestedOneWithoutFuncionarioInput
    avaliacao?: AvaliacaoCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioUncheckedCreateWithoutFuncaoInput = {
    id?: number
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    id_categoria?: number | null
    num_conta?: string | null
    iban?: string | null
    Id_banco?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesUncheckedCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralUncheckedCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedCreateNestedManyWithoutFuncionarioInput
    avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioCreateOrConnectWithoutFuncaoInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutFuncaoInput, FuncionarioUncheckedCreateWithoutFuncaoInput>
  }

  export type FuncionarioCreateManyFuncaoInputEnvelope = {
    data: FuncionarioCreateManyFuncaoInput | FuncionarioCreateManyFuncaoInput[]
    skipDuplicates?: boolean
  }

  export type FuncionarioUpsertWithWhereUniqueWithoutFuncaoInput = {
    where: FuncionarioWhereUniqueInput
    update: XOR<FuncionarioUpdateWithoutFuncaoInput, FuncionarioUncheckedUpdateWithoutFuncaoInput>
    create: XOR<FuncionarioCreateWithoutFuncaoInput, FuncionarioUncheckedCreateWithoutFuncaoInput>
  }

  export type FuncionarioUpdateWithWhereUniqueWithoutFuncaoInput = {
    where: FuncionarioWhereUniqueInput
    data: XOR<FuncionarioUpdateWithoutFuncaoInput, FuncionarioUncheckedUpdateWithoutFuncaoInput>
  }

  export type FuncionarioUpdateManyWithWhereWithoutFuncaoInput = {
    where: FuncionarioScalarWhereInput
    data: XOR<FuncionarioUpdateManyMutationInput, FuncionarioUncheckedUpdateManyWithoutFuncaoInput>
  }

  export type FuncionarioCreateWithoutBancoInput = {
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    num_conta?: string | null
    iban?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Funcao?: FuncaoCreateNestedOneWithoutFuncionarioInput
    Categoria?: CategoriaRHCreateNestedOneWithoutFuncionarioInput
    dadosprofissionais?: DadosProfissionaisCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoCreateNestedManyWithoutFuncionarioInput
    avaliacao?: AvaliacaoCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioUncheckedCreateWithoutBancoInput = {
    id?: number
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    id_funcao?: number | null
    id_categoria?: number | null
    num_conta?: string | null
    iban?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesUncheckedCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralUncheckedCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedCreateNestedManyWithoutFuncionarioInput
    avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioCreateOrConnectWithoutBancoInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutBancoInput, FuncionarioUncheckedCreateWithoutBancoInput>
  }

  export type FuncionarioCreateManyBancoInputEnvelope = {
    data: FuncionarioCreateManyBancoInput | FuncionarioCreateManyBancoInput[]
    skipDuplicates?: boolean
  }

  export type FuncionarioUpsertWithWhereUniqueWithoutBancoInput = {
    where: FuncionarioWhereUniqueInput
    update: XOR<FuncionarioUpdateWithoutBancoInput, FuncionarioUncheckedUpdateWithoutBancoInput>
    create: XOR<FuncionarioCreateWithoutBancoInput, FuncionarioUncheckedCreateWithoutBancoInput>
  }

  export type FuncionarioUpdateWithWhereUniqueWithoutBancoInput = {
    where: FuncionarioWhereUniqueInput
    data: XOR<FuncionarioUpdateWithoutBancoInput, FuncionarioUncheckedUpdateWithoutBancoInput>
  }

  export type FuncionarioUpdateManyWithWhereWithoutBancoInput = {
    where: FuncionarioScalarWhereInput
    data: XOR<FuncionarioUpdateManyMutationInput, FuncionarioUncheckedUpdateManyWithoutBancoInput>
  }

  export type FuncaoCreateWithoutFuncionarioInput = {
    nome_funcao: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FuncaoUncheckedCreateWithoutFuncionarioInput = {
    id?: number
    nome_funcao: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FuncaoCreateOrConnectWithoutFuncionarioInput = {
    where: FuncaoWhereUniqueInput
    create: XOR<FuncaoCreateWithoutFuncionarioInput, FuncaoUncheckedCreateWithoutFuncionarioInput>
  }

  export type CategoriaRHCreateWithoutFuncionarioInput = {
    nome_categoria: string
    salario_base: number
    createdAt?: Date | string
    updatedAt?: Date | string
    Carreira?: CarreiraCreateNestedOneWithoutCateroriaInput
    SubCarreira?: SubCarreiraCreateNestedOneWithoutCategoriaInput
  }

  export type CategoriaRHUncheckedCreateWithoutFuncionarioInput = {
    id?: number
    nome_categoria: string
    salario_base: number
    Id_carreira?: number | null
    Id_subCarreira?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoriaRHCreateOrConnectWithoutFuncionarioInput = {
    where: CategoriaRHWhereUniqueInput
    create: XOR<CategoriaRHCreateWithoutFuncionarioInput, CategoriaRHUncheckedCreateWithoutFuncionarioInput>
  }

  export type DadosProfissionaisCreateWithoutFuncionarioInput = {
    data_admissao: Date | string
    numero_despacho?: string | null
    data_despacho: Date | string
    contrato: $Enums.Contrato
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DadosProfissionaisUncheckedCreateWithoutFuncionarioInput = {
    id?: number
    data_admissao: Date | string
    numero_despacho?: string | null
    data_despacho: Date | string
    contrato: $Enums.Contrato
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DadosProfissionaisCreateOrConnectWithoutFuncionarioInput = {
    where: DadosProfissionaisWhereUniqueInput
    create: XOR<DadosProfissionaisCreateWithoutFuncionarioInput, DadosProfissionaisUncheckedCreateWithoutFuncionarioInput>
  }

  export type DadosProfissionaisCreateManyFuncionarioInputEnvelope = {
    data: DadosProfissionaisCreateManyFuncionarioInput | DadosProfissionaisCreateManyFuncionarioInput[]
    skipDuplicates?: boolean
  }

  export type FormacoesCreateWithoutFuncionarioInput = {
    ano_inicio: Date | string
    ano_termino: Date | string
    formacao: string
    pais: string
    instituicao: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FormacoesUncheckedCreateWithoutFuncionarioInput = {
    id?: number
    ano_inicio: Date | string
    ano_termino: Date | string
    formacao: string
    pais: string
    instituicao: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FormacoesCreateOrConnectWithoutFuncionarioInput = {
    where: FormacoesWhereUniqueInput
    create: XOR<FormacoesCreateWithoutFuncionarioInput, FormacoesUncheckedCreateWithoutFuncionarioInput>
  }

  export type FormacoesCreateManyFuncionarioInputEnvelope = {
    data: FormacoesCreateManyFuncionarioInput | FormacoesCreateManyFuncionarioInput[]
    skipDuplicates?: boolean
  }

  export type ExperiencialLaboralCreateWithoutFuncionarioInput = {
    ano_inicio: Date | string
    ano_termino: Date | string
    funcao: string
    instituicao: string
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ExperiencialLaboralUncheckedCreateWithoutFuncionarioInput = {
    id?: number
    ano_inicio: Date | string
    ano_termino: Date | string
    funcao: string
    instituicao: string
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ExperiencialLaboralCreateOrConnectWithoutFuncionarioInput = {
    where: ExperiencialLaboralWhereUniqueInput
    create: XOR<ExperiencialLaboralCreateWithoutFuncionarioInput, ExperiencialLaboralUncheckedCreateWithoutFuncionarioInput>
  }

  export type ExperiencialLaboralCreateManyFuncionarioInputEnvelope = {
    data: ExperiencialLaboralCreateManyFuncionarioInput | ExperiencialLaboralCreateManyFuncionarioInput[]
    skipDuplicates?: boolean
  }

  export type DepartamentoCreateWithoutFuncionario_chefeInput = {
    nome_departamento: string
    createdAt?: Date | string
    updatedAt?: Date | string
    funcionario_supervisor?: FuncionarioCreateNestedOneWithoutDepartamentosComoSupervisorInput
    avaliacao?: AvaliacaoCreateNestedManyWithoutDepartamentoInput
    funcionariodepartamento?: FuncionarioDepartamentoCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoUncheckedCreateWithoutFuncionario_chefeInput = {
    id?: number
    nome_departamento: string
    Id_funcionario_supervisor?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutDepartamentoInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoCreateOrConnectWithoutFuncionario_chefeInput = {
    where: DepartamentoWhereUniqueInput
    create: XOR<DepartamentoCreateWithoutFuncionario_chefeInput, DepartamentoUncheckedCreateWithoutFuncionario_chefeInput>
  }

  export type DepartamentoCreateManyFuncionario_chefeInputEnvelope = {
    data: DepartamentoCreateManyFuncionario_chefeInput | DepartamentoCreateManyFuncionario_chefeInput[]
    skipDuplicates?: boolean
  }

  export type DepartamentoCreateWithoutFuncionario_supervisorInput = {
    nome_departamento: string
    createdAt?: Date | string
    updatedAt?: Date | string
    funcionario_chefe?: FuncionarioCreateNestedOneWithoutDepartamentosComoChefeInput
    avaliacao?: AvaliacaoCreateNestedManyWithoutDepartamentoInput
    funcionariodepartamento?: FuncionarioDepartamentoCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoUncheckedCreateWithoutFuncionario_supervisorInput = {
    id?: number
    nome_departamento: string
    Id_funcionario_chefe?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutDepartamentoInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoCreateOrConnectWithoutFuncionario_supervisorInput = {
    where: DepartamentoWhereUniqueInput
    create: XOR<DepartamentoCreateWithoutFuncionario_supervisorInput, DepartamentoUncheckedCreateWithoutFuncionario_supervisorInput>
  }

  export type DepartamentoCreateManyFuncionario_supervisorInputEnvelope = {
    data: DepartamentoCreateManyFuncionario_supervisorInput | DepartamentoCreateManyFuncionario_supervisorInput[]
    skipDuplicates?: boolean
  }

  export type FuncionarioDepartamentoCreateWithoutFuncionarioInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    Departamento?: DepartamentoCreateNestedOneWithoutFuncionariodepartamentoInput
  }

  export type FuncionarioDepartamentoUncheckedCreateWithoutFuncionarioInput = {
    id?: number
    Id_departamento?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FuncionarioDepartamentoCreateOrConnectWithoutFuncionarioInput = {
    where: FuncionarioDepartamentoWhereUniqueInput
    create: XOR<FuncionarioDepartamentoCreateWithoutFuncionarioInput, FuncionarioDepartamentoUncheckedCreateWithoutFuncionarioInput>
  }

  export type FuncionarioDepartamentoCreateManyFuncionarioInputEnvelope = {
    data: FuncionarioDepartamentoCreateManyFuncionarioInput | FuncionarioDepartamentoCreateManyFuncionarioInput[]
    skipDuplicates?: boolean
  }

  export type BancoCreateWithoutFuncionarioInput = {
    nome_banco: string
    codigo: string
    sigla: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BancoUncheckedCreateWithoutFuncionarioInput = {
    id?: number
    nome_banco: string
    codigo: string
    sigla: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BancoCreateOrConnectWithoutFuncionarioInput = {
    where: BancoWhereUniqueInput
    create: XOR<BancoCreateWithoutFuncionarioInput, BancoUncheckedCreateWithoutFuncionarioInput>
  }

  export type AvaliacaoCreateWithoutFuncionarioInput = {
    Tipo_Avaliacao: $Enums.TipoAvaliacao
    status: $Enums.Status
    data?: Date | string
    comentario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    FichaAvaliacao?: FichaAvaliacaoCreateNestedOneWithoutAvaliacaoInput
    Departamento?: DepartamentoCreateNestedOneWithoutAvaliacaoInput
  }

  export type AvaliacaoUncheckedCreateWithoutFuncionarioInput = {
    id?: number
    id_fichaAvaliacao?: number | null
    id_departamento?: number | null
    Tipo_Avaliacao: $Enums.TipoAvaliacao
    status: $Enums.Status
    data?: Date | string
    comentario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AvaliacaoCreateOrConnectWithoutFuncionarioInput = {
    where: AvaliacaoWhereUniqueInput
    create: XOR<AvaliacaoCreateWithoutFuncionarioInput, AvaliacaoUncheckedCreateWithoutFuncionarioInput>
  }

  export type AvaliacaoCreateManyFuncionarioInputEnvelope = {
    data: AvaliacaoCreateManyFuncionarioInput | AvaliacaoCreateManyFuncionarioInput[]
    skipDuplicates?: boolean
  }

  export type FuncaoUpsertWithoutFuncionarioInput = {
    update: XOR<FuncaoUpdateWithoutFuncionarioInput, FuncaoUncheckedUpdateWithoutFuncionarioInput>
    create: XOR<FuncaoCreateWithoutFuncionarioInput, FuncaoUncheckedCreateWithoutFuncionarioInput>
    where?: FuncaoWhereInput
  }

  export type FuncaoUpdateToOneWithWhereWithoutFuncionarioInput = {
    where?: FuncaoWhereInput
    data: XOR<FuncaoUpdateWithoutFuncionarioInput, FuncaoUncheckedUpdateWithoutFuncionarioInput>
  }

  export type FuncaoUpdateWithoutFuncionarioInput = {
    nome_funcao?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncaoUncheckedUpdateWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_funcao?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoriaRHUpsertWithoutFuncionarioInput = {
    update: XOR<CategoriaRHUpdateWithoutFuncionarioInput, CategoriaRHUncheckedUpdateWithoutFuncionarioInput>
    create: XOR<CategoriaRHCreateWithoutFuncionarioInput, CategoriaRHUncheckedCreateWithoutFuncionarioInput>
    where?: CategoriaRHWhereInput
  }

  export type CategoriaRHUpdateToOneWithWhereWithoutFuncionarioInput = {
    where?: CategoriaRHWhereInput
    data: XOR<CategoriaRHUpdateWithoutFuncionarioInput, CategoriaRHUncheckedUpdateWithoutFuncionarioInput>
  }

  export type CategoriaRHUpdateWithoutFuncionarioInput = {
    nome_categoria?: StringFieldUpdateOperationsInput | string
    salario_base?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Carreira?: CarreiraUpdateOneWithoutCateroriaNestedInput
    SubCarreira?: SubCarreiraUpdateOneWithoutCategoriaNestedInput
  }

  export type CategoriaRHUncheckedUpdateWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_categoria?: StringFieldUpdateOperationsInput | string
    salario_base?: FloatFieldUpdateOperationsInput | number
    Id_carreira?: NullableIntFieldUpdateOperationsInput | number | null
    Id_subCarreira?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DadosProfissionaisUpsertWithWhereUniqueWithoutFuncionarioInput = {
    where: DadosProfissionaisWhereUniqueInput
    update: XOR<DadosProfissionaisUpdateWithoutFuncionarioInput, DadosProfissionaisUncheckedUpdateWithoutFuncionarioInput>
    create: XOR<DadosProfissionaisCreateWithoutFuncionarioInput, DadosProfissionaisUncheckedCreateWithoutFuncionarioInput>
  }

  export type DadosProfissionaisUpdateWithWhereUniqueWithoutFuncionarioInput = {
    where: DadosProfissionaisWhereUniqueInput
    data: XOR<DadosProfissionaisUpdateWithoutFuncionarioInput, DadosProfissionaisUncheckedUpdateWithoutFuncionarioInput>
  }

  export type DadosProfissionaisUpdateManyWithWhereWithoutFuncionarioInput = {
    where: DadosProfissionaisScalarWhereInput
    data: XOR<DadosProfissionaisUpdateManyMutationInput, DadosProfissionaisUncheckedUpdateManyWithoutFuncionarioInput>
  }

  export type DadosProfissionaisScalarWhereInput = {
    AND?: DadosProfissionaisScalarWhereInput | DadosProfissionaisScalarWhereInput[]
    OR?: DadosProfissionaisScalarWhereInput[]
    NOT?: DadosProfissionaisScalarWhereInput | DadosProfissionaisScalarWhereInput[]
    id?: IntFilter<"DadosProfissionais"> | number
    data_admissao?: DateTimeFilter<"DadosProfissionais"> | Date | string
    numero_despacho?: StringNullableFilter<"DadosProfissionais"> | string | null
    data_despacho?: DateTimeFilter<"DadosProfissionais"> | Date | string
    contrato?: EnumContratoFilter<"DadosProfissionais"> | $Enums.Contrato
    Id_funcionario?: IntNullableFilter<"DadosProfissionais"> | number | null
    createdAt?: DateTimeFilter<"DadosProfissionais"> | Date | string
    updatedAt?: DateTimeFilter<"DadosProfissionais"> | Date | string
  }

  export type FormacoesUpsertWithWhereUniqueWithoutFuncionarioInput = {
    where: FormacoesWhereUniqueInput
    update: XOR<FormacoesUpdateWithoutFuncionarioInput, FormacoesUncheckedUpdateWithoutFuncionarioInput>
    create: XOR<FormacoesCreateWithoutFuncionarioInput, FormacoesUncheckedCreateWithoutFuncionarioInput>
  }

  export type FormacoesUpdateWithWhereUniqueWithoutFuncionarioInput = {
    where: FormacoesWhereUniqueInput
    data: XOR<FormacoesUpdateWithoutFuncionarioInput, FormacoesUncheckedUpdateWithoutFuncionarioInput>
  }

  export type FormacoesUpdateManyWithWhereWithoutFuncionarioInput = {
    where: FormacoesScalarWhereInput
    data: XOR<FormacoesUpdateManyMutationInput, FormacoesUncheckedUpdateManyWithoutFuncionarioInput>
  }

  export type FormacoesScalarWhereInput = {
    AND?: FormacoesScalarWhereInput | FormacoesScalarWhereInput[]
    OR?: FormacoesScalarWhereInput[]
    NOT?: FormacoesScalarWhereInput | FormacoesScalarWhereInput[]
    id?: IntFilter<"Formacoes"> | number
    ano_inicio?: DateTimeFilter<"Formacoes"> | Date | string
    ano_termino?: DateTimeFilter<"Formacoes"> | Date | string
    formacao?: StringFilter<"Formacoes"> | string
    pais?: StringFilter<"Formacoes"> | string
    instituicao?: StringFilter<"Formacoes"> | string
    Id_funcionario?: IntNullableFilter<"Formacoes"> | number | null
    createdAt?: DateTimeFilter<"Formacoes"> | Date | string
    updatedAt?: DateTimeFilter<"Formacoes"> | Date | string
  }

  export type ExperiencialLaboralUpsertWithWhereUniqueWithoutFuncionarioInput = {
    where: ExperiencialLaboralWhereUniqueInput
    update: XOR<ExperiencialLaboralUpdateWithoutFuncionarioInput, ExperiencialLaboralUncheckedUpdateWithoutFuncionarioInput>
    create: XOR<ExperiencialLaboralCreateWithoutFuncionarioInput, ExperiencialLaboralUncheckedCreateWithoutFuncionarioInput>
  }

  export type ExperiencialLaboralUpdateWithWhereUniqueWithoutFuncionarioInput = {
    where: ExperiencialLaboralWhereUniqueInput
    data: XOR<ExperiencialLaboralUpdateWithoutFuncionarioInput, ExperiencialLaboralUncheckedUpdateWithoutFuncionarioInput>
  }

  export type ExperiencialLaboralUpdateManyWithWhereWithoutFuncionarioInput = {
    where: ExperiencialLaboralScalarWhereInput
    data: XOR<ExperiencialLaboralUpdateManyMutationInput, ExperiencialLaboralUncheckedUpdateManyWithoutFuncionarioInput>
  }

  export type ExperiencialLaboralScalarWhereInput = {
    AND?: ExperiencialLaboralScalarWhereInput | ExperiencialLaboralScalarWhereInput[]
    OR?: ExperiencialLaboralScalarWhereInput[]
    NOT?: ExperiencialLaboralScalarWhereInput | ExperiencialLaboralScalarWhereInput[]
    id?: IntFilter<"ExperiencialLaboral"> | number
    ano_inicio?: DateTimeFilter<"ExperiencialLaboral"> | Date | string
    ano_termino?: DateTimeFilter<"ExperiencialLaboral"> | Date | string
    funcao?: StringFilter<"ExperiencialLaboral"> | string
    instituicao?: StringFilter<"ExperiencialLaboral"> | string
    pais?: StringNullableFilter<"ExperiencialLaboral"> | string | null
    createdAt?: DateTimeFilter<"ExperiencialLaboral"> | Date | string
    updatedAt?: DateTimeFilter<"ExperiencialLaboral"> | Date | string
    Id_funcionario?: IntNullableFilter<"ExperiencialLaboral"> | number | null
  }

  export type DepartamentoUpsertWithWhereUniqueWithoutFuncionario_chefeInput = {
    where: DepartamentoWhereUniqueInput
    update: XOR<DepartamentoUpdateWithoutFuncionario_chefeInput, DepartamentoUncheckedUpdateWithoutFuncionario_chefeInput>
    create: XOR<DepartamentoCreateWithoutFuncionario_chefeInput, DepartamentoUncheckedCreateWithoutFuncionario_chefeInput>
  }

  export type DepartamentoUpdateWithWhereUniqueWithoutFuncionario_chefeInput = {
    where: DepartamentoWhereUniqueInput
    data: XOR<DepartamentoUpdateWithoutFuncionario_chefeInput, DepartamentoUncheckedUpdateWithoutFuncionario_chefeInput>
  }

  export type DepartamentoUpdateManyWithWhereWithoutFuncionario_chefeInput = {
    where: DepartamentoScalarWhereInput
    data: XOR<DepartamentoUpdateManyMutationInput, DepartamentoUncheckedUpdateManyWithoutFuncionario_chefeInput>
  }

  export type DepartamentoScalarWhereInput = {
    AND?: DepartamentoScalarWhereInput | DepartamentoScalarWhereInput[]
    OR?: DepartamentoScalarWhereInput[]
    NOT?: DepartamentoScalarWhereInput | DepartamentoScalarWhereInput[]
    id?: IntFilter<"Departamento"> | number
    nome_departamento?: StringFilter<"Departamento"> | string
    Id_funcionario_chefe?: IntNullableFilter<"Departamento"> | number | null
    Id_funcionario_supervisor?: IntNullableFilter<"Departamento"> | number | null
    createdAt?: DateTimeFilter<"Departamento"> | Date | string
    updatedAt?: DateTimeFilter<"Departamento"> | Date | string
  }

  export type DepartamentoUpsertWithWhereUniqueWithoutFuncionario_supervisorInput = {
    where: DepartamentoWhereUniqueInput
    update: XOR<DepartamentoUpdateWithoutFuncionario_supervisorInput, DepartamentoUncheckedUpdateWithoutFuncionario_supervisorInput>
    create: XOR<DepartamentoCreateWithoutFuncionario_supervisorInput, DepartamentoUncheckedCreateWithoutFuncionario_supervisorInput>
  }

  export type DepartamentoUpdateWithWhereUniqueWithoutFuncionario_supervisorInput = {
    where: DepartamentoWhereUniqueInput
    data: XOR<DepartamentoUpdateWithoutFuncionario_supervisorInput, DepartamentoUncheckedUpdateWithoutFuncionario_supervisorInput>
  }

  export type DepartamentoUpdateManyWithWhereWithoutFuncionario_supervisorInput = {
    where: DepartamentoScalarWhereInput
    data: XOR<DepartamentoUpdateManyMutationInput, DepartamentoUncheckedUpdateManyWithoutFuncionario_supervisorInput>
  }

  export type FuncionarioDepartamentoUpsertWithWhereUniqueWithoutFuncionarioInput = {
    where: FuncionarioDepartamentoWhereUniqueInput
    update: XOR<FuncionarioDepartamentoUpdateWithoutFuncionarioInput, FuncionarioDepartamentoUncheckedUpdateWithoutFuncionarioInput>
    create: XOR<FuncionarioDepartamentoCreateWithoutFuncionarioInput, FuncionarioDepartamentoUncheckedCreateWithoutFuncionarioInput>
  }

  export type FuncionarioDepartamentoUpdateWithWhereUniqueWithoutFuncionarioInput = {
    where: FuncionarioDepartamentoWhereUniqueInput
    data: XOR<FuncionarioDepartamentoUpdateWithoutFuncionarioInput, FuncionarioDepartamentoUncheckedUpdateWithoutFuncionarioInput>
  }

  export type FuncionarioDepartamentoUpdateManyWithWhereWithoutFuncionarioInput = {
    where: FuncionarioDepartamentoScalarWhereInput
    data: XOR<FuncionarioDepartamentoUpdateManyMutationInput, FuncionarioDepartamentoUncheckedUpdateManyWithoutFuncionarioInput>
  }

  export type FuncionarioDepartamentoScalarWhereInput = {
    AND?: FuncionarioDepartamentoScalarWhereInput | FuncionarioDepartamentoScalarWhereInput[]
    OR?: FuncionarioDepartamentoScalarWhereInput[]
    NOT?: FuncionarioDepartamentoScalarWhereInput | FuncionarioDepartamentoScalarWhereInput[]
    id?: IntFilter<"FuncionarioDepartamento"> | number
    Id_departamento?: IntNullableFilter<"FuncionarioDepartamento"> | number | null
    Id_funcionario?: IntNullableFilter<"FuncionarioDepartamento"> | number | null
    createdAt?: DateTimeFilter<"FuncionarioDepartamento"> | Date | string
    updatedAt?: DateTimeFilter<"FuncionarioDepartamento"> | Date | string
  }

  export type BancoUpsertWithoutFuncionarioInput = {
    update: XOR<BancoUpdateWithoutFuncionarioInput, BancoUncheckedUpdateWithoutFuncionarioInput>
    create: XOR<BancoCreateWithoutFuncionarioInput, BancoUncheckedCreateWithoutFuncionarioInput>
    where?: BancoWhereInput
  }

  export type BancoUpdateToOneWithWhereWithoutFuncionarioInput = {
    where?: BancoWhereInput
    data: XOR<BancoUpdateWithoutFuncionarioInput, BancoUncheckedUpdateWithoutFuncionarioInput>
  }

  export type BancoUpdateWithoutFuncionarioInput = {
    nome_banco?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    sigla?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BancoUncheckedUpdateWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_banco?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    sigla?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AvaliacaoUpsertWithWhereUniqueWithoutFuncionarioInput = {
    where: AvaliacaoWhereUniqueInput
    update: XOR<AvaliacaoUpdateWithoutFuncionarioInput, AvaliacaoUncheckedUpdateWithoutFuncionarioInput>
    create: XOR<AvaliacaoCreateWithoutFuncionarioInput, AvaliacaoUncheckedCreateWithoutFuncionarioInput>
  }

  export type AvaliacaoUpdateWithWhereUniqueWithoutFuncionarioInput = {
    where: AvaliacaoWhereUniqueInput
    data: XOR<AvaliacaoUpdateWithoutFuncionarioInput, AvaliacaoUncheckedUpdateWithoutFuncionarioInput>
  }

  export type AvaliacaoUpdateManyWithWhereWithoutFuncionarioInput = {
    where: AvaliacaoScalarWhereInput
    data: XOR<AvaliacaoUpdateManyMutationInput, AvaliacaoUncheckedUpdateManyWithoutFuncionarioInput>
  }

  export type AvaliacaoScalarWhereInput = {
    AND?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
    OR?: AvaliacaoScalarWhereInput[]
    NOT?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
    id?: IntFilter<"Avaliacao"> | number
    id_funcionario_avaliador?: IntNullableFilter<"Avaliacao"> | number | null
    id_fichaAvaliacao?: IntNullableFilter<"Avaliacao"> | number | null
    id_departamento?: IntNullableFilter<"Avaliacao"> | number | null
    Tipo_Avaliacao?: EnumTipoAvaliacaoFilter<"Avaliacao"> | $Enums.TipoAvaliacao
    status?: EnumStatusFilter<"Avaliacao"> | $Enums.Status
    data?: DateTimeFilter<"Avaliacao"> | Date | string
    comentario?: StringNullableFilter<"Avaliacao"> | string | null
    createdAt?: DateTimeFilter<"Avaliacao"> | Date | string
    updatedAt?: DateTimeFilter<"Avaliacao"> | Date | string
  }

  export type FuncionarioCreateWithoutDadosprofissionaisInput = {
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    num_conta?: string | null
    iban?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Funcao?: FuncaoCreateNestedOneWithoutFuncionarioInput
    Categoria?: CategoriaRHCreateNestedOneWithoutFuncionarioInput
    formacoes?: FormacoesCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoCreateNestedManyWithoutFuncionarioInput
    Banco?: BancoCreateNestedOneWithoutFuncionarioInput
    avaliacao?: AvaliacaoCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioUncheckedCreateWithoutDadosprofissionaisInput = {
    id?: number
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    id_funcao?: number | null
    id_categoria?: number | null
    num_conta?: string | null
    iban?: string | null
    Id_banco?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    formacoes?: FormacoesUncheckedCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralUncheckedCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedCreateNestedManyWithoutFuncionarioInput
    avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioCreateOrConnectWithoutDadosprofissionaisInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutDadosprofissionaisInput, FuncionarioUncheckedCreateWithoutDadosprofissionaisInput>
  }

  export type FuncionarioUpsertWithoutDadosprofissionaisInput = {
    update: XOR<FuncionarioUpdateWithoutDadosprofissionaisInput, FuncionarioUncheckedUpdateWithoutDadosprofissionaisInput>
    create: XOR<FuncionarioCreateWithoutDadosprofissionaisInput, FuncionarioUncheckedCreateWithoutDadosprofissionaisInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutDadosprofissionaisInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutDadosprofissionaisInput, FuncionarioUncheckedUpdateWithoutDadosprofissionaisInput>
  }

  export type FuncionarioUpdateWithoutDadosprofissionaisInput = {
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Funcao?: FuncaoUpdateOneWithoutFuncionarioNestedInput
    Categoria?: CategoriaRHUpdateOneWithoutFuncionarioNestedInput
    formacoes?: FormacoesUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUpdateManyWithoutFuncionarioNestedInput
    Banco?: BancoUpdateOneWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutDadosprofissionaisInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    id_funcao?: NullableIntFieldUpdateOperationsInput | number | null
    id_categoria?: NullableIntFieldUpdateOperationsInput | number | null
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    Id_banco?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    formacoes?: FormacoesUncheckedUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUncheckedUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUncheckedUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUncheckedUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedUpdateManyWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUncheckedUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioCreateWithoutFormacoesInput = {
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    num_conta?: string | null
    iban?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Funcao?: FuncaoCreateNestedOneWithoutFuncionarioInput
    Categoria?: CategoriaRHCreateNestedOneWithoutFuncionarioInput
    dadosprofissionais?: DadosProfissionaisCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoCreateNestedManyWithoutFuncionarioInput
    Banco?: BancoCreateNestedOneWithoutFuncionarioInput
    avaliacao?: AvaliacaoCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioUncheckedCreateWithoutFormacoesInput = {
    id?: number
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    id_funcao?: number | null
    id_categoria?: number | null
    num_conta?: string | null
    iban?: string | null
    Id_banco?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralUncheckedCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedCreateNestedManyWithoutFuncionarioInput
    avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioCreateOrConnectWithoutFormacoesInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutFormacoesInput, FuncionarioUncheckedCreateWithoutFormacoesInput>
  }

  export type FuncionarioUpsertWithoutFormacoesInput = {
    update: XOR<FuncionarioUpdateWithoutFormacoesInput, FuncionarioUncheckedUpdateWithoutFormacoesInput>
    create: XOR<FuncionarioCreateWithoutFormacoesInput, FuncionarioUncheckedCreateWithoutFormacoesInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutFormacoesInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutFormacoesInput, FuncionarioUncheckedUpdateWithoutFormacoesInput>
  }

  export type FuncionarioUpdateWithoutFormacoesInput = {
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Funcao?: FuncaoUpdateOneWithoutFuncionarioNestedInput
    Categoria?: CategoriaRHUpdateOneWithoutFuncionarioNestedInput
    dadosprofissionais?: DadosProfissionaisUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUpdateManyWithoutFuncionarioNestedInput
    Banco?: BancoUpdateOneWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutFormacoesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    id_funcao?: NullableIntFieldUpdateOperationsInput | number | null
    id_categoria?: NullableIntFieldUpdateOperationsInput | number | null
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    Id_banco?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUncheckedUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUncheckedUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUncheckedUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedUpdateManyWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUncheckedUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioCreateWithoutEsperiencialaboralInput = {
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    num_conta?: string | null
    iban?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Funcao?: FuncaoCreateNestedOneWithoutFuncionarioInput
    Categoria?: CategoriaRHCreateNestedOneWithoutFuncionarioInput
    dadosprofissionais?: DadosProfissionaisCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoCreateNestedManyWithoutFuncionarioInput
    Banco?: BancoCreateNestedOneWithoutFuncionarioInput
    avaliacao?: AvaliacaoCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioUncheckedCreateWithoutEsperiencialaboralInput = {
    id?: number
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    id_funcao?: number | null
    id_categoria?: number | null
    num_conta?: string | null
    iban?: string | null
    Id_banco?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesUncheckedCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedCreateNestedManyWithoutFuncionarioInput
    avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioCreateOrConnectWithoutEsperiencialaboralInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutEsperiencialaboralInput, FuncionarioUncheckedCreateWithoutEsperiencialaboralInput>
  }

  export type FuncionarioUpsertWithoutEsperiencialaboralInput = {
    update: XOR<FuncionarioUpdateWithoutEsperiencialaboralInput, FuncionarioUncheckedUpdateWithoutEsperiencialaboralInput>
    create: XOR<FuncionarioCreateWithoutEsperiencialaboralInput, FuncionarioUncheckedCreateWithoutEsperiencialaboralInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutEsperiencialaboralInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutEsperiencialaboralInput, FuncionarioUncheckedUpdateWithoutEsperiencialaboralInput>
  }

  export type FuncionarioUpdateWithoutEsperiencialaboralInput = {
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Funcao?: FuncaoUpdateOneWithoutFuncionarioNestedInput
    Categoria?: CategoriaRHUpdateOneWithoutFuncionarioNestedInput
    dadosprofissionais?: DadosProfissionaisUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUpdateManyWithoutFuncionarioNestedInput
    Banco?: BancoUpdateOneWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutEsperiencialaboralInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    id_funcao?: NullableIntFieldUpdateOperationsInput | number | null
    id_categoria?: NullableIntFieldUpdateOperationsInput | number | null
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    Id_banco?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUncheckedUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUncheckedUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUncheckedUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedUpdateManyWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUncheckedUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioCreateWithoutDepartamentosComoChefeInput = {
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    num_conta?: string | null
    iban?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Funcao?: FuncaoCreateNestedOneWithoutFuncionarioInput
    Categoria?: CategoriaRHCreateNestedOneWithoutFuncionarioInput
    dadosprofissionais?: DadosProfissionaisCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralCreateNestedManyWithoutFuncionarioInput
    departamentosComoSupervisor?: DepartamentoCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoCreateNestedManyWithoutFuncionarioInput
    Banco?: BancoCreateNestedOneWithoutFuncionarioInput
    avaliacao?: AvaliacaoCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioUncheckedCreateWithoutDepartamentosComoChefeInput = {
    id?: number
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    id_funcao?: number | null
    id_categoria?: number | null
    num_conta?: string | null
    iban?: string | null
    Id_banco?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesUncheckedCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralUncheckedCreateNestedManyWithoutFuncionarioInput
    departamentosComoSupervisor?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedCreateNestedManyWithoutFuncionarioInput
    avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioCreateOrConnectWithoutDepartamentosComoChefeInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutDepartamentosComoChefeInput, FuncionarioUncheckedCreateWithoutDepartamentosComoChefeInput>
  }

  export type FuncionarioCreateWithoutDepartamentosComoSupervisorInput = {
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    num_conta?: string | null
    iban?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Funcao?: FuncaoCreateNestedOneWithoutFuncionarioInput
    Categoria?: CategoriaRHCreateNestedOneWithoutFuncionarioInput
    dadosprofissionais?: DadosProfissionaisCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoCreateNestedManyWithoutFuncionario_chefeInput
    funcionariodepartamento?: FuncionarioDepartamentoCreateNestedManyWithoutFuncionarioInput
    Banco?: BancoCreateNestedOneWithoutFuncionarioInput
    avaliacao?: AvaliacaoCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioUncheckedCreateWithoutDepartamentosComoSupervisorInput = {
    id?: number
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    id_funcao?: number | null
    id_categoria?: number | null
    num_conta?: string | null
    iban?: string | null
    Id_banco?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesUncheckedCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralUncheckedCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_chefeInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedCreateNestedManyWithoutFuncionarioInput
    avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioCreateOrConnectWithoutDepartamentosComoSupervisorInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutDepartamentosComoSupervisorInput, FuncionarioUncheckedCreateWithoutDepartamentosComoSupervisorInput>
  }

  export type AvaliacaoCreateWithoutDepartamentoInput = {
    Tipo_Avaliacao: $Enums.TipoAvaliacao
    status: $Enums.Status
    data?: Date | string
    comentario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Funcionario?: FuncionarioCreateNestedOneWithoutAvaliacaoInput
    FichaAvaliacao?: FichaAvaliacaoCreateNestedOneWithoutAvaliacaoInput
  }

  export type AvaliacaoUncheckedCreateWithoutDepartamentoInput = {
    id?: number
    id_funcionario_avaliador?: number | null
    id_fichaAvaliacao?: number | null
    Tipo_Avaliacao: $Enums.TipoAvaliacao
    status: $Enums.Status
    data?: Date | string
    comentario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AvaliacaoCreateOrConnectWithoutDepartamentoInput = {
    where: AvaliacaoWhereUniqueInput
    create: XOR<AvaliacaoCreateWithoutDepartamentoInput, AvaliacaoUncheckedCreateWithoutDepartamentoInput>
  }

  export type AvaliacaoCreateManyDepartamentoInputEnvelope = {
    data: AvaliacaoCreateManyDepartamentoInput | AvaliacaoCreateManyDepartamentoInput[]
    skipDuplicates?: boolean
  }

  export type FuncionarioDepartamentoCreateWithoutDepartamentoInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    Funcionario?: FuncionarioCreateNestedOneWithoutFuncionariodepartamentoInput
  }

  export type FuncionarioDepartamentoUncheckedCreateWithoutDepartamentoInput = {
    id?: number
    Id_funcionario?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FuncionarioDepartamentoCreateOrConnectWithoutDepartamentoInput = {
    where: FuncionarioDepartamentoWhereUniqueInput
    create: XOR<FuncionarioDepartamentoCreateWithoutDepartamentoInput, FuncionarioDepartamentoUncheckedCreateWithoutDepartamentoInput>
  }

  export type FuncionarioDepartamentoCreateManyDepartamentoInputEnvelope = {
    data: FuncionarioDepartamentoCreateManyDepartamentoInput | FuncionarioDepartamentoCreateManyDepartamentoInput[]
    skipDuplicates?: boolean
  }

  export type FuncionarioUpsertWithoutDepartamentosComoChefeInput = {
    update: XOR<FuncionarioUpdateWithoutDepartamentosComoChefeInput, FuncionarioUncheckedUpdateWithoutDepartamentosComoChefeInput>
    create: XOR<FuncionarioCreateWithoutDepartamentosComoChefeInput, FuncionarioUncheckedCreateWithoutDepartamentosComoChefeInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutDepartamentosComoChefeInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutDepartamentosComoChefeInput, FuncionarioUncheckedUpdateWithoutDepartamentosComoChefeInput>
  }

  export type FuncionarioUpdateWithoutDepartamentosComoChefeInput = {
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Funcao?: FuncaoUpdateOneWithoutFuncionarioNestedInput
    Categoria?: CategoriaRHUpdateOneWithoutFuncionarioNestedInput
    dadosprofissionais?: DadosProfissionaisUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUpdateManyWithoutFuncionarioNestedInput
    departamentosComoSupervisor?: DepartamentoUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUpdateManyWithoutFuncionarioNestedInput
    Banco?: BancoUpdateOneWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutDepartamentosComoChefeInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    id_funcao?: NullableIntFieldUpdateOperationsInput | number | null
    id_categoria?: NullableIntFieldUpdateOperationsInput | number | null
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    Id_banco?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUncheckedUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUncheckedUpdateManyWithoutFuncionarioNestedInput
    departamentosComoSupervisor?: DepartamentoUncheckedUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedUpdateManyWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUncheckedUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioUpsertWithoutDepartamentosComoSupervisorInput = {
    update: XOR<FuncionarioUpdateWithoutDepartamentosComoSupervisorInput, FuncionarioUncheckedUpdateWithoutDepartamentosComoSupervisorInput>
    create: XOR<FuncionarioCreateWithoutDepartamentosComoSupervisorInput, FuncionarioUncheckedCreateWithoutDepartamentosComoSupervisorInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutDepartamentosComoSupervisorInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutDepartamentosComoSupervisorInput, FuncionarioUncheckedUpdateWithoutDepartamentosComoSupervisorInput>
  }

  export type FuncionarioUpdateWithoutDepartamentosComoSupervisorInput = {
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Funcao?: FuncaoUpdateOneWithoutFuncionarioNestedInput
    Categoria?: CategoriaRHUpdateOneWithoutFuncionarioNestedInput
    dadosprofissionais?: DadosProfissionaisUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUpdateManyWithoutFuncionario_chefeNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUpdateManyWithoutFuncionarioNestedInput
    Banco?: BancoUpdateOneWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutDepartamentosComoSupervisorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    id_funcao?: NullableIntFieldUpdateOperationsInput | number | null
    id_categoria?: NullableIntFieldUpdateOperationsInput | number | null
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    Id_banco?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUncheckedUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUncheckedUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUncheckedUpdateManyWithoutFuncionario_chefeNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedUpdateManyWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUncheckedUpdateManyWithoutFuncionarioNestedInput
  }

  export type AvaliacaoUpsertWithWhereUniqueWithoutDepartamentoInput = {
    where: AvaliacaoWhereUniqueInput
    update: XOR<AvaliacaoUpdateWithoutDepartamentoInput, AvaliacaoUncheckedUpdateWithoutDepartamentoInput>
    create: XOR<AvaliacaoCreateWithoutDepartamentoInput, AvaliacaoUncheckedCreateWithoutDepartamentoInput>
  }

  export type AvaliacaoUpdateWithWhereUniqueWithoutDepartamentoInput = {
    where: AvaliacaoWhereUniqueInput
    data: XOR<AvaliacaoUpdateWithoutDepartamentoInput, AvaliacaoUncheckedUpdateWithoutDepartamentoInput>
  }

  export type AvaliacaoUpdateManyWithWhereWithoutDepartamentoInput = {
    where: AvaliacaoScalarWhereInput
    data: XOR<AvaliacaoUpdateManyMutationInput, AvaliacaoUncheckedUpdateManyWithoutDepartamentoInput>
  }

  export type FuncionarioDepartamentoUpsertWithWhereUniqueWithoutDepartamentoInput = {
    where: FuncionarioDepartamentoWhereUniqueInput
    update: XOR<FuncionarioDepartamentoUpdateWithoutDepartamentoInput, FuncionarioDepartamentoUncheckedUpdateWithoutDepartamentoInput>
    create: XOR<FuncionarioDepartamentoCreateWithoutDepartamentoInput, FuncionarioDepartamentoUncheckedCreateWithoutDepartamentoInput>
  }

  export type FuncionarioDepartamentoUpdateWithWhereUniqueWithoutDepartamentoInput = {
    where: FuncionarioDepartamentoWhereUniqueInput
    data: XOR<FuncionarioDepartamentoUpdateWithoutDepartamentoInput, FuncionarioDepartamentoUncheckedUpdateWithoutDepartamentoInput>
  }

  export type FuncionarioDepartamentoUpdateManyWithWhereWithoutDepartamentoInput = {
    where: FuncionarioDepartamentoScalarWhereInput
    data: XOR<FuncionarioDepartamentoUpdateManyMutationInput, FuncionarioDepartamentoUncheckedUpdateManyWithoutDepartamentoInput>
  }

  export type DepartamentoCreateWithoutFuncionariodepartamentoInput = {
    nome_departamento: string
    createdAt?: Date | string
    updatedAt?: Date | string
    funcionario_chefe?: FuncionarioCreateNestedOneWithoutDepartamentosComoChefeInput
    funcionario_supervisor?: FuncionarioCreateNestedOneWithoutDepartamentosComoSupervisorInput
    avaliacao?: AvaliacaoCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoUncheckedCreateWithoutFuncionariodepartamentoInput = {
    id?: number
    nome_departamento: string
    Id_funcionario_chefe?: number | null
    Id_funcionario_supervisor?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoCreateOrConnectWithoutFuncionariodepartamentoInput = {
    where: DepartamentoWhereUniqueInput
    create: XOR<DepartamentoCreateWithoutFuncionariodepartamentoInput, DepartamentoUncheckedCreateWithoutFuncionariodepartamentoInput>
  }

  export type FuncionarioCreateWithoutFuncionariodepartamentoInput = {
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    num_conta?: string | null
    iban?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Funcao?: FuncaoCreateNestedOneWithoutFuncionarioInput
    Categoria?: CategoriaRHCreateNestedOneWithoutFuncionarioInput
    dadosprofissionais?: DadosProfissionaisCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoCreateNestedManyWithoutFuncionario_supervisorInput
    Banco?: BancoCreateNestedOneWithoutFuncionarioInput
    avaliacao?: AvaliacaoCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioUncheckedCreateWithoutFuncionariodepartamentoInput = {
    id?: number
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    id_funcao?: number | null
    id_categoria?: number | null
    num_conta?: string | null
    iban?: string | null
    Id_banco?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesUncheckedCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralUncheckedCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_supervisorInput
    avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioCreateOrConnectWithoutFuncionariodepartamentoInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutFuncionariodepartamentoInput, FuncionarioUncheckedCreateWithoutFuncionariodepartamentoInput>
  }

  export type DepartamentoUpsertWithoutFuncionariodepartamentoInput = {
    update: XOR<DepartamentoUpdateWithoutFuncionariodepartamentoInput, DepartamentoUncheckedUpdateWithoutFuncionariodepartamentoInput>
    create: XOR<DepartamentoCreateWithoutFuncionariodepartamentoInput, DepartamentoUncheckedCreateWithoutFuncionariodepartamentoInput>
    where?: DepartamentoWhereInput
  }

  export type DepartamentoUpdateToOneWithWhereWithoutFuncionariodepartamentoInput = {
    where?: DepartamentoWhereInput
    data: XOR<DepartamentoUpdateWithoutFuncionariodepartamentoInput, DepartamentoUncheckedUpdateWithoutFuncionariodepartamentoInput>
  }

  export type DepartamentoUpdateWithoutFuncionariodepartamentoInput = {
    nome_departamento?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario_chefe?: FuncionarioUpdateOneWithoutDepartamentosComoChefeNestedInput
    funcionario_supervisor?: FuncionarioUpdateOneWithoutDepartamentosComoSupervisorNestedInput
    avaliacao?: AvaliacaoUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoUncheckedUpdateWithoutFuncionariodepartamentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_departamento?: StringFieldUpdateOperationsInput | string
    Id_funcionario_chefe?: NullableIntFieldUpdateOperationsInput | number | null
    Id_funcionario_supervisor?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliacao?: AvaliacaoUncheckedUpdateManyWithoutDepartamentoNestedInput
  }

  export type FuncionarioUpsertWithoutFuncionariodepartamentoInput = {
    update: XOR<FuncionarioUpdateWithoutFuncionariodepartamentoInput, FuncionarioUncheckedUpdateWithoutFuncionariodepartamentoInput>
    create: XOR<FuncionarioCreateWithoutFuncionariodepartamentoInput, FuncionarioUncheckedCreateWithoutFuncionariodepartamentoInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutFuncionariodepartamentoInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutFuncionariodepartamentoInput, FuncionarioUncheckedUpdateWithoutFuncionariodepartamentoInput>
  }

  export type FuncionarioUpdateWithoutFuncionariodepartamentoInput = {
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Funcao?: FuncaoUpdateOneWithoutFuncionarioNestedInput
    Categoria?: CategoriaRHUpdateOneWithoutFuncionarioNestedInput
    dadosprofissionais?: DadosProfissionaisUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUpdateManyWithoutFuncionario_supervisorNestedInput
    Banco?: BancoUpdateOneWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutFuncionariodepartamentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    id_funcao?: NullableIntFieldUpdateOperationsInput | number | null
    id_categoria?: NullableIntFieldUpdateOperationsInput | number | null
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    Id_banco?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUncheckedUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUncheckedUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUncheckedUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUncheckedUpdateManyWithoutFuncionario_supervisorNestedInput
    avaliacao?: AvaliacaoUncheckedUpdateManyWithoutFuncionarioNestedInput
  }

  export type PerguntaFichaAvaliacaoCreateWithoutFichaAvaliacaoInput = {
    descricao: string
    nivel_esperado: number
    createdAt?: Date | string
    updatedAt?: Date | string
    Competencia?: CompetenciaCreateNestedOneWithoutPerguntafichaavaliacaoInput
  }

  export type PerguntaFichaAvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput = {
    id?: number
    competenciaId?: number | null
    descricao: string
    nivel_esperado: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PerguntaFichaAvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput = {
    where: PerguntaFichaAvaliacaoWhereUniqueInput
    create: XOR<PerguntaFichaAvaliacaoCreateWithoutFichaAvaliacaoInput, PerguntaFichaAvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput>
  }

  export type PerguntaFichaAvaliacaoCreateManyFichaAvaliacaoInputEnvelope = {
    data: PerguntaFichaAvaliacaoCreateManyFichaAvaliacaoInput | PerguntaFichaAvaliacaoCreateManyFichaAvaliacaoInput[]
    skipDuplicates?: boolean
  }

  export type AvaliacaoCreateWithoutFichaAvaliacaoInput = {
    Tipo_Avaliacao: $Enums.TipoAvaliacao
    status: $Enums.Status
    data?: Date | string
    comentario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Funcionario?: FuncionarioCreateNestedOneWithoutAvaliacaoInput
    Departamento?: DepartamentoCreateNestedOneWithoutAvaliacaoInput
  }

  export type AvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput = {
    id?: number
    id_funcionario_avaliador?: number | null
    id_departamento?: number | null
    Tipo_Avaliacao: $Enums.TipoAvaliacao
    status: $Enums.Status
    data?: Date | string
    comentario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AvaliacaoCreateOrConnectWithoutFichaAvaliacaoInput = {
    where: AvaliacaoWhereUniqueInput
    create: XOR<AvaliacaoCreateWithoutFichaAvaliacaoInput, AvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput>
  }

  export type AvaliacaoCreateManyFichaAvaliacaoInputEnvelope = {
    data: AvaliacaoCreateManyFichaAvaliacaoInput | AvaliacaoCreateManyFichaAvaliacaoInput[]
    skipDuplicates?: boolean
  }

  export type PerguntaFichaAvaliacaoUpsertWithWhereUniqueWithoutFichaAvaliacaoInput = {
    where: PerguntaFichaAvaliacaoWhereUniqueInput
    update: XOR<PerguntaFichaAvaliacaoUpdateWithoutFichaAvaliacaoInput, PerguntaFichaAvaliacaoUncheckedUpdateWithoutFichaAvaliacaoInput>
    create: XOR<PerguntaFichaAvaliacaoCreateWithoutFichaAvaliacaoInput, PerguntaFichaAvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput>
  }

  export type PerguntaFichaAvaliacaoUpdateWithWhereUniqueWithoutFichaAvaliacaoInput = {
    where: PerguntaFichaAvaliacaoWhereUniqueInput
    data: XOR<PerguntaFichaAvaliacaoUpdateWithoutFichaAvaliacaoInput, PerguntaFichaAvaliacaoUncheckedUpdateWithoutFichaAvaliacaoInput>
  }

  export type PerguntaFichaAvaliacaoUpdateManyWithWhereWithoutFichaAvaliacaoInput = {
    where: PerguntaFichaAvaliacaoScalarWhereInput
    data: XOR<PerguntaFichaAvaliacaoUpdateManyMutationInput, PerguntaFichaAvaliacaoUncheckedUpdateManyWithoutFichaAvaliacaoInput>
  }

  export type PerguntaFichaAvaliacaoScalarWhereInput = {
    AND?: PerguntaFichaAvaliacaoScalarWhereInput | PerguntaFichaAvaliacaoScalarWhereInput[]
    OR?: PerguntaFichaAvaliacaoScalarWhereInput[]
    NOT?: PerguntaFichaAvaliacaoScalarWhereInput | PerguntaFichaAvaliacaoScalarWhereInput[]
    id?: IntFilter<"PerguntaFichaAvaliacao"> | number
    competenciaId?: IntNullableFilter<"PerguntaFichaAvaliacao"> | number | null
    fichaAvaliacaoId?: IntNullableFilter<"PerguntaFichaAvaliacao"> | number | null
    descricao?: StringFilter<"PerguntaFichaAvaliacao"> | string
    nivel_esperado?: IntFilter<"PerguntaFichaAvaliacao"> | number
    createdAt?: DateTimeFilter<"PerguntaFichaAvaliacao"> | Date | string
    updatedAt?: DateTimeFilter<"PerguntaFichaAvaliacao"> | Date | string
  }

  export type AvaliacaoUpsertWithWhereUniqueWithoutFichaAvaliacaoInput = {
    where: AvaliacaoWhereUniqueInput
    update: XOR<AvaliacaoUpdateWithoutFichaAvaliacaoInput, AvaliacaoUncheckedUpdateWithoutFichaAvaliacaoInput>
    create: XOR<AvaliacaoCreateWithoutFichaAvaliacaoInput, AvaliacaoUncheckedCreateWithoutFichaAvaliacaoInput>
  }

  export type AvaliacaoUpdateWithWhereUniqueWithoutFichaAvaliacaoInput = {
    where: AvaliacaoWhereUniqueInput
    data: XOR<AvaliacaoUpdateWithoutFichaAvaliacaoInput, AvaliacaoUncheckedUpdateWithoutFichaAvaliacaoInput>
  }

  export type AvaliacaoUpdateManyWithWhereWithoutFichaAvaliacaoInput = {
    where: AvaliacaoScalarWhereInput
    data: XOR<AvaliacaoUpdateManyMutationInput, AvaliacaoUncheckedUpdateManyWithoutFichaAvaliacaoInput>
  }

  export type PerguntaFichaAvaliacaoCreateWithoutCompetenciaInput = {
    descricao: string
    nivel_esperado: number
    createdAt?: Date | string
    updatedAt?: Date | string
    FichaAvaliacao?: FichaAvaliacaoCreateNestedOneWithoutPerguntafichaavaliacaoInput
  }

  export type PerguntaFichaAvaliacaoUncheckedCreateWithoutCompetenciaInput = {
    id?: number
    fichaAvaliacaoId?: number | null
    descricao: string
    nivel_esperado: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PerguntaFichaAvaliacaoCreateOrConnectWithoutCompetenciaInput = {
    where: PerguntaFichaAvaliacaoWhereUniqueInput
    create: XOR<PerguntaFichaAvaliacaoCreateWithoutCompetenciaInput, PerguntaFichaAvaliacaoUncheckedCreateWithoutCompetenciaInput>
  }

  export type PerguntaFichaAvaliacaoCreateManyCompetenciaInputEnvelope = {
    data: PerguntaFichaAvaliacaoCreateManyCompetenciaInput | PerguntaFichaAvaliacaoCreateManyCompetenciaInput[]
    skipDuplicates?: boolean
  }

  export type PerguntaFichaAvaliacaoUpsertWithWhereUniqueWithoutCompetenciaInput = {
    where: PerguntaFichaAvaliacaoWhereUniqueInput
    update: XOR<PerguntaFichaAvaliacaoUpdateWithoutCompetenciaInput, PerguntaFichaAvaliacaoUncheckedUpdateWithoutCompetenciaInput>
    create: XOR<PerguntaFichaAvaliacaoCreateWithoutCompetenciaInput, PerguntaFichaAvaliacaoUncheckedCreateWithoutCompetenciaInput>
  }

  export type PerguntaFichaAvaliacaoUpdateWithWhereUniqueWithoutCompetenciaInput = {
    where: PerguntaFichaAvaliacaoWhereUniqueInput
    data: XOR<PerguntaFichaAvaliacaoUpdateWithoutCompetenciaInput, PerguntaFichaAvaliacaoUncheckedUpdateWithoutCompetenciaInput>
  }

  export type PerguntaFichaAvaliacaoUpdateManyWithWhereWithoutCompetenciaInput = {
    where: PerguntaFichaAvaliacaoScalarWhereInput
    data: XOR<PerguntaFichaAvaliacaoUpdateManyMutationInput, PerguntaFichaAvaliacaoUncheckedUpdateManyWithoutCompetenciaInput>
  }

  export type CompetenciaCreateWithoutPerguntafichaavaliacaoInput = {
    nome_competencia: string
    criterio: $Enums.Criterio
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CompetenciaUncheckedCreateWithoutPerguntafichaavaliacaoInput = {
    id?: number
    nome_competencia: string
    criterio: $Enums.Criterio
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CompetenciaCreateOrConnectWithoutPerguntafichaavaliacaoInput = {
    where: CompetenciaWhereUniqueInput
    create: XOR<CompetenciaCreateWithoutPerguntafichaavaliacaoInput, CompetenciaUncheckedCreateWithoutPerguntafichaavaliacaoInput>
  }

  export type FichaAvaliacaoCreateWithoutPerguntafichaavaliacaoInput = {
    nome_ficha: string
    objetivo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    avaliacao?: AvaliacaoCreateNestedManyWithoutFichaAvaliacaoInput
  }

  export type FichaAvaliacaoUncheckedCreateWithoutPerguntafichaavaliacaoInput = {
    id?: number
    nome_ficha: string
    objetivo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutFichaAvaliacaoInput
  }

  export type FichaAvaliacaoCreateOrConnectWithoutPerguntafichaavaliacaoInput = {
    where: FichaAvaliacaoWhereUniqueInput
    create: XOR<FichaAvaliacaoCreateWithoutPerguntafichaavaliacaoInput, FichaAvaliacaoUncheckedCreateWithoutPerguntafichaavaliacaoInput>
  }

  export type CompetenciaUpsertWithoutPerguntafichaavaliacaoInput = {
    update: XOR<CompetenciaUpdateWithoutPerguntafichaavaliacaoInput, CompetenciaUncheckedUpdateWithoutPerguntafichaavaliacaoInput>
    create: XOR<CompetenciaCreateWithoutPerguntafichaavaliacaoInput, CompetenciaUncheckedCreateWithoutPerguntafichaavaliacaoInput>
    where?: CompetenciaWhereInput
  }

  export type CompetenciaUpdateToOneWithWhereWithoutPerguntafichaavaliacaoInput = {
    where?: CompetenciaWhereInput
    data: XOR<CompetenciaUpdateWithoutPerguntafichaavaliacaoInput, CompetenciaUncheckedUpdateWithoutPerguntafichaavaliacaoInput>
  }

  export type CompetenciaUpdateWithoutPerguntafichaavaliacaoInput = {
    nome_competencia?: StringFieldUpdateOperationsInput | string
    criterio?: EnumCriterioFieldUpdateOperationsInput | $Enums.Criterio
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompetenciaUncheckedUpdateWithoutPerguntafichaavaliacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_competencia?: StringFieldUpdateOperationsInput | string
    criterio?: EnumCriterioFieldUpdateOperationsInput | $Enums.Criterio
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FichaAvaliacaoUpsertWithoutPerguntafichaavaliacaoInput = {
    update: XOR<FichaAvaliacaoUpdateWithoutPerguntafichaavaliacaoInput, FichaAvaliacaoUncheckedUpdateWithoutPerguntafichaavaliacaoInput>
    create: XOR<FichaAvaliacaoCreateWithoutPerguntafichaavaliacaoInput, FichaAvaliacaoUncheckedCreateWithoutPerguntafichaavaliacaoInput>
    where?: FichaAvaliacaoWhereInput
  }

  export type FichaAvaliacaoUpdateToOneWithWhereWithoutPerguntafichaavaliacaoInput = {
    where?: FichaAvaliacaoWhereInput
    data: XOR<FichaAvaliacaoUpdateWithoutPerguntafichaavaliacaoInput, FichaAvaliacaoUncheckedUpdateWithoutPerguntafichaavaliacaoInput>
  }

  export type FichaAvaliacaoUpdateWithoutPerguntafichaavaliacaoInput = {
    nome_ficha?: StringFieldUpdateOperationsInput | string
    objetivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliacao?: AvaliacaoUpdateManyWithoutFichaAvaliacaoNestedInput
  }

  export type FichaAvaliacaoUncheckedUpdateWithoutPerguntafichaavaliacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_ficha?: StringFieldUpdateOperationsInput | string
    objetivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliacao?: AvaliacaoUncheckedUpdateManyWithoutFichaAvaliacaoNestedInput
  }

  export type FuncionarioCreateWithoutAvaliacaoInput = {
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    num_conta?: string | null
    iban?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Funcao?: FuncaoCreateNestedOneWithoutFuncionarioInput
    Categoria?: CategoriaRHCreateNestedOneWithoutFuncionarioInput
    dadosprofissionais?: DadosProfissionaisCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoCreateNestedManyWithoutFuncionarioInput
    Banco?: BancoCreateNestedOneWithoutFuncionarioInput
  }

  export type FuncionarioUncheckedCreateWithoutAvaliacaoInput = {
    id?: number
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    id_funcao?: number | null
    id_categoria?: number | null
    num_conta?: string | null
    iban?: string | null
    Id_banco?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedCreateNestedManyWithoutFuncionarioInput
    formacoes?: FormacoesUncheckedCreateNestedManyWithoutFuncionarioInput
    esperiencialaboral?: ExperiencialLaboralUncheckedCreateNestedManyWithoutFuncionarioInput
    departamentosComoChefe?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_chefeInput
    departamentosComoSupervisor?: DepartamentoUncheckedCreateNestedManyWithoutFuncionario_supervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioCreateOrConnectWithoutAvaliacaoInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutAvaliacaoInput, FuncionarioUncheckedCreateWithoutAvaliacaoInput>
  }

  export type FichaAvaliacaoCreateWithoutAvaliacaoInput = {
    nome_ficha: string
    objetivo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoCreateNestedManyWithoutFichaAvaliacaoInput
  }

  export type FichaAvaliacaoUncheckedCreateWithoutAvaliacaoInput = {
    id?: number
    nome_ficha: string
    objetivo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoUncheckedCreateNestedManyWithoutFichaAvaliacaoInput
  }

  export type FichaAvaliacaoCreateOrConnectWithoutAvaliacaoInput = {
    where: FichaAvaliacaoWhereUniqueInput
    create: XOR<FichaAvaliacaoCreateWithoutAvaliacaoInput, FichaAvaliacaoUncheckedCreateWithoutAvaliacaoInput>
  }

  export type DepartamentoCreateWithoutAvaliacaoInput = {
    nome_departamento: string
    createdAt?: Date | string
    updatedAt?: Date | string
    funcionario_chefe?: FuncionarioCreateNestedOneWithoutDepartamentosComoChefeInput
    funcionario_supervisor?: FuncionarioCreateNestedOneWithoutDepartamentosComoSupervisorInput
    funcionariodepartamento?: FuncionarioDepartamentoCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoUncheckedCreateWithoutAvaliacaoInput = {
    id?: number
    nome_departamento: string
    Id_funcionario_chefe?: number | null
    Id_funcionario_supervisor?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoCreateOrConnectWithoutAvaliacaoInput = {
    where: DepartamentoWhereUniqueInput
    create: XOR<DepartamentoCreateWithoutAvaliacaoInput, DepartamentoUncheckedCreateWithoutAvaliacaoInput>
  }

  export type FuncionarioUpsertWithoutAvaliacaoInput = {
    update: XOR<FuncionarioUpdateWithoutAvaliacaoInput, FuncionarioUncheckedUpdateWithoutAvaliacaoInput>
    create: XOR<FuncionarioCreateWithoutAvaliacaoInput, FuncionarioUncheckedCreateWithoutAvaliacaoInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutAvaliacaoInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutAvaliacaoInput, FuncionarioUncheckedUpdateWithoutAvaliacaoInput>
  }

  export type FuncionarioUpdateWithoutAvaliacaoInput = {
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Funcao?: FuncaoUpdateOneWithoutFuncionarioNestedInput
    Categoria?: CategoriaRHUpdateOneWithoutFuncionarioNestedInput
    dadosprofissionais?: DadosProfissionaisUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUpdateManyWithoutFuncionarioNestedInput
    Banco?: BancoUpdateOneWithoutFuncionarioNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutAvaliacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    id_funcao?: NullableIntFieldUpdateOperationsInput | number | null
    id_categoria?: NullableIntFieldUpdateOperationsInput | number | null
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    Id_banco?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUncheckedUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUncheckedUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUncheckedUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUncheckedUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedUpdateManyWithoutFuncionarioNestedInput
  }

  export type FichaAvaliacaoUpsertWithoutAvaliacaoInput = {
    update: XOR<FichaAvaliacaoUpdateWithoutAvaliacaoInput, FichaAvaliacaoUncheckedUpdateWithoutAvaliacaoInput>
    create: XOR<FichaAvaliacaoCreateWithoutAvaliacaoInput, FichaAvaliacaoUncheckedCreateWithoutAvaliacaoInput>
    where?: FichaAvaliacaoWhereInput
  }

  export type FichaAvaliacaoUpdateToOneWithWhereWithoutAvaliacaoInput = {
    where?: FichaAvaliacaoWhereInput
    data: XOR<FichaAvaliacaoUpdateWithoutAvaliacaoInput, FichaAvaliacaoUncheckedUpdateWithoutAvaliacaoInput>
  }

  export type FichaAvaliacaoUpdateWithoutAvaliacaoInput = {
    nome_ficha?: StringFieldUpdateOperationsInput | string
    objetivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoUpdateManyWithoutFichaAvaliacaoNestedInput
  }

  export type FichaAvaliacaoUncheckedUpdateWithoutAvaliacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_ficha?: StringFieldUpdateOperationsInput | string
    objetivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    perguntafichaavaliacao?: PerguntaFichaAvaliacaoUncheckedUpdateManyWithoutFichaAvaliacaoNestedInput
  }

  export type DepartamentoUpsertWithoutAvaliacaoInput = {
    update: XOR<DepartamentoUpdateWithoutAvaliacaoInput, DepartamentoUncheckedUpdateWithoutAvaliacaoInput>
    create: XOR<DepartamentoCreateWithoutAvaliacaoInput, DepartamentoUncheckedCreateWithoutAvaliacaoInput>
    where?: DepartamentoWhereInput
  }

  export type DepartamentoUpdateToOneWithWhereWithoutAvaliacaoInput = {
    where?: DepartamentoWhereInput
    data: XOR<DepartamentoUpdateWithoutAvaliacaoInput, DepartamentoUncheckedUpdateWithoutAvaliacaoInput>
  }

  export type DepartamentoUpdateWithoutAvaliacaoInput = {
    nome_departamento?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario_chefe?: FuncionarioUpdateOneWithoutDepartamentosComoChefeNestedInput
    funcionario_supervisor?: FuncionarioUpdateOneWithoutDepartamentosComoSupervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoUncheckedUpdateWithoutAvaliacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_departamento?: StringFieldUpdateOperationsInput | string
    Id_funcionario_chefe?: NullableIntFieldUpdateOperationsInput | number | null
    Id_funcionario_supervisor?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedUpdateManyWithoutDepartamentoNestedInput
  }

  export type SubCarreiraCreateManyCarreiraInput = {
    id?: number
    nome_SubCarreira: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoriaRHCreateManyCarreiraInput = {
    id?: number
    nome_categoria: string
    salario_base: number
    Id_subCarreira?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubCarreiraUpdateWithoutCarreiraInput = {
    nome_SubCarreira?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: CategoriaRHUpdateManyWithoutSubCarreiraNestedInput
  }

  export type SubCarreiraUncheckedUpdateWithoutCarreiraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_SubCarreira?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: CategoriaRHUncheckedUpdateManyWithoutSubCarreiraNestedInput
  }

  export type SubCarreiraUncheckedUpdateManyWithoutCarreiraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_SubCarreira?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoriaRHUpdateWithoutCarreiraInput = {
    nome_categoria?: StringFieldUpdateOperationsInput | string
    salario_base?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    SubCarreira?: SubCarreiraUpdateOneWithoutCategoriaNestedInput
    funcionario?: FuncionarioUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaRHUncheckedUpdateWithoutCarreiraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_categoria?: StringFieldUpdateOperationsInput | string
    salario_base?: FloatFieldUpdateOperationsInput | number
    Id_subCarreira?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario?: FuncionarioUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaRHUncheckedUpdateManyWithoutCarreiraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_categoria?: StringFieldUpdateOperationsInput | string
    salario_base?: FloatFieldUpdateOperationsInput | number
    Id_subCarreira?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoriaRHCreateManySubCarreiraInput = {
    id?: number
    nome_categoria: string
    salario_base: number
    Id_carreira?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoriaRHUpdateWithoutSubCarreiraInput = {
    nome_categoria?: StringFieldUpdateOperationsInput | string
    salario_base?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Carreira?: CarreiraUpdateOneWithoutCateroriaNestedInput
    funcionario?: FuncionarioUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaRHUncheckedUpdateWithoutSubCarreiraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_categoria?: StringFieldUpdateOperationsInput | string
    salario_base?: FloatFieldUpdateOperationsInput | number
    Id_carreira?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario?: FuncionarioUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaRHUncheckedUpdateManyWithoutSubCarreiraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_categoria?: StringFieldUpdateOperationsInput | string
    salario_base?: FloatFieldUpdateOperationsInput | number
    Id_carreira?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioCreateManyCategoriaInput = {
    id?: number
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    id_funcao?: number | null
    num_conta?: string | null
    iban?: string | null
    Id_banco?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FuncionarioUpdateWithoutCategoriaInput = {
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Funcao?: FuncaoUpdateOneWithoutFuncionarioNestedInput
    dadosprofissionais?: DadosProfissionaisUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUpdateManyWithoutFuncionarioNestedInput
    Banco?: BancoUpdateOneWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    id_funcao?: NullableIntFieldUpdateOperationsInput | number | null
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    Id_banco?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUncheckedUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUncheckedUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUncheckedUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUncheckedUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedUpdateManyWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUncheckedUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioUncheckedUpdateManyWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    id_funcao?: NullableIntFieldUpdateOperationsInput | number | null
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    Id_banco?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioCreateManyFuncaoInput = {
    id?: number
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    id_categoria?: number | null
    num_conta?: string | null
    iban?: string | null
    Id_banco?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FuncionarioUpdateWithoutFuncaoInput = {
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Categoria?: CategoriaRHUpdateOneWithoutFuncionarioNestedInput
    dadosprofissionais?: DadosProfissionaisUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUpdateManyWithoutFuncionarioNestedInput
    Banco?: BancoUpdateOneWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutFuncaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    id_categoria?: NullableIntFieldUpdateOperationsInput | number | null
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    Id_banco?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUncheckedUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUncheckedUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUncheckedUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUncheckedUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedUpdateManyWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUncheckedUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioUncheckedUpdateManyWithoutFuncaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    id_categoria?: NullableIntFieldUpdateOperationsInput | number | null
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    Id_banco?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioCreateManyBancoInput = {
    id?: number
    nome_completo: string
    nome_pai: string
    nome_mae: string
    nascimento: Date | string
    email: string
    genero: $Enums.Genero
    tipo_identificacao: $Enums.Identificacao
    num_identificacao: string
    nivel_academico: $Enums.NIVEL_ACADEMICO
    avatar?: string | null
    telefone1: string
    telefone2?: string | null
    linkedin?: string | null
    whatsApp?: string | null
    instagram?: string | null
    bairro: string
    rua: string
    id_funcao?: number | null
    id_categoria?: number | null
    num_conta?: string | null
    iban?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FuncionarioUpdateWithoutBancoInput = {
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Funcao?: FuncaoUpdateOneWithoutFuncionarioNestedInput
    Categoria?: CategoriaRHUpdateOneWithoutFuncionarioNestedInput
    dadosprofissionais?: DadosProfissionaisUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUpdateManyWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutBancoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    id_funcao?: NullableIntFieldUpdateOperationsInput | number | null
    id_categoria?: NullableIntFieldUpdateOperationsInput | number | null
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dadosprofissionais?: DadosProfissionaisUncheckedUpdateManyWithoutFuncionarioNestedInput
    formacoes?: FormacoesUncheckedUpdateManyWithoutFuncionarioNestedInput
    esperiencialaboral?: ExperiencialLaboralUncheckedUpdateManyWithoutFuncionarioNestedInput
    departamentosComoChefe?: DepartamentoUncheckedUpdateManyWithoutFuncionario_chefeNestedInput
    departamentosComoSupervisor?: DepartamentoUncheckedUpdateManyWithoutFuncionario_supervisorNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedUpdateManyWithoutFuncionarioNestedInput
    avaliacao?: AvaliacaoUncheckedUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioUncheckedUpdateManyWithoutBancoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_completo?: StringFieldUpdateOperationsInput | string
    nome_pai?: StringFieldUpdateOperationsInput | string
    nome_mae?: StringFieldUpdateOperationsInput | string
    nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    tipo_identificacao?: EnumIdentificacaoFieldUpdateOperationsInput | $Enums.Identificacao
    num_identificacao?: StringFieldUpdateOperationsInput | string
    nivel_academico?: EnumNIVEL_ACADEMICOFieldUpdateOperationsInput | $Enums.NIVEL_ACADEMICO
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    telefone1?: StringFieldUpdateOperationsInput | string
    telefone2?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    whatsApp?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    rua?: StringFieldUpdateOperationsInput | string
    id_funcao?: NullableIntFieldUpdateOperationsInput | number | null
    id_categoria?: NullableIntFieldUpdateOperationsInput | number | null
    num_conta?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DadosProfissionaisCreateManyFuncionarioInput = {
    id?: number
    data_admissao: Date | string
    numero_despacho?: string | null
    data_despacho: Date | string
    contrato: $Enums.Contrato
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FormacoesCreateManyFuncionarioInput = {
    id?: number
    ano_inicio: Date | string
    ano_termino: Date | string
    formacao: string
    pais: string
    instituicao: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ExperiencialLaboralCreateManyFuncionarioInput = {
    id?: number
    ano_inicio: Date | string
    ano_termino: Date | string
    funcao: string
    instituicao: string
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DepartamentoCreateManyFuncionario_chefeInput = {
    id?: number
    nome_departamento: string
    Id_funcionario_supervisor?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DepartamentoCreateManyFuncionario_supervisorInput = {
    id?: number
    nome_departamento: string
    Id_funcionario_chefe?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FuncionarioDepartamentoCreateManyFuncionarioInput = {
    id?: number
    Id_departamento?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AvaliacaoCreateManyFuncionarioInput = {
    id?: number
    id_fichaAvaliacao?: number | null
    id_departamento?: number | null
    Tipo_Avaliacao: $Enums.TipoAvaliacao
    status: $Enums.Status
    data?: Date | string
    comentario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DadosProfissionaisUpdateWithoutFuncionarioInput = {
    data_admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    numero_despacho?: NullableStringFieldUpdateOperationsInput | string | null
    data_despacho?: DateTimeFieldUpdateOperationsInput | Date | string
    contrato?: EnumContratoFieldUpdateOperationsInput | $Enums.Contrato
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DadosProfissionaisUncheckedUpdateWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    numero_despacho?: NullableStringFieldUpdateOperationsInput | string | null
    data_despacho?: DateTimeFieldUpdateOperationsInput | Date | string
    contrato?: EnumContratoFieldUpdateOperationsInput | $Enums.Contrato
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DadosProfissionaisUncheckedUpdateManyWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    numero_despacho?: NullableStringFieldUpdateOperationsInput | string | null
    data_despacho?: DateTimeFieldUpdateOperationsInput | Date | string
    contrato?: EnumContratoFieldUpdateOperationsInput | $Enums.Contrato
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormacoesUpdateWithoutFuncionarioInput = {
    ano_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    ano_termino?: DateTimeFieldUpdateOperationsInput | Date | string
    formacao?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    instituicao?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormacoesUncheckedUpdateWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ano_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    ano_termino?: DateTimeFieldUpdateOperationsInput | Date | string
    formacao?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    instituicao?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormacoesUncheckedUpdateManyWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ano_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    ano_termino?: DateTimeFieldUpdateOperationsInput | Date | string
    formacao?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    instituicao?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExperiencialLaboralUpdateWithoutFuncionarioInput = {
    ano_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    ano_termino?: DateTimeFieldUpdateOperationsInput | Date | string
    funcao?: StringFieldUpdateOperationsInput | string
    instituicao?: StringFieldUpdateOperationsInput | string
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExperiencialLaboralUncheckedUpdateWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ano_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    ano_termino?: DateTimeFieldUpdateOperationsInput | Date | string
    funcao?: StringFieldUpdateOperationsInput | string
    instituicao?: StringFieldUpdateOperationsInput | string
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExperiencialLaboralUncheckedUpdateManyWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ano_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    ano_termino?: DateTimeFieldUpdateOperationsInput | Date | string
    funcao?: StringFieldUpdateOperationsInput | string
    instituicao?: StringFieldUpdateOperationsInput | string
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DepartamentoUpdateWithoutFuncionario_chefeInput = {
    nome_departamento?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario_supervisor?: FuncionarioUpdateOneWithoutDepartamentosComoSupervisorNestedInput
    avaliacao?: AvaliacaoUpdateManyWithoutDepartamentoNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoUncheckedUpdateWithoutFuncionario_chefeInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_departamento?: StringFieldUpdateOperationsInput | string
    Id_funcionario_supervisor?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliacao?: AvaliacaoUncheckedUpdateManyWithoutDepartamentoNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoUncheckedUpdateManyWithoutFuncionario_chefeInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_departamento?: StringFieldUpdateOperationsInput | string
    Id_funcionario_supervisor?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DepartamentoUpdateWithoutFuncionario_supervisorInput = {
    nome_departamento?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario_chefe?: FuncionarioUpdateOneWithoutDepartamentosComoChefeNestedInput
    avaliacao?: AvaliacaoUpdateManyWithoutDepartamentoNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoUncheckedUpdateWithoutFuncionario_supervisorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_departamento?: StringFieldUpdateOperationsInput | string
    Id_funcionario_chefe?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliacao?: AvaliacaoUncheckedUpdateManyWithoutDepartamentoNestedInput
    funcionariodepartamento?: FuncionarioDepartamentoUncheckedUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoUncheckedUpdateManyWithoutFuncionario_supervisorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_departamento?: StringFieldUpdateOperationsInput | string
    Id_funcionario_chefe?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioDepartamentoUpdateWithoutFuncionarioInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Departamento?: DepartamentoUpdateOneWithoutFuncionariodepartamentoNestedInput
  }

  export type FuncionarioDepartamentoUncheckedUpdateWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    Id_departamento?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioDepartamentoUncheckedUpdateManyWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    Id_departamento?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AvaliacaoUpdateWithoutFuncionarioInput = {
    Tipo_Avaliacao?: EnumTipoAvaliacaoFieldUpdateOperationsInput | $Enums.TipoAvaliacao
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FichaAvaliacao?: FichaAvaliacaoUpdateOneWithoutAvaliacaoNestedInput
    Departamento?: DepartamentoUpdateOneWithoutAvaliacaoNestedInput
  }

  export type AvaliacaoUncheckedUpdateWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_fichaAvaliacao?: NullableIntFieldUpdateOperationsInput | number | null
    id_departamento?: NullableIntFieldUpdateOperationsInput | number | null
    Tipo_Avaliacao?: EnumTipoAvaliacaoFieldUpdateOperationsInput | $Enums.TipoAvaliacao
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AvaliacaoUncheckedUpdateManyWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_fichaAvaliacao?: NullableIntFieldUpdateOperationsInput | number | null
    id_departamento?: NullableIntFieldUpdateOperationsInput | number | null
    Tipo_Avaliacao?: EnumTipoAvaliacaoFieldUpdateOperationsInput | $Enums.TipoAvaliacao
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AvaliacaoCreateManyDepartamentoInput = {
    id?: number
    id_funcionario_avaliador?: number | null
    id_fichaAvaliacao?: number | null
    Tipo_Avaliacao: $Enums.TipoAvaliacao
    status: $Enums.Status
    data?: Date | string
    comentario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FuncionarioDepartamentoCreateManyDepartamentoInput = {
    id?: number
    Id_funcionario?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AvaliacaoUpdateWithoutDepartamentoInput = {
    Tipo_Avaliacao?: EnumTipoAvaliacaoFieldUpdateOperationsInput | $Enums.TipoAvaliacao
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Funcionario?: FuncionarioUpdateOneWithoutAvaliacaoNestedInput
    FichaAvaliacao?: FichaAvaliacaoUpdateOneWithoutAvaliacaoNestedInput
  }

  export type AvaliacaoUncheckedUpdateWithoutDepartamentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_funcionario_avaliador?: NullableIntFieldUpdateOperationsInput | number | null
    id_fichaAvaliacao?: NullableIntFieldUpdateOperationsInput | number | null
    Tipo_Avaliacao?: EnumTipoAvaliacaoFieldUpdateOperationsInput | $Enums.TipoAvaliacao
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AvaliacaoUncheckedUpdateManyWithoutDepartamentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_funcionario_avaliador?: NullableIntFieldUpdateOperationsInput | number | null
    id_fichaAvaliacao?: NullableIntFieldUpdateOperationsInput | number | null
    Tipo_Avaliacao?: EnumTipoAvaliacaoFieldUpdateOperationsInput | $Enums.TipoAvaliacao
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioDepartamentoUpdateWithoutDepartamentoInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Funcionario?: FuncionarioUpdateOneWithoutFuncionariodepartamentoNestedInput
  }

  export type FuncionarioDepartamentoUncheckedUpdateWithoutDepartamentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    Id_funcionario?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioDepartamentoUncheckedUpdateManyWithoutDepartamentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    Id_funcionario?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PerguntaFichaAvaliacaoCreateManyFichaAvaliacaoInput = {
    id?: number
    competenciaId?: number | null
    descricao: string
    nivel_esperado: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AvaliacaoCreateManyFichaAvaliacaoInput = {
    id?: number
    id_funcionario_avaliador?: number | null
    id_departamento?: number | null
    Tipo_Avaliacao: $Enums.TipoAvaliacao
    status: $Enums.Status
    data?: Date | string
    comentario?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PerguntaFichaAvaliacaoUpdateWithoutFichaAvaliacaoInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    nivel_esperado?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Competencia?: CompetenciaUpdateOneWithoutPerguntafichaavaliacaoNestedInput
  }

  export type PerguntaFichaAvaliacaoUncheckedUpdateWithoutFichaAvaliacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    competenciaId?: NullableIntFieldUpdateOperationsInput | number | null
    descricao?: StringFieldUpdateOperationsInput | string
    nivel_esperado?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PerguntaFichaAvaliacaoUncheckedUpdateManyWithoutFichaAvaliacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    competenciaId?: NullableIntFieldUpdateOperationsInput | number | null
    descricao?: StringFieldUpdateOperationsInput | string
    nivel_esperado?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AvaliacaoUpdateWithoutFichaAvaliacaoInput = {
    Tipo_Avaliacao?: EnumTipoAvaliacaoFieldUpdateOperationsInput | $Enums.TipoAvaliacao
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Funcionario?: FuncionarioUpdateOneWithoutAvaliacaoNestedInput
    Departamento?: DepartamentoUpdateOneWithoutAvaliacaoNestedInput
  }

  export type AvaliacaoUncheckedUpdateWithoutFichaAvaliacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_funcionario_avaliador?: NullableIntFieldUpdateOperationsInput | number | null
    id_departamento?: NullableIntFieldUpdateOperationsInput | number | null
    Tipo_Avaliacao?: EnumTipoAvaliacaoFieldUpdateOperationsInput | $Enums.TipoAvaliacao
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AvaliacaoUncheckedUpdateManyWithoutFichaAvaliacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_funcionario_avaliador?: NullableIntFieldUpdateOperationsInput | number | null
    id_departamento?: NullableIntFieldUpdateOperationsInput | number | null
    Tipo_Avaliacao?: EnumTipoAvaliacaoFieldUpdateOperationsInput | $Enums.TipoAvaliacao
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PerguntaFichaAvaliacaoCreateManyCompetenciaInput = {
    id?: number
    fichaAvaliacaoId?: number | null
    descricao: string
    nivel_esperado: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PerguntaFichaAvaliacaoUpdateWithoutCompetenciaInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    nivel_esperado?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FichaAvaliacao?: FichaAvaliacaoUpdateOneWithoutPerguntafichaavaliacaoNestedInput
  }

  export type PerguntaFichaAvaliacaoUncheckedUpdateWithoutCompetenciaInput = {
    id?: IntFieldUpdateOperationsInput | number
    fichaAvaliacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    descricao?: StringFieldUpdateOperationsInput | string
    nivel_esperado?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PerguntaFichaAvaliacaoUncheckedUpdateManyWithoutCompetenciaInput = {
    id?: IntFieldUpdateOperationsInput | number
    fichaAvaliacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    descricao?: StringFieldUpdateOperationsInput | string
    nivel_esperado?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use CarreiraCountOutputTypeDefaultArgs instead
     */
    export type CarreiraCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CarreiraCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SubCarreiraCountOutputTypeDefaultArgs instead
     */
    export type SubCarreiraCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SubCarreiraCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoriaRHCountOutputTypeDefaultArgs instead
     */
    export type CategoriaRHCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoriaRHCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FuncaoCountOutputTypeDefaultArgs instead
     */
    export type FuncaoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FuncaoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BancoCountOutputTypeDefaultArgs instead
     */
    export type BancoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BancoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FuncionarioCountOutputTypeDefaultArgs instead
     */
    export type FuncionarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FuncionarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DepartamentoCountOutputTypeDefaultArgs instead
     */
    export type DepartamentoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DepartamentoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FichaAvaliacaoCountOutputTypeDefaultArgs instead
     */
    export type FichaAvaliacaoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FichaAvaliacaoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CompetenciaCountOutputTypeDefaultArgs instead
     */
    export type CompetenciaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompetenciaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CarreiraDefaultArgs instead
     */
    export type CarreiraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CarreiraDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SubCarreiraDefaultArgs instead
     */
    export type SubCarreiraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SubCarreiraDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoriaRHDefaultArgs instead
     */
    export type CategoriaRHArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoriaRHDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FuncaoDefaultArgs instead
     */
    export type FuncaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FuncaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BancoDefaultArgs instead
     */
    export type BancoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BancoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FuncionarioDefaultArgs instead
     */
    export type FuncionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FuncionarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DadosProfissionaisDefaultArgs instead
     */
    export type DadosProfissionaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DadosProfissionaisDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FormacoesDefaultArgs instead
     */
    export type FormacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FormacoesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PublicacoesDefaultArgs instead
     */
    export type PublicacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PublicacoesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ExperiencialLaboralDefaultArgs instead
     */
    export type ExperiencialLaboralArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ExperiencialLaboralDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DepartamentoDefaultArgs instead
     */
    export type DepartamentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DepartamentoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FuncionarioDepartamentoDefaultArgs instead
     */
    export type FuncionarioDepartamentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FuncionarioDepartamentoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FichaAvaliacaoDefaultArgs instead
     */
    export type FichaAvaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FichaAvaliacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CompetenciaDefaultArgs instead
     */
    export type CompetenciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompetenciaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PerguntaFichaAvaliacaoDefaultArgs instead
     */
    export type PerguntaFichaAvaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PerguntaFichaAvaliacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AvaliacaoDefaultArgs instead
     */
    export type AvaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AvaliacaoDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}